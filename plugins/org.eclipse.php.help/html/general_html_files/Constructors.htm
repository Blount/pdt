<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Constructors</title>

<!--(Meta)==========================================================-->

<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=424>
<meta name=layout-width content=668>


<!--(Links)=========================================================-->

<link rel=StyleSheet href=default.css>



</head>

<!--(Body)==========================================================-->


<body>

<h2>Constructors</h2>

<p>It is possible to automatically execute a function when the class is 
 called to create a new object. This is referred to as a constructor. In 
 order to use it, your PHP 5 class definition must contain a special function, 
 __construct(). </p>

<p><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Example 
 PHP 5</p>

<p>For example, if you'd like all newly born bears to be brown and weigh 
 100 units, you could add this to your class definition: </p>

<p>In PHP 4, your constructor must have the same name as the class. Here's 
 the equivalent code for PHP 4:</p>

<p><!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->Example 
 PHP 4</p>

<p>Constructors automatically set default properties every time an object 
 of the class is instantiated. Therefore, when you create a new Bear, your 
 bear will be brown and weigh 100 units at birth.</p>

</body>

</html>
