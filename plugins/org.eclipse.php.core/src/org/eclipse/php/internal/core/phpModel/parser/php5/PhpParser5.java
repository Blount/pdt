
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Tue Mar 11 11:46:26 GMT+02:00 2008
//----------------------------------------------------

package org.eclipse.php.internal.core.phpModel.parser.php5;

import java_cup.runtime.Symbol;
import java.io.StringReader;
import java.util.StringTokenizer;
import org.eclipse.php.internal.core.phpModel.parser.CompletionLexer;
import org.eclipse.php.internal.core.phpModel.parser.ParserClient;
import org.eclipse.php.internal.core.phpModel.parser.PhpParser;
import org.eclipse.php.internal.core.phpModel.parser.IncludingType;
import org.eclipse.php.internal.core.phpModel.parser.phpdoc.DocumentorLexer;
import org.eclipse.php.internal.core.phpModel.phpElementData.PHPDocBlock;
import org.eclipse.php.internal.core.phpModel.phpElementData.PHPModifier;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Tue Mar 11 11:46:26 GMT+02:00 2008
  */
public class PhpParser5 extends java_cup.runtime.lr_parser implements PhpParser {

  /** Default constructor. */
  public PhpParser5() {super();}

  /** Constructor which sets the default scanner. */
  public PhpParser5(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public PhpParser5(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u0175\000\002\002\003\000\002\002\004\000\002\003" +
    "\004\000\002\003\002\000\002\004\003\000\002\004\003" +
    "\000\002\004\003\000\002\004\006\000\002\006\004\000" +
    "\002\006\002\000\002\007\003\000\002\007\003\000\002" +
    "\007\003\000\002\007\006\000\002\005\003\000\002\010" +
    "\005\000\002\010\011\000\002\010\014\000\002\010\007" +
    "\000\002\010\011\000\002\010\013\000\002\010\007\000" +
    "\002\010\004\000\002\010\005\000\002\010\004\000\002" +
    "\010\005\000\002\010\004\000\002\010\005\000\002\010" +
    "\005\000\002\010\005\000\002\010\005\000\002\010\005" +
    "\000\002\010\003\000\002\010\004\000\002\010\005\000" +
    "\002\010\007\000\002\010\012\000\002\010\012\000\002" +
    "\010\007\000\002\010\003\000\002\155\002\000\002\010" +
    "\020\000\002\010\005\000\002\010\003\000\002\010\003" +
    "\000\002\123\003\000\002\123\002\000\002\124\003\000" +
    "\002\124\004\000\002\156\002\000\002\125\013\000\002" +
    "\011\003\000\002\011\005\000\002\012\003\000\002\013" +
    "\003\000\002\013\005\000\002\120\003\000\002\121\003" +
    "\000\002\045\002\000\002\045\003\000\002\157\002\000" +
    "\002\160\002\000\002\126\015\000\002\161\002\000\002" +
    "\162\002\000\002\127\013\000\002\163\002\000\002\164" +
    "\002\000\002\127\012\000\002\130\003\000\002\130\004" +
    "\000\002\130\004\000\002\131\002\000\002\131\004\000" +
    "\002\104\003\000\002\105\002\000\002\105\004\000\002" +
    "\132\002\000\002\132\004\000\002\133\003\000\002\133" +
    "\005\000\002\014\002\000\002\014\004\000\002\015\003" +
    "\000\002\015\004\000\002\016\003\000\002\016\006\000" +
    "\002\017\003\000\002\017\006\000\002\020\003\000\002" +
    "\020\006\000\002\021\005\000\002\021\007\000\002\022" +
    "\005\000\002\022\006\000\002\022\006\000\002\022\007" +
    "\000\002\023\002\000\002\023\007\000\002\023\006\000" +
    "\002\024\003\000\002\024\003\000\002\025\003\000\002" +
    "\025\006\000\002\026\002\000\002\026\010\000\002\027" +
    "\002\000\002\027\011\000\002\030\002\000\002\030\004" +
    "\000\002\031\002\000\002\031\005\000\002\032\003\000" +
    "\002\032\002\000\002\033\003\000\002\033\005\000\002" +
    "\033\004\000\002\034\004\000\002\034\005\000\002\034" +
    "\006\000\002\034\007\000\002\034\003\000\002\134\002" +
    "\000\002\134\003\000\002\134\003\000\002\035\003\000" +
    "\002\035\002\000\002\036\003\000\002\036\003\000\002" +
    "\036\004\000\002\036\005\000\002\036\005\000\002\036" +
    "\006\000\002\040\005\000\002\040\003\000\002\041\003" +
    "\000\002\041\004\000\002\041\006\000\002\042\005\000" +
    "\002\042\007\000\002\042\003\000\002\042\005\000\002" +
    "\043\004\000\002\043\002\000\002\044\005\000\002\044" +
    "\004\000\002\165\002\000\002\166\002\000\002\044\014" +
    "\000\002\044\003\000\002\113\003\000\002\113\005\000" +
    "\002\136\003\000\002\136\003\000\002\112\002\000\002" +
    "\112\003\000\002\114\003\000\002\114\004\000\002\115" +
    "\003\000\002\115\003\000\002\115\003\000\002\115\003" +
    "\000\002\115\003\000\002\115\003\000\002\110\005\000" +
    "\002\110\007\000\002\110\003\000\002\110\005\000\002" +
    "\111\007\000\002\111\006\000\002\046\005\000\002\046" +
    "\003\000\002\047\002\000\002\047\003\000\002\050\005" +
    "\000\002\050\003\000\002\051\010\000\002\051\005\000" +
    "\002\051\006\000\002\051\010\000\002\051\005\000\002" +
    "\051\004\000\002\051\005\000\002\051\005\000\002\051" +
    "\005\000\002\051\005\000\002\051\005\000\002\051\005" +
    "\000\002\051\005\000\002\051\005\000\002\051\005\000" +
    "\002\051\005\000\002\051\005\000\002\051\004\000\002" +
    "\051\004\000\002\051\004\000\002\051\004\000\002\051" +
    "\005\000\002\051\005\000\002\051\005\000\002\051\005" +
    "\000\002\051\005\000\002\051\005\000\002\051\005\000" +
    "\002\051\005\000\002\051\005\000\002\051\005\000\002" +
    "\051\005\000\002\051\005\000\002\051\005\000\002\051" +
    "\005\000\002\051\005\000\002\051\005\000\002\051\004" +
    "\000\002\051\004\000\002\051\004\000\002\051\004\000" +
    "\002\051\005\000\002\051\005\000\002\051\005\000\002" +
    "\051\005\000\002\051\005\000\002\051\005\000\002\051" +
    "\005\000\002\051\005\000\002\051\005\000\002\051\005" +
    "\000\002\051\007\000\002\051\003\000\002\051\004\000" +
    "\002\051\004\000\002\051\004\000\002\051\004\000\002" +
    "\051\004\000\002\051\004\000\002\051\004\000\002\051" +
    "\004\000\002\051\004\000\002\051\003\000\002\051\006" +
    "\000\002\051\005\000\002\051\004\000\002\037\003\000" +
    "\002\037\003\000\002\037\004\000\002\037\005\000\002" +
    "\037\005\000\002\037\006\000\002\052\010\000\002\052" +
    "\010\000\002\052\006\000\002\052\006\000\002\052\010" +
    "\000\002\052\010\000\002\052\006\000\002\107\003\000" +
    "\002\145\003\000\002\145\003\000\002\147\006\000\002" +
    "\147\003\000\002\151\004\000\002\151\002\000\002\152" +
    "\004\000\002\053\002\000\002\053\004\000\002\053\005" +
    "\000\002\054\002\000\002\054\005\000\002\055\003\000" +
    "\002\055\003\000\002\055\003\000\002\055\003\000\002" +
    "\055\003\000\002\055\003\000\002\055\003\000\002\055" +
    "\003\000\002\056\003\000\002\056\003\000\002\056\004" +
    "\000\002\056\004\000\002\056\006\000\002\056\003\000" +
    "\002\153\005\000\002\057\003\000\002\057\003\000\002" +
    "\057\003\000\002\057\003\000\002\057\005\000\002\057" +
    "\005\000\002\060\002\000\002\060\004\000\002\061\002" +
    "\000\002\061\003\000\002\062\007\000\002\062\005\000" +
    "\002\062\005\000\002\062\003\000\002\063\003\000\002" +
    "\063\003\000\002\135\003\000\002\106\003\000\002\137" +
    "\003\000\002\122\007\000\002\122\003\000\002\117\004" +
    "\000\002\117\002\000\002\141\005\000\002\116\005\000" +
    "\002\116\002\000\002\140\003\000\002\140\004\000\002" +
    "\142\005\000\002\154\003\000\002\154\003\000\002\150" +
    "\003\000\002\150\004\000\002\150\003\000\002\064\006" +
    "\000\002\064\006\000\002\064\003\000\002\065\003\000" +
    "\002\065\006\000\002\066\002\000\002\066\003\000\002" +
    "\067\003\000\002\067\003\000\002\070\006\000\002\070" +
    "\006\000\002\070\003\000\002\071\003\000\002\071\005" +
    "\000\002\072\003\000\002\072\004\000\002\073\005\000" +
    "\002\073\003\000\002\074\003\000\002\074\006\000\002" +
    "\074\002\000\002\075\002\000\002\075\004\000\002\076" +
    "\007\000\002\076\005\000\002\076\005\000\002\076\003" +
    "\000\002\076\010\000\002\076\006\000\002\076\006\000" +
    "\002\076\004\000\002\077\004\000\002\077\004\000\002" +
    "\077\002\000\002\100\003\000\002\100\006\000\002\100" +
    "\005\000\002\100\005\000\002\100\010\000\002\100\005" +
    "\000\002\101\003\000\002\101\003\000\002\101\003\000" +
    "\002\102\006\000\002\102\006\000\002\102\004\000\002" +
    "\102\004\000\002\102\006\000\002\102\004\000\002\102" +
    "\004\000\002\143\003\000\002\143\005\000\002\146\005" +
    "\000\002\144\003\000\002\103\003\000\002\103\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u02e9\000\002\001\ufffe\000\004\002\u02eb\001\002\000" +
    "\222\003\115\004\140\005\151\006\106\007\011\010\034" +
    "\011\053\012\061\014\074\020\126\021\121\022\117\023" +
    "\044\025\033\027\101\031\152\034\103\036\127\042\055" +
    "\043\120\044\107\046\134\047\041\051\147\052\025\053" +
    "\012\055\076\056\143\057\030\060\057\061\032\062\137" +
    "\067\145\070\013\071\020\072\045\073\047\074\131\075" +
    "\006\076\035\101\064\105\024\106\056\107\027\110\067" +
    "\111\051\112\123\113\105\120\063\136\010\156\104\157" +
    "\066\163\141\164\015\166\052\167\146\170\026\171\132" +
    "\172\040\173\125\174\072\175\133\176\071\177\036\202" +
    "\075\206\042\207\062\210\017\214\144\217\100\220\112" +
    "\221\060\001\001\000\002\001\ufef1\000\004\214\u02e8\001" +
    "\002\000\002\001\uffda\000\002\001\ufef4\000\006\012\u02dd" +
    "\217\u02de\001\002\000\004\214\u02c8\001\002\000\002\001" +
    "\uff13\000\132\004\140\006\106\007\011\010\034\011\053" +
    "\012\061\020\126\034\103\056\143\057\030\067\145\070" +
    "\013\071\020\072\045\073\047\074\131\075\006\076\035" +
    "\106\056\107\027\110\067\111\051\112\123\113\105\120" +
    "\063\156\104\157\066\163\141\164\015\166\052\167\146" +
    "\170\026\171\132\172\040\173\125\174\072\175\133\176" +
    "\071\177\036\202\075\214\144\217\100\220\112\221\060" +
    "\001\002\000\070\033\260\115\247\116\267\117\240\135" +
    "\244\136\u02c6\137\241\140\261\141\242\142\251\143\262" +
    "\144\266\145\252\146\236\147\250\150\265\151\264\152" +
    "\245\153\263\154\257\155\253\156\270\157\246\160\256" +
    "\161\254\162\237\165\243\001\002\000\004\061\u02c5\001" +
    "\002\000\002\001\ufef0\000\002\001\ufec5\000\002\001\uffc8" +
    "\000\036\121\u012a\122\u012d\123\u012b\124\u0133\125\u012e\126" +
    "\u0134\127\u0130\130\u0132\131\u012c\132\u0129\133\u012f\134\u0131" +
    "\166\ufed4\167\ufed4\001\ufed6\000\002\001\uffd5\000\006\020" +
    "\u02c1\214\u02bf\001\002\000\132\004\140\006\106\007\011" +
    "\010\034\011\053\012\061\020\126\034\103\056\143\057" +
    "\030\067\145\070\013\071\020\072\045\073\047\074\131" +
    "\075\006\076\035\106\056\107\027\110\067\111\051\112" +
    "\123\113\105\120\063\156\104\157\066\163\141\164\015" +
    "\166\052\167\146\170\026\171\132\172\040\173\125\174" +
    "\072\175\133\176\071\177\036\202\075\214\144\217\100" +
    "\220\112\221\060\001\002\000\132\004\140\006\106\007" +
    "\011\010\034\011\053\012\061\020\126\034\103\056\143" +
    "\057\030\067\145\070\013\071\020\072\045\073\047\074" +
    "\131\075\006\076\035\106\056\107\027\110\067\111\051" +
    "\112\123\113\105\120\063\156\104\157\066\163\141\164" +
    "\015\166\052\167\146\170\026\171\132\172\040\173\125" +
    "\174\072\175\133\176\071\177\036\202\075\214\144\217" +
    "\100\220\112\221\060\001\002\000\004\214\u02ba\001\002" +
    "\000\004\104\u02b8\001\002\000\002\001\uffbc\000\004\214" +
    "\u02a7\001\002\000\006\104\uff02\214\u011f\001\ufe8e\000\002" +
    "\001\ufea3\000\132\004\140\006\106\007\011\010\034\011" +
    "\053\012\061\020\126\034\103\056\143\057\030\067\145" +
    "\070\013\071\020\072\045\073\047\074\131\075\006\076" +
    "\035\106\056\107\027\110\067\111\051\112\123\113\105" +
    "\120\063\156\104\157\066\163\141\164\015\166\052\167" +
    "\146\170\026\171\132\172\040\173\125\174\072\175\133" +
    "\176\071\177\036\202\075\214\144\217\100\220\112\221" +
    "\060\001\002\000\002\001\ufec9\000\132\004\140\006\106" +
    "\007\011\010\034\011\053\012\061\020\126\034\103\056" +
    "\143\057\030\067\145\070\013\071\020\072\045\073\047" +
    "\074\131\075\006\076\035\106\056\107\027\110\067\111" +
    "\051\112\123\113\105\120\063\156\104\157\066\163\141" +
    "\164\015\166\052\167\146\170\026\171\132\172\040\173" +
    "\125\174\072\175\133\176\071\177\036\202\075\214\144" +
    "\217\100\220\112\221\060\001\002\000\004\101\u028a\001" +
    "\002\000\004\012\u0281\001\002\000\002\001\ufec8\000\004" +
    "\214\u0278\001\002\000\002\001\ufeef\000\004\010\u026c\001" +
    "\002\000\002\001\ufeee\000\004\065\u0261\001\ufed2\000\004" +
    "\214\u025e\001\002\000\012\010\u011e\012\061\106\u011d\217" +
    "\100\001\002\000\002\001\ufee5\000\010\101\310\200\311" +
    "\214\ufecc\001\ufec7\000\134\004\140\006\106\007\011\010" +
    "\034\011\053\012\061\020\126\034\103\056\143\057\030" +
    "\067\145\070\013\071\020\072\045\073\047\074\131\075" +
    "\006\076\035\106\056\107\027\110\067\111\051\112\123" +
    "\113\105\120\063\136\u025a\156\104\157\066\163\141\164" +
    "\015\166\052\167\146\170\026\171\132\172\040\173\125" +
    "\174\072\175\133\176\071\177\036\202\075\214\144\217" +
    "\100\220\112\221\060\001\002\000\004\214\u014e\001\ufe8d" +
    "\000\004\214\u0257\001\002\000\002\001\ufea3\000\002\001" +
    "\ufe8f\000\004\061\u0254\001\002\000\132\004\140\006\106" +
    "\007\011\010\034\011\053\012\061\020\126\034\103\056" +
    "\143\057\030\067\145\070\013\071\020\072\045\073\047" +
    "\074\131\075\006\076\035\106\056\107\027\110\067\111" +
    "\051\112\123\113\105\120\063\156\104\157\066\163\141" +
    "\164\015\166\052\167\146\170\026\171\132\172\040\173" +
    "\125\174\072\175\133\176\071\177\036\202\075\214\144" +
    "\217\100\220\112\221\060\001\002\000\002\001\ufff8\000" +
    "\002\001\uff1d\000\132\004\140\006\106\007\011\010\034" +
    "\011\053\012\061\020\126\034\103\056\143\057\030\067" +
    "\145\070\013\071\020\072\045\073\047\074\131\075\006" +
    "\076\035\106\056\107\027\110\067\111\051\112\123\113" +
    "\105\120\063\156\104\157\066\163\141\164\015\166\052" +
    "\167\146\170\026\171\132\172\040\173\125\174\072\175" +
    "\133\176\071\177\036\202\075\214\144\217\100\220\112" +
    "\221\060\001\002\000\132\004\140\006\106\007\011\010" +
    "\034\011\053\012\061\020\126\034\103\056\143\057\030" +
    "\067\145\070\013\071\020\072\045\073\047\074\131\075" +
    "\006\076\035\106\056\107\027\110\067\111\051\112\123" +
    "\113\105\120\063\156\104\157\066\163\141\164\015\166" +
    "\052\167\146\170\026\171\132\172\040\173\125\174\072" +
    "\175\133\176\071\177\036\202\075\214\144\217\100\220" +
    "\112\221\060\001\002\000\006\012\061\217\324\001\002" +
    "\000\132\004\140\006\106\007\011\010\034\011\053\012" +
    "\061\020\126\034\103\056\143\057\030\067\145\070\013" +
    "\071\020\072\045\073\047\074\131\075\006\076\035\106" +
    "\056\107\027\110\067\111\051\112\123\113\105\120\063" +
    "\156\104\157\066\163\141\164\015\166\052\167\146\170" +
    "\026\171\132\172\040\173\125\174\072\175\133\176\071" +
    "\177\036\202\075\214\144\217\100\220\112\221\060\001" +
    "\002\000\132\004\140\006\106\007\011\010\034\011\053" +
    "\012\061\020\126\034\103\056\143\057\030\067\145\070" +
    "\013\071\020\072\045\073\047\074\131\075\006\076\035" +
    "\106\056\107\027\110\067\111\051\112\123\113\105\120" +
    "\063\156\104\157\066\163\141\164\015\166\052\167\146" +
    "\170\026\171\132\172\040\173\125\174\072\175\133\176" +
    "\071\177\036\202\075\214\144\217\100\220\112\221\060" +
    "\001\002\000\002\001\ufee4\000\002\001\uffe1\000\010\010" +
    "\306\012\061\217\100\001\002\000\004\214\u0242\001\002" +
    "\000\006\166\u0240\167\u0241\001\002\000\004\101\325\001" +
    "\ufeb6\000\004\214\u0229\001\002\000\002\001\ufffc\000\132" +
    "\004\140\006\106\007\011\010\034\011\053\012\061\020" +
    "\126\034\103\056\143\057\030\067\145\070\013\071\020" +
    "\072\045\073\047\074\131\075\006\076\035\106\056\107" +
    "\027\110\067\111\051\112\123\113\105\120\063\156\104" +
    "\157\066\163\141\164\015\166\052\167\146\170\026\171" +
    "\132\172\040\173\125\174\072\175\133\176\071\177\036" +
    "\202\075\214\144\217\100\220\112\221\060\001\002\000" +
    "\132\004\140\006\106\007\011\010\034\011\053\012\061" +
    "\020\126\034\103\056\143\057\030\067\145\070\013\071" +
    "\020\072\045\073\047\074\131\075\006\076\035\106\056" +
    "\107\027\110\067\111\051\112\123\113\105\120\063\156" +
    "\104\157\066\163\141\164\015\166\052\167\146\170\026" +
    "\171\132\172\040\173\125\174\072\175\133\176\071\177" +
    "\036\202\075\214\144\217\100\220\112\221\060\001\002" +
    "\000\132\004\140\006\106\007\011\010\034\011\053\012" +
    "\061\020\126\034\103\056\143\057\030\067\145\070\013" +
    "\071\020\072\045\073\047\074\131\075\006\076\035\106" +
    "\056\107\027\110\067\111\051\112\123\113\105\120\063" +
    "\156\104\157\066\163\141\164\015\166\052\167\146\170" +
    "\026\171\132\172\040\173\125\174\072\175\133\176\071" +
    "\177\036\202\075\214\144\217\100\220\112\221\060\001" +
    "\002\000\002\001\ufef5\000\004\143\u01d6\001\uffc7\000\002" +
    "\001\ufee3\000\002\001\ufff3\000\002\001\ufea3\000\002\001" +
    "\ufec1\000\004\010\u01b8\001\002\000\002\001\uffd6\000\002" +
    "\001\ufec2\000\206\003\115\004\140\005\151\006\106\007" +
    "\011\010\034\011\053\012\061\014\074\020\126\021\121" +
    "\022\117\023\044\025\033\027\101\031\152\034\103\036" +
    "\127\042\055\043\120\046\134\047\041\051\147\052\025" +
    "\053\012\055\076\056\143\057\030\067\145\070\013\071" +
    "\020\072\045\073\047\074\131\075\006\076\035\101\064" +
    "\105\024\106\056\107\027\110\067\111\051\112\123\113" +
    "\105\120\063\136\010\156\104\157\066\163\141\164\015" +
    "\166\052\167\146\170\026\171\132\172\040\173\125\174" +
    "\072\175\133\176\071\177\036\202\075\206\042\214\144" +
    "\217\100\220\112\221\060\001\002\000\134\004\140\006" +
    "\106\007\011\010\034\011\053\012\061\020\126\034\103" +
    "\056\143\057\030\067\145\070\013\071\020\072\045\073" +
    "\047\074\131\075\006\076\035\106\056\107\027\110\067" +
    "\111\051\112\123\113\105\120\063\136\u01af\156\104\157" +
    "\066\163\141\164\015\166\052\167\146\170\026\171\132" +
    "\172\040\173\125\174\072\175\133\176\071\177\036\202" +
    "\075\214\144\217\100\220\112\221\060\001\002\000\132" +
    "\004\140\006\106\007\011\010\034\011\053\012\061\020" +
    "\126\034\103\056\143\057\030\067\145\070\013\071\020" +
    "\072\045\073\047\074\131\075\006\076\035\106\056\107" +
    "\027\110\067\111\051\112\123\113\105\120\063\156\104" +
    "\157\066\163\141\164\015\166\052\167\146\170\026\171" +
    "\132\172\040\173\125\174\072\175\133\176\071\177\036" +
    "\202\075\214\144\217\100\220\112\221\060\001\002\000" +
    "\002\001\ufffb\000\132\004\140\006\106\007\011\010\034" +
    "\011\053\012\061\020\126\034\103\056\143\057\030\067" +
    "\145\070\013\071\020\072\045\073\047\074\131\075\006" +
    "\076\035\106\056\107\027\110\067\111\051\112\123\113" +
    "\105\120\063\156\104\157\066\163\141\164\015\166\052" +
    "\167\146\170\026\171\132\172\040\173\125\174\072\175" +
    "\133\176\071\177\036\202\075\214\144\217\100\220\112" +
    "\221\060\001\002\000\002\001\ufee6\000\132\004\140\006" +
    "\106\007\011\010\034\011\053\012\061\020\126\034\103" +
    "\056\143\057\030\067\145\070\013\071\020\072\045\073" +
    "\047\074\131\075\006\076\035\106\056\107\027\110\067" +
    "\111\051\112\123\113\105\120\063\156\104\157\066\163" +
    "\141\164\015\166\052\167\146\170\026\171\132\172\040" +
    "\173\125\174\072\175\133\176\071\177\036\202\075\214" +
    "\144\217\100\220\112\221\060\001\002\000\002\001\ufef3" +
    "\000\004\214\u018d\001\002\000\002\001\uffc9\000\002\001" +
    "\ufef2\000\132\004\140\006\106\007\011\010\034\011\053" +
    "\012\061\020\126\034\103\056\143\057\030\067\145\070" +
    "\013\071\020\072\045\073\047\074\131\075\006\076\035" +
    "\106\056\107\027\110\067\111\051\112\123\113\105\120" +
    "\063\156\104\157\066\163\141\164\015\166\052\167\146" +
    "\170\026\171\132\172\040\173\125\174\072\175\133\176" +
    "\071\177\036\202\075\214\144\217\100\220\112\221\060" +
    "\001\002\000\132\004\140\006\106\007\011\010\034\011" +
    "\053\012\061\020\126\034\103\056\143\057\030\067\145" +
    "\070\013\071\020\072\045\073\047\074\131\075\006\076" +
    "\035\106\056\107\027\110\067\111\051\112\123\113\105" +
    "\120\063\156\104\157\066\163\141\164\015\166\052\167" +
    "\146\170\026\171\132\172\040\173\125\174\072\175\133" +
    "\176\071\177\036\202\075\214\144\217\100\220\112\221" +
    "\060\001\002\000\134\004\140\006\106\007\011\010\034" +
    "\011\053\012\061\020\126\034\103\056\143\057\030\067" +
    "\145\070\013\071\020\072\045\073\047\074\131\075\006" +
    "\076\035\106\056\107\027\110\067\111\051\112\123\113" +
    "\105\120\063\136\u0186\156\104\157\066\163\141\164\015" +
    "\166\052\167\146\170\026\171\132\172\040\173\125\174" +
    "\072\175\133\176\071\177\036\202\075\214\144\217\100" +
    "\220\112\221\060\001\002\000\002\001\ufed7\000\002\001" +
    "\ufed8\000\002\001\uffb7\000\004\214\u0181\001\ufefa\000\132" +
    "\004\140\006\106\007\011\010\034\011\053\012\061\020" +
    "\126\034\103\056\143\057\030\067\145\070\013\071\020" +
    "\072\045\073\047\074\131\075\006\076\035\106\056\107" +
    "\027\110\067\111\051\112\123\113\105\120\063\156\104" +
    "\157\066\163\141\164\015\166\052\167\146\170\026\171" +
    "\132\172\040\173\125\174\072\175\133\176\071\177\036" +
    "\202\075\214\144\217\100\220\112\221\060\001\002\000" +
    "\002\001\ufffd\000\004\214\u017a\001\002\000\132\004\140" +
    "\006\106\007\011\010\034\011\053\012\061\020\126\034" +
    "\103\056\143\057\030\067\145\070\013\071\020\072\045" +
    "\073\047\074\131\075\006\076\035\106\056\107\027\110" +
    "\067\111\051\112\123\113\105\120\063\156\104\157\066" +
    "\163\141\164\015\166\052\167\146\170\026\171\132\172" +
    "\040\173\125\174\072\175\133\176\071\177\036\202\075" +
    "\214\144\217\100\220\112\221\060\001\002\000\004\214" +
    "\u016b\001\002\000\012\010\u011e\012\061\106\u011d\217\100" +
    "\001\002\000\132\004\140\006\106\007\011\010\034\011" +
    "\053\012\061\020\126\034\103\056\143\057\030\067\145" +
    "\070\013\071\020\072\045\073\047\074\131\075\006\076" +
    "\035\106\056\107\027\110\067\111\051\112\123\113\105" +
    "\120\063\156\104\157\066\163\141\164\015\166\052\167" +
    "\146\170\026\171\132\172\040\173\125\174\072\175\133" +
    "\176\071\177\036\202\075\214\144\217\100\220\112\221" +
    "\060\001\002\000\002\001\uffff\000\004\214\234\001\002" +
    "\000\004\214\153\001\002\000\006\010\157\106\155\001" +
    "\002\000\006\114\212\215\211\001\002\000\002\001\ufe8d" +
    "\000\004\121\160\001\002\000\002\001\ufe8e\000\034\006" +
    "\106\007\011\010\167\020\126\070\163\071\020\072\045" +
    "\073\047\074\131\075\006\106\155\156\162\157\170\001" +
    "\002\000\002\001\ufeec\000\034\006\106\007\011\010\167" +
    "\020\126\070\163\071\020\072\045\073\047\074\131\075" +
    "\006\106\155\156\162\157\170\001\002\000\004\214\174" +
    "\001\002\000\002\001\uffa6\000\002\001\ufeed\000\002\001" +
    "\ufee8\000\004\104\172\001\ufe8e\000\034\006\106\007\011" +
    "\010\167\020\126\070\163\071\020\072\045\073\047\074" +
    "\131\075\006\106\155\156\162\157\170\001\002\000\002" +
    "\001\ufeea\000\004\010\173\001\002\000\002\001\ufee7\000" +
    "\034\006\106\007\011\010\167\020\126\070\163\071\020" +
    "\072\045\073\047\074\131\075\006\106\155\156\162\157" +
    "\170\001\ufee0\000\004\215\207\001\002\000\004\114\202" +
    "\001\ufede\000\004\066\200\001\ufed9\000\034\006\106\007" +
    "\011\010\167\020\126\070\163\071\020\072\045\073\047" +
    "\074\131\075\006\106\155\156\162\157\170\001\002\000" +
    "\002\001\ufeda\000\034\006\106\007\011\010\167\020\126" +
    "\070\163\071\020\072\045\073\047\074\131\075\006\106" +
    "\155\156\162\157\170\001\ufedd\000\002\001\ufedf\000\004" +
    "\066\205\001\ufedb\000\034\006\106\007\011\010\167\020" +
    "\126\070\163\071\020\072\045\073\047\074\131\075\006" +
    "\106\155\156\162\157\170\001\002\000\002\001\ufedc\000" +
    "\002\001\ufee9\000\002\001\ufeeb\000\210\003\115\004\140" +
    "\005\151\006\106\007\011\010\034\011\053\012\061\014" +
    "\074\020\126\021\121\022\117\023\044\025\033\027\101" +
    "\031\152\034\103\036\127\042\055\043\120\046\134\047" +
    "\041\051\147\052\025\053\012\055\076\056\143\057\030" +
    "\067\145\070\013\071\020\072\045\073\047\074\131\075" +
    "\006\076\035\101\064\105\024\106\056\107\027\110\067" +
    "\111\051\112\123\113\105\120\063\136\010\156\104\157" +
    "\066\163\141\164\015\166\052\167\146\170\026\171\132" +
    "\172\040\173\125\174\072\175\133\176\071\177\036\202" +
    "\075\206\042\214\144\216\217\217\100\220\112\221\060" +
    "\001\002\000\006\010\157\106\155\001\002\000\004\121" +
    "\214\001\002\000\034\006\106\007\011\010\167\020\126" +
    "\070\163\071\020\072\045\073\047\074\131\075\006\106" +
    "\155\156\162\157\170\001\002\000\002\001\uffa5\000\002" +
    "\001\uffdb\000\002\001\ufff8\000\002\001\uffa8\000\224\003" +
    "\115\004\140\005\151\006\106\007\011\010\034\011\053" +
    "\012\061\014\074\020\126\021\121\022\117\023\044\025" +
    "\033\027\101\031\152\032\225\034\103\036\127\042\055" +
    "\043\120\044\107\046\134\047\041\051\147\052\025\053" +
    "\012\055\076\056\143\057\030\060\223\061\032\062\137" +
    "\067\145\070\013\071\020\072\045\073\047\074\131\075" +
    "\006\076\035\101\064\105\024\106\056\107\027\110\067" +
    "\111\051\112\123\113\105\120\063\136\010\156\104\157" +
    "\066\163\141\164\015\166\052\167\146\170\026\171\132" +
    "\172\040\173\125\174\072\175\133\176\071\177\036\202" +
    "\075\206\042\207\062\210\017\214\144\217\100\220\112" +
    "\221\060\001\002\000\002\001\ufff9\000\004\214\231\001" +
    "\002\000\002\001\ufff6\000\004\136\230\001\002\000\002" +
    "\001\ufff5\000\002\001\ufff7\000\002\001\uffa7\000\004\215" +
    "\232\001\002\000\004\136\233\001\002\000\002\001\ufff4" +
    "\000\132\004\140\006\106\007\011\010\034\011\053\012" +
    "\061\020\126\034\103\056\143\057\030\067\145\070\013" +
    "\071\020\072\045\073\047\074\131\075\006\076\035\106" +
    "\056\107\027\110\067\111\051\112\123\113\105\120\063" +
    "\156\104\157\066\163\141\164\015\166\052\167\146\170" +
    "\026\171\132\172\040\173\125\174\072\175\133\176\071" +
    "\177\036\202\075\214\144\217\100\220\112\221\060\001" +
    "\002\000\070\033\260\115\247\116\267\117\240\135\244" +
    "\137\241\140\261\141\242\142\251\143\262\144\266\145" +
    "\252\146\236\147\250\150\265\151\264\152\245\153\263" +
    "\154\257\155\253\156\270\157\246\160\256\161\254\162" +
    "\237\165\243\215\255\001\002\000\132\004\140\006\106" +
    "\007\011\010\034\011\053\012\061\020\126\034\103\056" +
    "\143\057\030\067\145\070\013\071\020\072\045\073\047" +
    "\074\131\075\006\076\035\106\056\107\027\110\067\111" +
    "\051\112\123\113\105\120\063\156\104\157\066\163\141" +
    "\164\015\166\052\167\146\170\026\171\132\172\040\173" +
    "\125\174\072\175\133\176\071\177\036\202\075\214\144" +
    "\217\100\220\112\221\060\001\002\000\132\004\140\006" +
    "\106\007\011\010\034\011\053\012\061\020\126\034\103" +
    "\056\143\057\030\067\145\070\013\071\020\072\045\073" +
    "\047\074\131\075\006\076\035\106\056\107\027\110\067" +
    "\111\051\112\123\113\105\120\063\156\104\157\066\163" +
    "\141\164\015\166\052\167\146\170\026\171\132\172\040" +
    "\173\125\174\072\175\133\176\071\177\036\202\075\214" +
    "\144\217\100\220\112\221\060\001\002\000\132\004\140" +
    "\006\106\007\011\010\034\011\053\012\061\020\126\034" +
    "\103\056\143\057\030\067\145\070\013\071\020\072\045" +
    "\073\047\074\131\075\006\076\035\106\056\107\027\110" +
    "\067\111\051\112\123\113\105\120\063\156\104\157\066" +
    "\163\141\164\015\166\052\167\146\170\026\171\132\172" +
    "\040\173\125\174\072\175\133\176\071\177\036\202\075" +
    "\214\144\217\100\220\112\221\060\001\002\000\132\004" +
    "\140\006\106\007\011\010\034\011\053\012\061\020\126" +
    "\034\103\056\143\057\030\067\145\070\013\071\020\072" +
    "\045\073\047\074\131\075\006\076\035\106\056\107\027" +
    "\110\067\111\051\112\123\113\105\120\063\156\104\157" +
    "\066\163\141\164\015\166\052\167\146\170\026\171\132" +
    "\172\040\173\125\174\072\175\133\176\071\177\036\202" +
    "\075\214\144\217\100\220\112\221\060\001\002\000\132" +
    "\004\140\006\106\007\011\010\034\011\053\012\061\020" +
    "\126\034\103\056\143\057\030\067\145\070\013\071\020" +
    "\072\045\073\047\074\131\075\006\076\035\106\056\107" +
    "\027\110\067\111\051\112\123\113\105\120\063\156\104" +
    "\157\066\163\141\164\015\166\052\167\146\170\026\171" +
    "\132\172\040\173\125\174\072\175\133\176\071\177\036" +
    "\202\075\214\144\217\100\220\112\221\060\001\002\000" +
    "\132\004\140\006\106\007\011\010\034\011\053\012\061" +
    "\020\126\034\103\056\143\057\030\067\145\070\013\071" +
    "\020\072\045\073\047\074\131\075\006\076\035\106\056" +
    "\107\027\110\067\111\051\112\123\113\105\120\063\156" +
    "\104\157\066\163\141\164\015\166\052\167\146\170\026" +
    "\171\132\172\040\173\125\174\072\175\133\176\071\177" +
    "\036\202\075\214\144\217\100\220\112\221\060\001\002" +
    "\000\132\004\140\006\106\007\011\010\034\011\053\012" +
    "\061\020\126\034\103\056\143\057\030\067\145\070\013" +
    "\071\020\072\045\073\047\074\131\075\006\076\035\106" +
    "\056\107\027\110\067\111\051\112\123\113\105\120\063" +
    "\156\104\157\066\163\141\164\015\166\052\167\146\170" +
    "\026\171\132\172\040\173\125\174\072\175\133\176\071" +
    "\177\036\202\075\214\144\217\100\220\112\221\060\001" +
    "\002\000\132\004\140\006\106\007\011\010\034\011\053" +
    "\012\061\020\126\034\103\056\143\057\030\067\145\070" +
    "\013\071\020\072\045\073\047\074\131\075\006\076\035" +
    "\106\056\107\027\110\067\111\051\112\123\113\105\120" +
    "\063\156\104\157\066\163\141\164\015\166\052\167\146" +
    "\170\026\171\132\172\040\173\125\174\072\175\133\176" +
    "\071\177\036\202\075\214\144\217\100\220\112\221\060" +
    "\001\002\000\132\004\140\006\106\007\011\010\034\011" +
    "\053\012\061\020\126\034\103\056\143\057\030\067\145" +
    "\070\013\071\020\072\045\073\047\074\131\075\006\076" +
    "\035\106\056\107\027\110\067\111\051\112\123\113\105" +
    "\120\063\156\104\157\066\163\141\164\015\166\052\167" +
    "\146\170\026\171\132\172\040\173\125\174\072\175\133" +
    "\176\071\177\036\202\075\214\144\217\100\220\112\221" +
    "\060\001\002\000\132\004\140\006\106\007\011\010\034" +
    "\011\053\012\061\020\126\034\103\056\143\057\030\067" +
    "\145\070\013\071\020\072\045\073\047\074\131\075\006" +
    "\076\035\106\056\107\027\110\067\111\051\112\123\113" +
    "\105\120\063\156\104\157\066\163\141\164\015\166\052" +
    "\167\146\170\026\171\132\172\040\173\125\174\072\175" +
    "\133\176\071\177\036\202\075\214\144\217\100\220\112" +
    "\221\060\001\002\000\132\004\140\006\106\007\011\010" +
    "\034\011\053\012\061\020\126\034\103\056\143\057\030" +
    "\067\145\070\013\071\020\072\045\073\047\074\131\075" +
    "\006\076\035\106\056\107\027\110\067\111\051\112\123" +
    "\113\105\120\063\156\104\157\066\163\141\164\015\166" +
    "\052\167\146\170\026\171\132\172\040\173\125\174\072" +
    "\175\133\176\071\177\036\202\075\214\144\217\100\220" +
    "\112\221\060\001\002\000\132\004\140\006\106\007\011" +
    "\010\034\011\053\012\061\020\126\034\103\056\143\057" +
    "\030\067\145\070\013\071\020\072\045\073\047\074\131" +
    "\075\006\076\035\106\056\107\027\110\067\111\051\112" +
    "\123\113\105\120\063\156\104\157\066\163\141\164\015" +
    "\166\052\167\146\170\026\171\132\172\040\173\125\174" +
    "\072\175\133\176\071\177\036\202\075\214\144\217\100" +
    "\220\112\221\060\001\002\000\132\004\140\006\106\007" +
    "\011\010\034\011\053\012\061\020\126\034\103\056\143" +
    "\057\030\067\145\070\013\071\020\072\045\073\047\074" +
    "\131\075\006\076\035\106\056\107\027\110\067\111\051" +
    "\112\123\113\105\120\063\156\104\157\066\163\141\164" +
    "\015\166\052\167\146\170\026\171\132\172\040\173\125" +
    "\174\072\175\133\176\071\177\036\202\075\214\144\217" +
    "\100\220\112\221\060\001\002\000\132\004\140\006\106" +
    "\007\011\010\034\011\053\012\061\020\126\034\103\056" +
    "\143\057\030\067\145\070\013\071\020\072\045\073\047" +
    "\074\131\075\006\076\035\106\056\107\027\110\067\111" +
    "\051\112\123\113\105\120\063\156\104\157\066\163\141" +
    "\164\015\166\052\167\146\170\026\171\132\172\040\173" +
    "\125\174\072\175\133\176\071\177\036\202\075\214\144" +
    "\217\100\220\112\221\060\001\002\000\132\004\140\006" +
    "\106\007\011\010\034\011\053\012\061\020\126\034\103" +
    "\056\143\057\030\067\145\070\013\071\020\072\045\073" +
    "\047\074\131\075\006\076\035\106\056\107\027\110\067" +
    "\111\051\112\123\113\105\120\063\156\104\157\066\163" +
    "\141\164\015\166\052\167\146\170\026\171\132\172\040" +
    "\173\125\174\072\175\133\176\071\177\036\202\075\214" +
    "\144\217\100\220\112\221\060\001\002\000\210\003\115" +
    "\004\140\005\151\006\106\007\011\010\034\011\053\012" +
    "\061\014\074\020\126\021\121\022\117\023\044\025\033" +
    "\027\101\031\152\034\103\036\127\042\055\043\120\046" +
    "\134\047\041\051\147\052\025\053\012\055\076\056\143" +
    "\057\030\067\145\070\013\071\020\072\045\073\047\074" +
    "\131\075\006\076\035\101\064\105\024\106\056\107\027" +
    "\110\067\111\051\112\123\113\105\120\063\136\010\156" +
    "\104\157\066\163\141\164\015\166\052\167\146\170\026" +
    "\171\132\172\040\173\125\174\072\175\133\176\071\177" +
    "\036\202\075\206\042\214\144\216\356\217\100\220\112" +
    "\221\060\001\002\000\132\004\140\006\106\007\011\010" +
    "\034\011\053\012\061\020\126\034\103\056\143\057\030" +
    "\067\145\070\013\071\020\072\045\073\047\074\131\075" +
    "\006\076\035\106\056\107\027\110\067\111\051\112\123" +
    "\113\105\120\063\156\104\157\066\163\141\164\015\166" +
    "\052\167\146\170\026\171\132\172\040\173\125\174\072" +
    "\175\133\176\071\177\036\202\075\214\144\217\100\220" +
    "\112\221\060\001\002\000\132\004\140\006\106\007\011" +
    "\010\034\011\053\012\061\020\126\034\103\056\143\057" +
    "\030\067\145\070\013\071\020\072\045\073\047\074\131" +
    "\075\006\076\035\106\056\107\027\110\067\111\051\112" +
    "\123\113\105\120\063\156\104\157\066\163\141\164\015" +
    "\166\052\167\146\170\026\171\132\172\040\173\125\174" +
    "\072\175\133\176\071\177\036\202\075\214\144\217\100" +
    "\220\112\221\060\001\002\000\010\010\306\012\061\217" +
    "\100\001\002\000\132\004\140\006\106\007\011\010\034" +
    "\011\053\012\061\020\126\034\103\056\143\057\030\067" +
    "\145\070\013\071\020\072\045\073\047\074\131\075\006" +
    "\076\035\106\056\107\027\110\067\111\051\112\123\113" +
    "\105\120\063\156\104\157\066\163\141\164\015\166\052" +
    "\167\146\170\026\171\132\172\040\173\125\174\072\175" +
    "\133\176\071\177\036\202\075\214\144\217\100\220\112" +
    "\221\060\001\002\000\132\004\140\006\106\007\011\010" +
    "\034\011\053\012\061\020\126\034\103\056\143\057\030" +
    "\067\145\070\013\071\020\072\045\073\047\074\131\075" +
    "\006\076\035\106\056\107\027\110\067\111\051\112\123" +
    "\113\105\120\063\156\104\157\066\163\141\164\015\166" +
    "\052\167\146\170\026\171\132\172\040\173\125\174\072" +
    "\175\133\176\071\177\036\202\075\214\144\217\100\220" +
    "\112\221\060\001\002\000\132\004\140\006\106\007\011" +
    "\010\034\011\053\012\061\020\126\034\103\056\143\057" +
    "\030\067\145\070\013\071\020\072\045\073\047\074\131" +
    "\075\006\076\035\106\056\107\027\110\067\111\051\112" +
    "\123\113\105\120\063\156\104\157\066\163\141\164\015" +
    "\166\052\167\146\170\026\171\132\172\040\173\125\174" +
    "\072\175\133\176\071\177\036\202\075\214\144\217\100" +
    "\220\112\221\060\001\002\000\132\004\140\006\106\007" +
    "\011\010\034\011\053\012\061\020\126\034\103\056\143" +
    "\057\030\067\145\070\013\071\020\072\045\073\047\074" +
    "\131\075\006\076\035\106\056\107\027\110\067\111\051" +
    "\112\123\113\105\120\063\156\104\157\066\163\141\164" +
    "\015\166\052\167\146\170\026\171\132\172\040\173\125" +
    "\174\072\175\133\176\071\177\036\202\075\214\144\217" +
    "\100\220\112\221\060\001\002\000\132\004\140\006\106" +
    "\007\011\010\034\011\053\012\061\020\126\034\103\056" +
    "\143\057\030\067\145\070\013\071\020\072\045\073\047" +
    "\074\131\075\006\076\035\106\056\107\027\110\067\111" +
    "\051\112\123\113\105\120\063\156\104\157\066\163\141" +
    "\164\015\166\052\167\146\170\026\171\132\172\040\173" +
    "\125\174\072\175\133\176\071\177\036\202\075\214\144" +
    "\217\100\220\112\221\060\001\002\000\132\004\140\006" +
    "\106\007\011\010\034\011\053\012\061\020\126\034\103" +
    "\056\143\057\030\067\145\070\013\071\020\072\045\073" +
    "\047\074\131\075\006\076\035\106\056\107\027\110\067" +
    "\111\051\112\123\113\105\120\063\156\104\157\066\163" +
    "\141\164\015\166\052\167\146\170\026\171\132\172\040" +
    "\173\125\174\072\175\133\176\071\177\036\202\075\214" +
    "\144\217\100\220\112\221\060\001\002\000\132\004\140" +
    "\006\106\007\011\010\034\011\053\012\061\020\126\034" +
    "\103\056\143\057\030\067\145\070\013\071\020\072\045" +
    "\073\047\074\131\075\006\076\035\106\056\107\027\110" +
    "\067\111\051\112\123\113\105\120\063\156\104\157\066" +
    "\163\141\164\015\166\052\167\146\170\026\171\132\172" +
    "\040\173\125\174\072\175\133\176\071\177\036\202\075" +
    "\214\144\217\100\220\112\221\060\001\002\000\132\004" +
    "\140\006\106\007\011\010\034\011\053\012\061\020\126" +
    "\034\103\056\143\057\030\067\145\070\013\071\020\072" +
    "\045\073\047\074\131\075\006\076\035\106\056\107\027" +
    "\110\067\111\051\112\123\113\105\120\063\156\104\157" +
    "\066\163\141\164\015\166\052\167\146\170\026\171\132" +
    "\172\040\173\125\174\072\175\133\176\071\177\036\202" +
    "\075\214\144\217\100\220\112\221\060\001\002\000\012" +
    "\033\260\160\256\161\254\162\237\001\uff33\000\062\033" +
    "\260\117\240\135\244\137\241\140\261\141\242\142\251" +
    "\143\262\144\266\145\252\146\236\147\250\150\265\151" +
    "\264\152\245\153\263\154\257\155\253\156\270\157\246" +
    "\160\256\161\254\162\237\165\243\001\uff38\000\034\033" +
    "\260\150\265\151\264\152\245\153\263\154\257\155\253" +
    "\156\270\157\246\160\256\161\254\162\237\165\243\001" +
    "\uff26\000\024\033\260\154\257\155\253\156\270\157\246" +
    "\160\256\161\254\162\237\165\243\001\uff23\000\024\033" +
    "\260\154\257\155\253\156\270\157\246\160\256\161\254" +
    "\162\237\165\243\001\uff21\000\024\033\260\154\257\155" +
    "\253\156\270\157\246\160\256\161\254\162\237\165\243" +
    "\001\uff22\000\044\033\260\144\266\145\252\146\236\147" +
    "\250\150\265\151\264\152\245\153\263\154\257\155\253" +
    "\156\270\157\246\160\256\161\254\162\237\165\243\001" +
    "\uff36\000\052\033\260\141\242\142\251\143\262\144\266" +
    "\145\252\146\236\147\250\150\265\151\264\152\245\153" +
    "\263\154\257\155\253\156\270\157\246\160\256\161\254" +
    "\162\237\165\243\001\uff3b\000\002\001\uff20\000\004\065" +
    "\331\001\ufefe\000\002\001\uff00\000\006\012\061\217\324" +
    "\001\002\000\004\104\317\001\002\000\004\104\uff02\001" +
    "\uff01\000\006\101\310\200\311\001\ufec7\000\132\004\140" +
    "\006\106\007\011\010\034\011\053\012\061\020\126\034" +
    "\103\056\143\057\030\067\145\070\013\071\020\072\045" +
    "\073\047\074\131\075\006\076\035\106\056\107\027\110" +
    "\067\111\051\112\123\113\105\120\063\156\104\157\066" +
    "\163\141\164\015\166\052\167\146\170\026\171\132\172" +
    "\040\173\125\174\072\175\133\176\071\177\036\202\075" +
    "\214\144\217\100\220\112\221\060\001\002\000\132\004" +
    "\140\006\106\007\011\010\034\011\053\012\061\020\126" +
    "\034\103\056\143\057\030\067\145\070\013\071\020\072" +
    "\045\073\047\074\131\075\006\076\035\106\056\107\027" +
    "\110\067\111\051\112\123\113\105\120\063\156\104\157" +
    "\066\163\141\164\015\166\052\167\146\170\026\171\132" +
    "\172\040\173\125\174\072\175\133\176\071\177\036\202" +
    "\075\214\144\217\100\220\112\221\060\001\ufebf\000\004" +
    "\201\314\001\002\000\066\033\260\115\247\116\267\117" +
    "\240\135\244\137\241\140\261\141\242\142\251\143\262" +
    "\144\266\145\252\146\236\147\250\150\265\151\264\152" +
    "\245\153\263\154\257\155\253\156\270\157\246\160\256" +
    "\161\254\162\237\165\243\001\ufebe\000\002\001\ufec4\000" +
    "\070\033\260\103\316\115\247\116\267\117\240\135\244" +
    "\137\241\140\261\141\242\142\251\143\262\144\266\145" +
    "\252\146\236\147\250\150\265\151\264\152\245\153\263" +
    "\154\257\155\253\156\270\157\246\160\256\161\254\162" +
    "\237\165\243\001\002\000\002\001\ufec3\000\006\012\061" +
    "\217\100\001\002\000\002\001\ufeca\000\006\012\061\217" +
    "\324\001\002\000\006\101\310\200\311\001\ufecc\000\006" +
    "\101\310\200\311\001\ufecb\000\004\101\325\001\ufeb5\000" +
    "\132\004\140\006\106\007\011\010\034\011\053\012\061" +
    "\020\126\034\103\056\143\057\030\067\145\070\013\071" +
    "\020\072\045\073\047\074\131\075\006\076\035\106\056" +
    "\107\027\110\067\111\051\112\123\113\105\120\063\156" +
    "\104\157\066\163\141\164\015\166\052\167\146\170\026" +
    "\171\132\172\040\173\125\174\072\175\133\176\071\177" +
    "\036\202\075\214\144\217\100\220\112\221\060\001\002" +
    "\000\070\033\260\103\327\115\247\116\267\117\240\135" +
    "\244\137\241\140\261\141\242\142\251\143\262\144\266" +
    "\145\252\146\236\147\250\150\265\151\264\152\245\153" +
    "\263\154\257\155\253\156\270\157\246\160\256\161\254" +
    "\162\237\165\243\001\002\000\002\001\ufec0\000\006\101" +
    "\310\200\311\001\ufec6\000\014\010\157\012\061\101\337" +
    "\106\155\217\100\001\002\000\002\001\ufeb8\000\002\001" +
    "\ufeb9\000\002\001\ufebc\000\002\001\ufefc\000\006\101\342" +
    "\200\343\001\ufebd\000\132\004\140\006\106\007\011\010" +
    "\034\011\053\012\061\020\126\034\103\056\143\057\030" +
    "\067\145\070\013\071\020\072\045\073\047\074\131\075" +
    "\006\076\035\106\056\107\027\110\067\111\051\112\123" +
    "\113\105\120\063\156\104\157\066\163\141\164\015\166" +
    "\052\167\146\170\026\171\132\172\040\173\125\174\072" +
    "\175\133\176\071\177\036\202\075\214\144\217\100\220" +
    "\112\221\060\001\002\000\070\033\260\103\341\115\247" +
    "\116\267\117\240\135\244\137\241\140\261\141\242\142" +
    "\251\143\262\144\266\145\252\146\236\147\250\150\265" +
    "\151\264\152\245\153\263\154\257\155\253\156\270\157" +
    "\246\160\256\161\254\162\237\165\243\001\002\000\002" +
    "\001\ufeb7\000\132\004\140\006\106\007\011\010\034\011" +
    "\053\012\061\020\126\034\103\056\143\057\030\067\145" +
    "\070\013\071\020\072\045\073\047\074\131\075\006\076" +
    "\035\106\056\107\027\110\067\111\051\112\123\113\105" +
    "\120\063\156\104\157\066\163\141\164\015\166\052\167" +
    "\146\170\026\171\132\172\040\173\125\174\072\175\133" +
    "\176\071\177\036\202\075\214\144\217\100\220\112\221" +
    "\060\001\002\000\132\004\140\006\106\007\011\010\034" +
    "\011\053\012\061\020\126\034\103\056\143\057\030\067" +
    "\145\070\013\071\020\072\045\073\047\074\131\075\006" +
    "\076\035\106\056\107\027\110\067\111\051\112\123\113" +
    "\105\120\063\156\104\157\066\163\141\164\015\166\052" +
    "\167\146\170\026\171\132\172\040\173\125\174\072\175" +
    "\133\176\071\177\036\202\075\214\144\217\100\220\112" +
    "\221\060\001\ufebf\000\004\201\345\001\002\000\002\001" +
    "\ufebb\000\070\033\260\103\347\115\247\116\267\117\240" +
    "\135\244\137\241\140\261\141\242\142\251\143\262\144" +
    "\266\145\252\146\236\147\250\150\265\151\264\152\245" +
    "\153\263\154\257\155\253\156\270\157\246\160\256\161" +
    "\254\162\237\165\243\001\002\000\002\001\ufeba\000\004" +
    "\065\352\001\ufeff\000\002\001\ufefd\000\014\010\157\012" +
    "\061\101\337\106\155\217\100\001\002\000\002\001\ufefb" +
    "\000\020\033\260\156\270\157\246\160\256\161\254\162" +
    "\237\165\243\001\uff2e\000\004\033\260\001\uff31\000\002" +
    "\001\ufff8\000\002\001\uff99\000\006\204\363\205\362\001" +
    "\uff95\000\002\001\ufff1\000\206\003\115\004\140\005\151" +
    "\006\106\007\011\010\034\011\053\012\061\014\074\020" +
    "\126\021\121\022\117\023\044\025\033\027\101\031\152" +
    "\034\103\036\127\042\055\043\120\046\134\047\041\051" +
    "\147\052\025\053\012\055\076\056\143\057\030\067\145" +
    "\070\013\071\020\072\045\073\047\074\131\075\006\076" +
    "\035\101\064\105\024\106\056\107\027\110\067\111\051" +
    "\112\123\113\105\120\063\136\010\156\104\157\066\163" +
    "\141\164\015\166\052\167\146\170\026\171\132\172\040" +
    "\173\125\174\072\175\133\176\071\177\036\202\075\206" +
    "\042\214\144\217\100\220\112\221\060\001\002\000\004" +
    "\214\364\001\002\000\132\004\140\006\106\007\011\010" +
    "\034\011\053\012\061\020\126\034\103\056\143\057\030" +
    "\067\145\070\013\071\020\072\045\073\047\074\131\075" +
    "\006\076\035\106\056\107\027\110\067\111\051\112\123" +
    "\113\105\120\063\156\104\157\066\163\141\164\015\166" +
    "\052\167\146\170\026\171\132\172\040\173\125\174\072" +
    "\175\133\176\071\177\036\202\075\214\144\217\100\220" +
    "\112\221\060\001\002\000\070\033\260\115\247\116\267" +
    "\117\240\135\244\137\241\140\261\141\242\142\251\143" +
    "\262\144\266\145\252\146\236\147\250\150\265\151\264" +
    "\152\245\153\263\154\257\155\253\156\270\157\246\160" +
    "\256\161\254\162\237\165\243\215\366\001\002\000\206" +
    "\003\115\004\140\005\151\006\106\007\011\010\034\011" +
    "\053\012\061\014\074\020\126\021\121\022\117\023\044" +
    "\025\033\027\101\031\152\034\103\036\127\042\055\043" +
    "\120\046\134\047\041\051\147\052\025\053\012\055\076" +
    "\056\143\057\030\067\145\070\013\071\020\072\045\073" +
    "\047\074\131\075\006\076\035\101\064\105\024\106\056" +
    "\107\027\110\067\111\051\112\123\113\105\120\063\136" +
    "\010\156\104\157\066\163\141\164\015\166\052\167\146" +
    "\170\026\171\132\172\040\173\125\174\072\175\133\176" +
    "\071\177\036\202\075\206\042\214\144\217\100\220\112" +
    "\221\060\001\002\000\002\001\uff98\000\002\001\uff94\000" +
    "\222\003\115\004\140\005\151\006\106\007\011\010\034" +
    "\011\053\012\061\014\074\020\126\021\121\022\117\023" +
    "\044\025\033\027\101\031\152\034\103\036\127\042\055" +
    "\043\120\044\107\046\134\047\041\051\147\052\025\053" +
    "\012\055\076\056\143\057\030\060\223\061\032\062\137" +
    "\067\145\070\013\071\020\072\045\073\047\074\131\075" +
    "\006\076\035\101\064\105\024\106\056\107\027\110\067" +
    "\111\051\112\123\113\105\120\063\136\010\156\104\157" +
    "\066\163\141\164\015\166\052\167\146\170\026\171\132" +
    "\172\040\173\125\174\072\175\133\176\071\177\036\202" +
    "\075\206\042\207\062\210\017\214\144\217\100\220\112" +
    "\221\060\001\uff97\000\006\204\375\205\374\001\uff93\000" +
    "\004\203\u0105\001\002\000\004\216\u0103\001\002\000\004" +
    "\214\376\001\002\000\132\004\140\006\106\007\011\010" +
    "\034\011\053\012\061\020\126\034\103\056\143\057\030" +
    "\067\145\070\013\071\020\072\045\073\047\074\131\075" +
    "\006\076\035\106\056\107\027\110\067\111\051\112\123" +
    "\113\105\120\063\156\104\157\066\163\141\164\015\166" +
    "\052\167\146\170\026\171\132\172\040\173\125\174\072" +
    "\175\133\176\071\177\036\202\075\214\144\217\100\220" +
    "\112\221\060\001\002\000\070\033\260\115\247\116\267" +
    "\117\240\135\244\137\241\140\261\141\242\142\251\143" +
    "\262\144\266\145\252\146\236\147\250\150\265\151\264" +
    "\152\245\153\263\154\257\155\253\156\270\157\246\160" +
    "\256\161\254\162\237\165\243\215\u0100\001\002\000\004" +
    "\216\u0101\001\002\000\002\001\ufff8\000\222\003\115\004" +
    "\140\005\151\006\106\007\011\010\034\011\053\012\061" +
    "\014\074\020\126\021\121\022\117\023\044\025\033\027" +
    "\101\031\152\034\103\036\127\042\055\043\120\044\107" +
    "\046\134\047\041\051\147\052\025\053\012\055\076\056" +
    "\143\057\030\060\223\061\032\062\137\067\145\070\013" +
    "\071\020\072\045\073\047\074\131\075\006\076\035\101" +
    "\064\105\024\106\056\107\027\110\067\111\051\112\123" +
    "\113\105\120\063\136\010\156\104\157\066\163\141\164" +
    "\015\166\052\167\146\170\026\171\132\172\040\173\125" +
    "\174\072\175\133\176\071\177\036\202\075\206\042\207" +
    "\062\210\017\214\144\217\100\220\112\221\060\001\uff96" +
    "\000\002\001\ufff8\000\222\003\115\004\140\005\151\006" +
    "\106\007\011\010\034\011\053\012\061\014\074\020\126" +
    "\021\121\022\117\023\044\025\033\027\101\031\152\034" +
    "\103\036\127\042\055\043\120\044\107\046\134\047\041" +
    "\051\147\052\025\053\012\055\076\056\143\057\030\060" +
    "\223\061\032\062\137\067\145\070\013\071\020\072\045" +
    "\073\047\074\131\075\006\076\035\101\064\105\024\106" +
    "\056\107\027\110\067\111\051\112\123\113\105\120\063" +
    "\136\010\156\104\157\066\163\141\164\015\166\052\167" +
    "\146\170\026\171\132\172\040\173\125\174\072\175\133" +
    "\176\071\177\036\202\075\206\042\207\062\210\017\214" +
    "\144\217\100\220\112\221\060\001\uff92\000\004\136\u0106" +
    "\001\002\000\002\001\ufff0\000\004\033\260\001\uff30\000" +
    "\020\033\260\156\270\157\246\160\256\161\254\162\237" +
    "\165\243\001\uff2d\000\034\033\260\150\265\151\264\152" +
    "\245\153\263\154\257\155\253\156\270\157\246\160\256" +
    "\161\254\162\237\165\243\001\uff25\000\046\033\260\143" +
    "\262\144\266\145\252\146\236\147\250\150\265\151\264" +
    "\152\245\153\263\154\257\155\253\156\270\157\246\160" +
    "\256\161\254\162\237\165\243\001\uff35\000\034\033\260" +
    "\150\265\151\264\152\245\153\263\154\257\155\253\156" +
    "\270\157\246\160\256\161\254\162\237\165\243\001\uff27" +
    "\000\064\033\260\116\267\117\240\135\244\137\241\140" +
    "\261\141\242\142\251\143\262\144\266\145\252\146\236" +
    "\147\250\150\265\151\264\152\245\153\263\154\257\155" +
    "\253\156\270\157\246\160\256\161\254\162\237\165\243" +
    "\001\uff3a\000\012\033\260\160\256\161\254\162\237\001" +
    "\uff32\000\024\033\260\154\257\155\253\156\270\157\246" +
    "\160\256\161\254\162\237\165\243\001\uff24\000\070\033" +
    "\260\115\247\116\267\117\240\135\244\137\241\140\261" +
    "\141\242\142\251\143\262\144\266\145\252\146\236\147" +
    "\250\150\265\151\264\152\245\153\263\154\257\155\253" +
    "\156\270\157\246\160\256\161\254\162\237\165\243\216" +
    "\u0110\001\002\000\132\004\140\006\106\007\011\010\034" +
    "\011\053\012\061\020\126\034\103\056\143\057\030\067" +
    "\145\070\013\071\020\072\045\073\047\074\131\075\006" +
    "\076\035\106\056\107\027\110\067\111\051\112\123\113" +
    "\105\120\063\156\104\157\066\163\141\164\015\166\052" +
    "\167\146\170\026\171\132\172\040\173\125\174\072\175" +
    "\133\176\071\177\036\202\075\214\144\217\100\220\112" +
    "\221\060\001\002\000\066\033\260\115\247\116\267\117" +
    "\240\135\244\137\241\140\261\141\242\142\251\143\262" +
    "\144\266\145\252\146\236\147\250\150\265\151\264\152" +
    "\245\153\263\154\257\155\253\156\270\157\246\160\256" +
    "\161\254\162\237\165\243\001\uff1e\000\012\033\260\160" +
    "\256\161\254\162\237\001\uff34\000\050\033\260\142\251" +
    "\143\262\144\266\145\252\146\236\147\250\150\265\151" +
    "\264\152\245\153\263\154\257\155\253\156\270\157\246" +
    "\160\256\161\254\162\237\165\243\001\uff37\000\054\033" +
    "\260\140\261\141\242\142\251\143\262\144\266\145\252" +
    "\146\236\147\250\150\265\151\264\152\245\153\263\154" +
    "\257\155\253\156\270\157\246\160\256\161\254\162\237" +
    "\165\243\001\uff3c\000\060\033\260\135\244\137\241\140" +
    "\261\141\242\142\251\143\262\144\266\145\252\146\236" +
    "\147\250\150\265\151\264\152\245\153\263\154\257\155" +
    "\253\156\270\157\246\160\256\161\254\162\237\165\243" +
    "\001\uff39\000\004\033\260\001\uff2f\000\034\033\260\150" +
    "\265\151\264\152\245\153\263\154\257\155\253\156\270" +
    "\157\246\160\256\161\254\162\237\165\243\001\uff28\000" +
    "\070\033\260\115\247\116\267\117\240\135\244\136\u0119" +
    "\137\241\140\261\141\242\142\251\143\262\144\266\145" +
    "\252\146\236\147\250\150\265\151\264\152\245\153\263" +
    "\154\257\155\253\156\270\157\246\160\256\161\254\162" +
    "\237\165\243\001\002\000\002\001\uffd7\000\002\001\ufed4" +
    "\000\002\001\uff3d\000\004\104\u0162\001\002\000\004\214" +
    "\u014e\001\002\000\004\214\u011f\001\uff02\000\134\004\140" +
    "\006\106\007\011\010\034\011\053\012\061\020\126\034" +
    "\103\056\143\057\030\067\145\070\013\071\020\072\045" +
    "\073\047\074\131\075\006\076\035\106\056\107\027\110" +
    "\067\111\051\112\123\113\105\120\063\143\u0123\156\104" +
    "\157\066\163\141\164\015\166\052\167\146\170\026\171" +
    "\132\172\040\173\125\174\072\175\133\176\071\177\036" +
    "\202\075\214\144\217\100\220\112\221\060\001\uff83\000" +
    "\004\114\u0149\001\uff84\000\042\114\uff81\121\u012a\122\u012d" +
    "\123\u012b\124\u0133\125\u012e\126\u0134\127\u0130\130\u0132\131" +
    "\u012c\132\u0129\133\u012f\134\u0131\166\ufed4\167\ufed4\215\uff81" +
    "\001\ufed6\000\004\215\u0128\001\002\000\012\010\u011e\012" +
    "\061\106\u011d\217\100\001\002\000\066\033\260\115\247" +
    "\116\267\117\240\135\244\137\241\140\261\141\242\142" +
    "\251\143\262\144\266\145\252\146\236\147\250\150\265" +
    "\151\264\152\245\153\263\154\257\155\253\156\270\157" +
    "\246\160\256\161\254\162\237\165\243\001\002\000\006" +
    "\114\uff82\215\uff82\001\ufed7\000\002\001\uff80\000\002\001" +
    "\ufed5\000\002\001\uff06\000\132\004\140\006\106\007\011" +
    "\010\034\011\053\012\061\020\126\034\103\056\143\057" +
    "\030\067\145\070\013\071\020\072\045\073\047\074\131" +
    "\075\006\076\035\106\056\107\027\110\067\111\051\112" +
    "\123\113\105\120\063\156\104\157\066\163\141\164\015" +
    "\166\052\167\146\170\026\171\132\172\040\173\125\174" +
    "\072\175\133\176\071\177\036\202\075\214\144\217\100" +
    "\220\112\221\060\001\002\000\134\004\140\006\106\007" +
    "\011\010\034\011\053\012\061\020\126\034\103\056\143" +
    "\057\030\067\145\070\013\071\020\072\045\073\047\074" +
    "\131\075\006\076\035\106\056\107\027\110\067\111\051" +
    "\112\123\113\105\120\063\143\u013f\156\104\157\066\163" +
    "\141\164\015\166\052\167\146\170\026\171\132\172\040" +
    "\173\125\174\072\175\133\176\071\177\036\202\075\214" +
    "\144\217\100\220\112\221\060\001\002\000\132\004\140" +
    "\006\106\007\011\010\034\011\053\012\061\020\126\034" +
    "\103\056\143\057\030\067\145\070\013\071\020\072\045" +
    "\073\047\074\131\075\006\076\035\106\056\107\027\110" +
    "\067\111\051\112\123\113\105\120\063\156\104\157\066" +
    "\163\141\164\015\166\052\167\146\170\026\171\132\172" +
    "\040\173\125\174\072\175\133\176\071\177\036\202\075" +
    "\214\144\217\100\220\112\221\060\001\002\000\132\004" +
    "\140\006\106\007\011\010\034\011\053\012\061\020\126" +
    "\034\103\056\143\057\030\067\145\070\013\071\020\072" +
    "\045\073\047\074\131\075\006\076\035\106\056\107\027" +
    "\110\067\111\051\112\123\113\105\120\063\156\104\157" +
    "\066\163\141\164\015\166\052\167\146\170\026\171\132" +
    "\172\040\173\125\174\072\175\133\176\071\177\036\202" +
    "\075\214\144\217\100\220\112\221\060\001\002\000\132" +
    "\004\140\006\106\007\011\010\034\011\053\012\061\020" +
    "\126\034\103\056\143\057\030\067\145\070\013\071\020" +
    "\072\045\073\047\074\131\075\006\076\035\106\056\107" +
    "\027\110\067\111\051\112\123\113\105\120\063\156\104" +
    "\157\066\163\141\164\015\166\052\167\146\170\026\171" +
    "\132\172\040\173\125\174\072\175\133\176\071\177\036" +
    "\202\075\214\144\217\100\220\112\221\060\001\002\000" +
    "\132\004\140\006\106\007\011\010\034\011\053\012\061" +
    "\020\126\034\103\056\143\057\030\067\145\070\013\071" +
    "\020\072\045\073\047\074\131\075\006\076\035\106\056" +
    "\107\027\110\067\111\051\112\123\113\105\120\063\156" +
    "\104\157\066\163\141\164\015\166\052\167\146\170\026" +
    "\171\132\172\040\173\125\174\072\175\133\176\071\177" +
    "\036\202\075\214\144\217\100\220\112\221\060\001\002" +
    "\000\132\004\140\006\106\007\011\010\034\011\053\012" +
    "\061\020\126\034\103\056\143\057\030\067\145\070\013" +
    "\071\020\072\045\073\047\074\131\075\006\076\035\106" +
    "\056\107\027\110\067\111\051\112\123\113\105\120\063" +
    "\156\104\157\066\163\141\164\015\166\052\167\146\170" +
    "\026\171\132\172\040\173\125\174\072\175\133\176\071" +
    "\177\036\202\075\214\144\217\100\220\112\221\060\001" +
    "\002\000\132\004\140\006\106\007\011\010\034\011\053" +
    "\012\061\020\126\034\103\056\143\057\030\067\145\070" +
    "\013\071\020\072\045\073\047\074\131\075\006\076\035" +
    "\106\056\107\027\110\067\111\051\112\123\113\105\120" +
    "\063\156\104\157\066\163\141\164\015\166\052\167\146" +
    "\170\026\171\132\172\040\173\125\174\072\175\133\176" +
    "\071\177\036\202\075\214\144\217\100\220\112\221\060" +
    "\001\002\000\132\004\140\006\106\007\011\010\034\011" +
    "\053\012\061\020\126\034\103\056\143\057\030\067\145" +
    "\070\013\071\020\072\045\073\047\074\131\075\006\076" +
    "\035\106\056\107\027\110\067\111\051\112\123\113\105" +
    "\120\063\156\104\157\066\163\141\164\015\166\052\167" +
    "\146\170\026\171\132\172\040\173\125\174\072\175\133" +
    "\176\071\177\036\202\075\214\144\217\100\220\112\221" +
    "\060\001\002\000\132\004\140\006\106\007\011\010\034" +
    "\011\053\012\061\020\126\034\103\056\143\057\030\067" +
    "\145\070\013\071\020\072\045\073\047\074\131\075\006" +
    "\076\035\106\056\107\027\110\067\111\051\112\123\113" +
    "\105\120\063\156\104\157\066\163\141\164\015\166\052" +
    "\167\146\170\026\171\132\172\040\173\125\174\072\175" +
    "\133\176\071\177\036\202\075\214\144\217\100\220\112" +
    "\221\060\001\002\000\132\004\140\006\106\007\011\010" +
    "\034\011\053\012\061\020\126\034\103\056\143\057\030" +
    "\067\145\070\013\071\020\072\045\073\047\074\131\075" +
    "\006\076\035\106\056\107\027\110\067\111\051\112\123" +
    "\113\105\120\063\156\104\157\066\163\141\164\015\166" +
    "\052\167\146\170\026\171\132\172\040\173\125\174\072" +
    "\175\133\176\071\177\036\202\075\214\144\217\100\220" +
    "\112\221\060\001\002\000\132\004\140\006\106\007\011" +
    "\010\034\011\053\012\061\020\126\034\103\056\143\057" +
    "\030\067\145\070\013\071\020\072\045\073\047\074\131" +
    "\075\006\076\035\106\056\107\027\110\067\111\051\112" +
    "\123\113\105\120\063\156\104\157\066\163\141\164\015" +
    "\166\052\167\146\170\026\171\132\172\040\173\125\174" +
    "\072\175\133\176\071\177\036\202\075\214\144\217\100" +
    "\220\112\221\060\001\002\000\060\033\260\135\244\137" +
    "\241\140\261\141\242\142\251\143\262\144\266\145\252" +
    "\146\236\147\250\150\265\151\264\152\245\153\263\154" +
    "\257\155\253\156\270\157\246\160\256\161\254\162\237" +
    "\165\243\001\uff47\000\060\033\260\135\244\137\241\140" +
    "\261\141\242\142\251\143\262\144\266\145\252\146\236" +
    "\147\250\150\265\151\264\152\245\153\263\154\257\155" +
    "\253\156\270\157\246\160\256\161\254\162\237\165\243" +
    "\001\uff49\000\060\033\260\135\244\137\241\140\261\141" +
    "\242\142\251\143\262\144\266\145\252\146\236\147\250" +
    "\150\265\151\264\152\245\153\263\154\257\155\253\156" +
    "\270\157\246\160\256\161\254\162\237\165\243\001\uff45" +
    "\000\060\033\260\135\244\137\241\140\261\141\242\142" +
    "\251\143\262\144\266\145\252\146\236\147\250\150\265" +
    "\151\264\152\245\153\263\154\257\155\253\156\270\157" +
    "\246\160\256\161\254\162\237\165\243\001\uff41\000\060" +
    "\033\260\135\244\137\241\140\261\141\242\142\251\143" +
    "\262\144\266\145\252\146\236\147\250\150\265\151\264" +
    "\152\245\153\263\154\257\155\253\156\270\157\246\160" +
    "\256\161\254\162\237\165\243\001\uff46\000\060\033\260" +
    "\135\244\137\241\140\261\141\242\142\251\143\262\144" +
    "\266\145\252\146\236\147\250\150\265\151\264\152\245" +
    "\153\263\154\257\155\253\156\270\157\246\160\256\161" +
    "\254\162\237\165\243\001\uff42\000\060\033\260\135\244" +
    "\137\241\140\261\141\242\142\251\143\262\144\266\145" +
    "\252\146\236\147\250\150\265\151\264\152\245\153\263" +
    "\154\257\155\253\156\270\157\246\160\256\161\254\162" +
    "\237\165\243\001\uff48\000\060\033\260\135\244\137\241" +
    "\140\261\141\242\142\251\143\262\144\266\145\252\146" +
    "\236\147\250\150\265\151\264\152\245\153\263\154\257" +
    "\155\253\156\270\157\246\160\256\161\254\162\237\165" +
    "\243\001\uff4b\000\060\033\260\135\244\137\241\140\261" +
    "\141\242\142\251\143\262\144\266\145\252\146\236\147" +
    "\250\150\265\151\264\152\245\153\263\154\257\155\253" +
    "\156\270\157\246\160\256\161\254\162\237\165\243\001" +
    "\uff44\000\060\033\260\135\244\137\241\140\261\141\242" +
    "\142\251\143\262\144\266\145\252\146\236\147\250\150" +
    "\265\151\264\152\245\153\263\154\257\155\253\156\270" +
    "\157\246\160\256\161\254\162\237\165\243\001\uff4a\000" +
    "\014\010\u011e\012\061\106\u011d\202\u0141\217\100\001\002" +
    "\000\060\033\260\135\244\137\241\140\261\141\242\142" +
    "\251\143\262\144\266\145\252\146\236\147\250\150\265" +
    "\151\264\152\245\153\263\154\257\155\253\156\270\157" +
    "\246\160\256\161\254\162\237\165\243\001\uff50\000\010" +
    "\010\306\012\061\217\100\001\002\000\002\001\uff4f\000" +
    "\004\214\u0145\001\ufef7\000\002\001\uff4e\000\134\004\140" +
    "\006\106\007\011\010\034\011\053\012\061\020\126\034" +
    "\103\056\143\057\030\067\145\070\013\071\020\072\045" +
    "\073\047\074\131\075\006\076\035\106\056\107\027\110" +
    "\067\111\051\112\123\113\105\120\063\143\u0123\156\104" +
    "\157\066\163\141\164\015\166\052\167\146\170\026\171" +
    "\132\172\040\173\125\174\072\175\133\176\071\177\036" +
    "\202\075\214\144\217\100\220\112\221\060\001\uff83\000" +
    "\004\215\u0147\001\002\000\002\001\ufef6\000\060\033\260" +
    "\135\244\137\241\140\261\141\242\142\251\143\262\144" +
    "\266\145\252\146\236\147\250\150\265\151\264\152\245" +
    "\153\263\154\257\155\253\156\270\157\246\160\256\161" +
    "\254\162\237\165\243\001\uff43\000\134\004\140\006\106" +
    "\007\011\010\034\011\053\012\061\020\126\034\103\056" +
    "\143\057\030\067\145\070\013\071\020\072\045\073\047" +
    "\074\131\075\006\076\035\106\056\107\027\110\067\111" +
    "\051\112\123\113\105\120\063\143\u014b\156\104\157\066" +
    "\163\141\164\015\166\052\167\146\170\026\171\132\172" +
    "\040\173\125\174\072\175\133\176\071\177\036\202\075" +
    "\214\144\217\100\220\112\221\060\001\002\000\042\114" +
    "\uff7e\121\u012a\122\u012d\123\u012b\124\u0133\125\u012e\126\u0134" +
    "\127\u0130\130\u0132\131\u012c\132\u0129\133\u012f\134\u0131\166" +
    "\ufed4\167\ufed4\215\uff7e\001\ufed6\000\012\010\u011e\012\061" +
    "\106\u011d\217\100\001\002\000\006\114\uff7f\215\uff7f\001" +
    "\ufed7\000\002\001\uff7d\000\134\004\140\006\106\007\011" +
    "\010\u0150\011\053\012\061\020\u014f\034\103\056\143\057" +
    "\030\067\145\070\013\071\020\072\045\073\047\074\131" +
    "\075\006\076\035\106\056\107\027\110\067\111\051\112" +
    "\123\113\105\120\063\143\u0123\156\104\157\066\163\141" +
    "\164\015\166\052\167\146\170\026\171\132\172\040\173" +
    "\125\174\072\175\133\176\071\177\036\202\075\214\144" +
    "\217\100\220\112\221\060\001\uff83\000\004\114\u015f\001" +
    "\ufef3\000\010\104\uff02\114\u0153\214\u011f\001\ufe8e\000\004" +
    "\215\u0152\001\002\000\002\001\uff07\000\134\004\140\006" +
    "\106\007\011\010\034\011\053\012\061\020\126\034\103" +
    "\056\143\057\030\067\145\070\013\071\020\072\045\073" +
    "\047\074\131\075\006\076\035\106\056\107\027\110\067" +
    "\111\051\112\123\113\105\120\063\143\u0156\156\104\157" +
    "\066\163\141\164\015\166\052\167\146\170\026\171\132" +
    "\172\040\173\125\174\072\175\133\176\071\177\036\202" +
    "\075\214\144\217\100\220\112\221\060\001\002\000\006" +
    "\114\u015a\215\u0159\001\002\000\042\114\uff0e\121\u012a\122" +
    "\u012d\123\u012b\124\u0133\125\u012e\126\u0134\127\u0130\130\u0132" +
    "\131\u012c\132\u0129\133\u012f\134\u0131\166\ufed4\167\ufed4\215" +
    "\uff0e\001\ufed6\000\012\010\u011e\012\061\106\u011d\217\100" +
    "\001\002\000\006\114\uff0f\215\uff0f\001\ufed7\000\002\001" +
    "\uff0d\000\002\001\uff08\000\134\004\140\006\106\007\011" +
    "\010\034\011\053\012\061\020\126\034\103\056\143\057" +
    "\030\067\145\070\013\071\020\072\045\073\047\074\131" +
    "\075\006\076\035\106\056\107\027\110\067\111\051\112" +
    "\123\113\105\120\063\143\u015c\156\104\157\066\163\141" +
    "\164\015\166\052\167\146\170\026\171\132\172\040\173" +
    "\125\174\072\175\133\176\071\177\036\202\075\214\144" +
    "\217\100\220\112\221\060\001\002\000\042\114\uff0b\121" +
    "\u012a\122\u012d\123\u012b\124\u0133\125\u012e\126\u0134\127\u0130" +
    "\130\u0132\131\u012c\132\u0129\133\u012f\134\u0131\166\ufed4\167" +
    "\ufed4\215\uff0b\001\ufed6\000\012\010\u011e\012\061\106\u011d" +
    "\217\100\001\002\000\006\114\uff0c\215\uff0c\001\ufed7\000" +
    "\002\001\uff0a\000\134\004\140\006\106\007\011\010\034" +
    "\011\053\012\061\020\126\034\103\056\143\057\030\067" +
    "\145\070\013\071\020\072\045\073\047\074\131\075\006" +
    "\076\035\106\056\107\027\110\067\111\051\112\123\113" +
    "\105\120\063\143\u0156\156\104\157\066\163\141\164\015" +
    "\166\052\167\146\170\026\171\132\172\040\173\125\174" +
    "\072\175\133\176\071\177\036\202\075\214\144\217\100" +
    "\220\112\221\060\001\002\000\006\114\u015a\215\u0161\001" +
    "\002\000\002\001\uff09\000\010\010\u0164\012\061\217\100" +
    "\001\002\000\004\214\u0168\001\ufeca\000\004\214\u0165\001" +
    "\002\000\134\004\140\006\106\007\011\010\034\011\053" +
    "\012\061\020\126\034\103\056\143\057\030\067\145\070" +
    "\013\071\020\072\045\073\047\074\131\075\006\076\035" +
    "\106\056\107\027\110\067\111\051\112\123\113\105\120" +
    "\063\143\u0123\156\104\157\066\163\141\164\015\166\052" +
    "\167\146\170\026\171\132\172\040\173\125\174\072\175" +
    "\133\176\071\177\036\202\075\214\144\217\100\220\112" +
    "\221\060\001\uff83\000\004\215\u0167\001\002\000\002\001" +
    "\uff05\000\134\004\140\006\106\007\011\010\034\011\053" +
    "\012\061\020\126\034\103\056\143\057\030\067\145\070" +
    "\013\071\020\072\045\073\047\074\131\075\006\076\035" +
    "\106\056\107\027\110\067\111\051\112\123\113\105\120" +
    "\063\143\u0123\156\104\157\066\163\141\164\015\166\052" +
    "\167\146\170\026\171\132\172\040\173\125\174\072\175" +
    "\133\176\071\177\036\202\075\214\144\217\100\220\112" +
    "\221\060\001\uff83\000\004\215\u016a\001\002\000\002\001" +
    "\uff04\000\014\010\u011e\012\061\067\u016f\106\u011d\217\100" +
    "\001\ufeb0\000\006\114\u0173\215\u0175\001\002\000\002\001" +
    "\ufeb3\000\002\001\ufeb2\000\004\214\u0170\001\002\000\014" +
    "\010\u011e\012\061\067\u016f\106\u011d\217\100\001\ufeb0\000" +
    "\006\114\u0173\215\u0172\001\002\000\002\001\ufeb1\000\014" +
    "\010\u011e\012\061\067\u016f\106\u011d\217\100\001\ufeb0\000" +
    "\002\001\ufeb4\000\004\121\u0176\001\002\000\132\004\140" +
    "\006\106\007\011\010\034\011\053\012\061\020\126\034" +
    "\103\056\143\057\030\067\145\070\013\071\020\072\045" +
    "\073\047\074\131\075\006\076\035\106\056\107\027\110" +
    "\067\111\051\112\123\113\105\120\063\156\104\157\066" +
    "\163\141\164\015\166\052\167\146\170\026\171\132\172" +
    "\040\173\125\174\072\175\133\176\071\177\036\202\075" +
    "\214\144\217\100\220\112\221\060\001\002\000\060\033" +
    "\260\135\244\137\241\140\261\141\242\142\251\143\262" +
    "\144\266\145\252\146\236\147\250\150\265\151\264\152" +
    "\245\153\263\154\257\155\253\156\270\157\246\160\256" +
    "\161\254\162\237\165\243\001\uff51\000\070\033\260\115" +
    "\247\116\267\117\240\135\244\137\241\140\261\141\242" +
    "\142\251\143\262\144\266\145\252\146\236\147\250\150" +
    "\265\151\264\152\245\153\263\154\257\155\253\156\270" +
    "\157\246\160\256\161\254\162\237\165\243\215\u0179\001" +
    "\002\000\002\001\uff1f\000\012\010\u011e\012\061\106\u011d" +
    "\217\100\001\002\000\002\001\ufe92\000\006\114\u017e\215" +
    "\u017d\001\002\000\002\001\ufe99\000\012\010\u011e\012\061" +
    "\106\u011d\217\100\001\002\000\002\001\ufe91\000\004\033" +
    "\260\001\uff2a\000\134\004\140\006\106\007\011\010\034" +
    "\011\053\012\061\020\126\034\103\056\143\057\030\067" +
    "\145\070\013\071\020\072\045\073\047\074\131\075\006" +
    "\076\035\106\056\107\027\110\067\111\051\112\123\113" +
    "\105\120\063\156\104\157\066\163\141\164\015\166\052" +
    "\167\146\170\026\171\132\172\040\173\125\174\072\175" +
    "\133\176\071\177\036\202\075\214\144\215\u0184\217\100" +
    "\220\112\221\060\001\002\000\002\001\uff15\000\070\033" +
    "\260\115\247\116\267\117\240\135\244\137\241\140\261" +
    "\141\242\142\251\143\262\144\266\145\252\146\236\147" +
    "\250\150\265\151\264\152\245\153\263\154\257\155\253" +
    "\156\270\157\246\160\256\161\254\162\237\165\243\215" +
    "\u0185\001\002\000\002\001\ufef9\000\002\001\ufef8\000\002" +
    "\001\uffe7\000\040\121\u012a\122\u012d\123\u012b\124\u0133\125" +
    "\u012e\126\u0134\127\u0130\130\u0132\131\u012c\132\u0129\133\u012f" +
    "\134\u0131\136\u018a\166\ufed4\167\ufed4\001\ufed6\000\004\136" +
    "\u0189\001\ufed7\000\002\001\uffe6\000\002\001\uffe5\000\002" +
    "\001\uff17\000\002\001\uff1b\000\132\004\140\006\106\007" +
    "\011\010\034\011\053\012\061\020\126\034\103\056\143" +
    "\057\030\067\145\070\013\071\020\072\045\073\047\074" +
    "\131\075\006\076\035\106\056\107\027\110\067\111\051" +
    "\112\123\113\105\120\063\156\104\157\066\163\141\164" +
    "\015\166\052\167\146\170\026\171\132\172\040\173\125" +
    "\174\072\175\133\176\071\177\036\202\075\214\144\217" +
    "\100\220\112\221\060\001\002\000\070\033\260\115\247" +
    "\116\267\117\240\135\244\137\241\140\261\141\242\142" +
    "\251\143\262\144\266\145\252\146\236\147\250\150\265" +
    "\151\264\152\245\153\263\154\257\155\253\156\270\157" +
    "\246\160\256\161\254\162\237\165\243\215\u018f\001\002" +
    "\000\006\101\u0191\216\u0192\001\002\000\002\001\uffec\000" +
    "\004\136\u01a4\001\uffa0\000\004\136\u0194\001\uffa0\000\010" +
    "\037\u01a1\040\u0197\041\u0198\001\002\000\002\001\uffa0\000" +
    "\010\037\u0196\040\u0197\041\u0198\001\002\000\004\136\u01a0" +
    "\001\002\000\132\004\140\006\106\007\011\010\034\011" +
    "\053\012\061\020\126\034\103\056\143\057\030\067\145" +
    "\070\013\071\020\072\045\073\047\074\131\075\006\076" +
    "\035\106\056\107\027\110\067\111\051\112\123\113\105" +
    "\120\063\156\104\157\066\163\141\164\015\166\052\167" +
    "\146\170\026\171\132\172\040\173\125\174\072\175\133" +
    "\176\071\177\036\202\075\214\144\217\100\220\112\221" +
    "\060\001\002\000\006\136\u019b\216\u019a\001\002\000\002" +
    "\001\ufff8\000\002\001\uff9d\000\002\001\uff9c\000\222\003" +
    "\115\004\140\005\151\006\106\007\011\010\034\011\053" +
    "\012\061\014\074\020\126\021\121\022\117\023\044\025" +
    "\033\027\101\031\152\034\103\036\127\042\055\043\120" +
    "\044\107\046\134\047\041\051\147\052\025\053\012\055" +
    "\076\056\143\057\030\060\223\061\032\062\137\067\145" +
    "\070\013\071\020\072\045\073\047\074\131\075\006\076" +
    "\035\101\064\105\024\106\056\107\027\110\067\111\051" +
    "\112\123\113\105\120\063\136\010\156\104\157\066\163" +
    "\141\164\015\166\052\167\146\170\026\171\132\172\040" +
    "\173\125\174\072\175\133\176\071\177\036\202\075\206" +
    "\042\207\062\210\017\214\144\217\100\220\112\221\060" +
    "\001\uff9e\000\072\033\260\115\247\116\267\117\240\135" +
    "\244\136\u019b\137\241\140\261\141\242\142\251\143\262" +
    "\144\266\145\252\146\236\147\250\150\265\151\264\152" +
    "\245\153\263\154\257\155\253\156\270\157\246\160\256" +
    "\161\254\162\237\165\243\216\u019a\001\002\000\002\001" +
    "\ufff8\000\222\003\115\004\140\005\151\006\106\007\011" +
    "\010\034\011\053\012\061\014\074\020\126\021\121\022" +
    "\117\023\044\025\033\027\101\031\152\034\103\036\127" +
    "\042\055\043\120\044\107\046\134\047\041\051\147\052" +
    "\025\053\012\055\076\056\143\057\030\060\223\061\032" +
    "\062\137\067\145\070\013\071\020\072\045\073\047\074" +
    "\131\075\006\076\035\101\064\105\024\106\056\107\027" +
    "\110\067\111\051\112\123\113\105\120\063\136\010\156" +
    "\104\157\066\163\141\164\015\166\052\167\146\170\026" +
    "\171\132\172\040\173\125\174\072\175\133\176\071\177" +
    "\036\202\075\206\042\207\062\210\017\214\144\217\100" +
    "\220\112\221\060\001\uff9f\000\002\001\uffa1\000\004\136" +
    "\u01a2\001\002\000\002\001\uffa2\000\010\040\u0197\041\u0198" +
    "\103\u01a7\001\002\000\002\001\uffa0\000\010\040\u0197\041" +
    "\u0198\103\u01a6\001\002\000\002\001\uffa3\000\002\001\uffa4" +
    "\000\002\001\uff19\000\066\033\260\115\247\116\267\117" +
    "\240\135\244\137\241\140\261\141\242\142\251\143\262" +
    "\144\266\145\252\146\236\147\250\150\265\151\264\152" +
    "\245\153\263\154\257\155\253\156\270\157\246\160\256" +
    "\161\254\162\237\165\243\001\ufe94\000\006\114\u01ac\136" +
    "\u01ad\001\002\000\066\033\260\115\247\116\267\117\240" +
    "\135\244\137\241\140\261\141\242\142\251\143\262\144" +
    "\266\145\252\146\236\147\250\150\265\151\264\152\245" +
    "\153\263\154\257\155\253\156\270\157\246\160\256\161" +
    "\254\162\237\165\243\001\uff56\000\132\004\140\006\106" +
    "\007\011\010\034\011\053\012\061\020\126\034\103\056" +
    "\143\057\030\067\145\070\013\071\020\072\045\073\047" +
    "\074\131\075\006\076\035\106\056\107\027\110\067\111" +
    "\051\112\123\113\105\120\063\156\104\157\066\163\141" +
    "\164\015\166\052\167\146\170\026\171\132\172\040\173" +
    "\125\174\072\175\133\176\071\177\036\202\075\214\144" +
    "\217\100\220\112\221\060\001\002\000\002\001\uffe2\000" +
    "\066\033\260\115\247\116\267\117\240\135\244\137\241" +
    "\140\261\141\242\142\251\143\262\144\266\145\252\146" +
    "\236\147\250\150\265\151\264\152\245\153\263\154\257" +
    "\155\253\156\270\157\246\160\256\161\254\162\237\165" +
    "\243\001\uff57\000\002\001\uffe9\000\070\033\260\115\247" +
    "\116\267\117\240\135\244\136\u01b1\137\241\140\261\141" +
    "\242\142\251\143\262\144\266\145\252\146\236\147\250" +
    "\150\265\151\264\152\245\153\263\154\257\155\253\156" +
    "\270\157\246\160\256\161\254\162\237\165\243\001\002" +
    "\000\002\001\uffe8\000\004\023\u01b3\001\002\000\004\214" +
    "\u01b4\001\002\000\132\004\140\006\106\007\011\010\034" +
    "\011\053\012\061\020\126\034\103\056\143\057\030\067" +
    "\145\070\013\071\020\072\045\073\047\074\131\075\006" +
    "\076\035\106\056\107\027\110\067\111\051\112\123\113" +
    "\105\120\063\156\104\157\066\163\141\164\015\166\052" +
    "\167\146\170\026\171\132\172\040\173\125\174\072\175" +
    "\133\176\071\177\036\202\075\214\144\217\100\220\112" +
    "\221\060\001\002\000\070\033\260\115\247\116\267\117" +
    "\240\135\244\137\241\140\261\141\242\142\251\143\262" +
    "\144\266\145\252\146\236\147\250\150\265\151\264\152" +
    "\245\153\263\154\257\155\253\156\270\157\246\160\256" +
    "\161\254\162\237\165\243\215\u01b6\001\002\000\004\136" +
    "\u01b7\001\002\000\002\001\uffee\000\002\001\uffbf\000\004" +
    "\063\u01bb\001\uffb6\000\002\001\uffbe\000\004\010\u01be\001" +
    "\002\000\004\114\u01bf\001\uffb5\000\002\001\uffb2\000\002" +
    "\001\uff02\000\004\010\u01be\001\002\000\002\001\uffb1\000" +
    "\004\101\u01c2\001\002\000\002\001\uff72\000\026\045\u01cf" +
    "\054\u01c6\103\u01cc\105\u01d3\206\u01c9\207\u01cb\210\u01ce\211" +
    "\u01d1\212\u01c7\213\u01c8\001\uff67\000\006\114\u01ff\136\u0200" +
    "\001\002\000\002\001\uff73\000\002\001\uff68\000\002\001" +
    "\uff62\000\002\001\uff63\000\002\001\uff60\000\002\001\uff65" +
    "\000\002\001\uff5f\000\002\001\uffbd\000\004\012\u01f6\001" +
    "\002\000\002\001\uff5e\000\004\010\u01f3\001\002\000\020" +
    "\044\uff66\206\u01c9\207\u01cb\210\u01ce\211\u01d1\212\u01c7\213" +
    "\u01c8\001\uff69\000\002\001\uff61\000\004\044\u01d4\001\002" +
    "\000\002\001\uff6c\000\004\143\u01d6\001\uffc7\000\006\010" +
    "\157\106\155\001\002\000\002\001\uffc6\000\002\001\uff6f" +
    "\000\004\214\u01d9\001\002\000\012\003\u01dc\010\u01de\070" +
    "\u01da\215\uff90\001\uff87\000\002\001\uff85\000\006\012\u01ec" +
    "\143\u01eb\001\002\000\014\003\u01dc\010\u01de\070\u01da\114" +
    "\uff88\215\uff88\001\uff87\000\004\215\u01e3\001\002\000\002" +
    "\001\uff86\000\004\114\u01e1\001\uff91\000\002\001\uff8f\000" +
    "\010\003\u01dc\010\u01de\070\u01da\001\uff87\000\002\001\uff8e" +
    "\000\002\001\uff6e\000\006\101\u01e6\136\u01e7\001\002\000" +
    "\002\001\uff6d\000\002\001\ufff8\000\002\001\uff6b\000\224" +
    "\003\115\004\140\005\151\006\106\007\011\010\034\011" +
    "\053\012\061\014\074\020\126\021\121\022\117\023\044" +
    "\025\033\027\101\031\152\034\103\036\127\042\055\043" +
    "\120\044\107\046\134\047\041\051\147\052\025\053\012" +
    "\055\076\056\143\057\030\060\223\061\032\062\137\067" +
    "\145\070\013\071\020\072\045\073\047\074\131\075\006" +
    "\076\035\101\064\103\u01e9\105\024\106\056\107\027\110" +
    "\067\111\051\112\123\113\105\120\063\136\010\156\104" +
    "\157\066\163\141\164\015\166\052\167\146\170\026\171" +
    "\132\172\040\173\125\174\072\175\133\176\071\177\036" +
    "\202\075\206\042\207\062\210\017\214\144\217\100\220" +
    "\112\221\060\001\002\000\002\001\uff6a\000\004\114\u01e1" +
    "\001\uff8d\000\004\012\u01ef\001\002\000\004\121\u01ed\001" +
    "\uff8c\000\034\006\106\007\011\010\167\020\126\070\163" +
    "\071\020\072\045\073\047\074\131\075\006\106\155\156" +
    "\162\157\170\001\002\000\002\001\uff8a\000\004\121\u01f0" +
    "\001\uff8b\000\034\006\106\007\011\010\167\020\126\070" +
    "\163\071\020\072\045\073\047\074\131\075\006\106\155" +
    "\156\162\157\170\001\002\000\002\001\uff89\000\002\001" +
    "\uff64\000\004\121\u01f4\001\002\000\034\006\106\007\011" +
    "\010\167\020\126\070\163\071\020\072\045\073\047\074" +
    "\131\075\006\106\155\156\162\157\170\001\002\000\002" +
    "\001\uff58\000\004\121\u01fd\001\uff5b\000\006\114\u01f8\136" +
    "\u01f9\001\002\000\004\012\u01fa\001\002\000\002\001\uff71" +
    "\000\004\121\u01fb\001\uff5d\000\034\006\106\007\011\010" +
    "\167\020\126\070\163\071\020\072\045\073\047\074\131" +
    "\075\006\106\155\156\162\157\170\001\002\000\002\001" +
    "\uff5c\000\034\006\106\007\011\010\167\020\126\070\163" +
    "\071\020\072\045\073\047\074\131\075\006\106\155\156" +
    "\162\157\170\001\002\000\002\001\uff5a\000\004\010\u0201" +
    "\001\002\000\002\001\uff70\000\004\121\u0202\001\002\000" +
    "\034\006\106\007\011\010\167\020\126\070\163\071\020" +
    "\072\045\073\047\074\131\075\006\106\155\156\162\157" +
    "\170\001\002\000\002\001\uff59\000\014\012\061\017\u020a" +
    "\100\u0209\102\u0207\220\u0208\001\002\000\006\065\u0215\200" +
    "\u0214\001\ufea2\000\002\001\ufea5\000\012\010\u011e\012\061" +
    "\106\u011d\217\100\001\002\000\002\001\ufee2\000\132\004" +
    "\140\006\106\007\011\010\034\011\u020b\012\061\020\126" +
    "\034\103\056\143\057\030\067\145\070\013\071\020\072" +
    "\045\073\047\074\131\075\006\076\035\106\056\107\027" +
    "\110\067\111\051\112\123\113\105\120\063\156\104\157" +
    "\066\163\141\164\015\166\052\167\146\170\026\171\132" +
    "\172\040\173\125\174\072\175\133\176\071\177\036\202" +
    "\075\214\144\217\100\220\112\221\060\001\002\000\002" +
    "\001\ufea4\000\004\200\u020e\001\ufee5\000\070\033\260\103" +
    "\u020d\115\247\116\267\117\240\135\244\137\241\140\261" +
    "\141\242\142\251\143\262\144\266\145\252\146\236\147" +
    "\250\150\265\151\264\152\245\153\263\154\257\155\253" +
    "\156\270\157\246\160\256\161\254\162\237\165\243\001" +
    "\002\000\002\001\ufe9f\000\132\004\140\006\106\007\011" +
    "\010\034\011\053\012\061\020\126\034\103\056\143\057" +
    "\030\067\145\070\013\071\020\072\045\073\047\074\131" +
    "\075\006\076\035\106\056\107\027\110\067\111\051\112" +
    "\123\113\105\120\063\156\104\157\066\163\141\164\015" +
    "\166\052\167\146\170\026\171\132\172\040\173\125\174" +
    "\072\175\133\176\071\177\036\202\075\214\144\217\100" +
    "\220\112\221\060\001\002\000\070\033\260\115\247\116" +
    "\267\117\240\135\244\137\241\140\261\141\242\142\251" +
    "\143\262\144\266\145\252\146\236\147\250\150\265\151" +
    "\264\152\245\153\263\154\257\155\253\156\270\157\246" +
    "\160\256\161\254\162\237\165\243\201\u0210\001\002\000" +
    "\004\103\u0211\001\002\000\002\001\ufe9e\000\004\103\u0213" +
    "\001\002\000\002\001\ufe9d\000\012\010\157\012\061\013" +
    "\u021a\106\155\001\002\000\006\010\157\106\155\001\002" +
    "\000\002\001\ufea0\000\002\001\ufe9a\000\004\201\u021b\001" +
    "\002\000\002\001\ufe9c\000\002\001\ufe9b\000\002\001\ufea1" +
    "\000\006\010\157\106\155\001\002\000\002\001\uffc5\000" +
    "\004\214\u021f\001\002\000\012\003\u01dc\010\u01de\070\u01da" +
    "\215\uff90\001\uff87\000\004\215\u0221\001\002\000\002\001" +
    "\uffc4\000\004\101\u0223\001\002\000\002\001\ufff8\000\224" +
    "\003\115\004\140\005\151\006\106\007\011\010\034\011" +
    "\053\012\061\014\074\020\126\021\121\022\117\023\044" +
    "\025\033\027\101\031\152\034\103\036\127\042\055\043" +
    "\120\044\107\046\134\047\041\051\147\052\025\053\012" +
    "\055\076\056\143\057\030\060\223\061\032\062\137\067" +
    "\145\070\013\071\020\072\045\073\047\074\131\075\006" +
    "\076\035\101\064\103\u0225\105\024\106\056\107\027\110" +
    "\067\111\051\112\123\113\105\120\063\136\010\156\104" +
    "\157\066\163\141\164\015\166\052\167\146\170\026\171" +
    "\132\172\040\173\125\174\072\175\133\176\071\177\036" +
    "\202\075\206\042\207\062\210\017\214\144\217\100\220" +
    "\112\221\060\001\002\000\002\001\uffc3\000\066\033\260" +
    "\115\247\116\267\117\240\135\244\137\241\140\261\141" +
    "\242\142\251\143\262\144\266\145\252\146\236\147\250" +
    "\150\265\151\264\152\245\153\263\154\257\155\253\156" +
    "\270\157\246\160\256\161\254\162\237\165\243\001\ufe93" +
    "\000\012\033\260\160\256\161\254\162\237\001\uff2c\000" +
    "\002\001\uff4c\000\132\004\140\006\106\007\011\010\034" +
    "\011\053\012\061\020\126\034\103\056\143\057\030\067" +
    "\145\070\013\071\020\072\045\073\047\074\131\075\006" +
    "\076\035\106\056\107\027\110\067\111\051\112\123\113" +
    "\105\120\063\156\104\157\066\163\141\164\015\166\052" +
    "\167\146\170\026\171\132\172\040\173\125\174\072\175" +
    "\133\176\071\177\036\202\075\214\144\217\100\220\112" +
    "\221\060\001\002\000\040\035\u023b\121\u012a\122\u012d\123" +
    "\u012b\124\u0133\125\u012e\126\u0134\127\u0130\130\u0132\131\u012c" +
    "\132\u0129\133\u012f\134\u0131\166\ufed4\167\ufed4\001\ufed6\000" +
    "\004\035\u022c\001\ufed7\000\012\010\u011e\012\061\106\u011d" +
    "\217\100\001\002\000\004\066\u022f\001\uffb0\000\004\215" +
    "\u0234\001\002\000\014\010\u011e\012\061\106\u011d\143\u0232" +
    "\217\100\001\002\000\002\001\uffae\000\002\001\uffaf\000" +
    "\012\010\u011e\012\061\106\u011d\217\100\001\002\000\002" +
    "\001\uffad\000\210\003\115\004\140\005\151\006\106\007" +
    "\011\010\034\011\053\012\061\014\074\020\126\021\121" +
    "\022\117\023\044\025\033\027\101\031\152\034\103\036" +
    "\127\042\055\043\120\046\134\047\041\051\147\052\025" +
    "\053\012\055\076\056\143\057\030\067\145\070\013\071" +
    "\020\072\045\073\047\074\131\075\006\076\035\101\064" +
    "\105\024\106\056\107\027\110\067\111\051\112\123\113" +
    "\105\120\063\136\010\156\104\157\066\163\141\164\015" +
    "\166\052\167\146\170\026\171\132\172\040\173\125\174" +
    "\072\175\133\176\071\177\036\202\075\206\042\214\144" +
    "\216\u0235\217\100\220\112\221\060\001\002\000\002\001" +
    "\ufff8\000\002\001\uffaa\000\002\001\uffdc\000\224\003\115" +
    "\004\140\005\151\006\106\007\011\010\034\011\053\012" +
    "\061\014\074\020\126\021\121\022\117\023\044\025\033" +
    "\027\101\030\u0239\031\152\034\103\036\127\042\055\043" +
    "\120\044\107\046\134\047\041\051\147\052\025\053\012" +
    "\055\076\056\143\057\030\060\223\061\032\062\137\067" +
    "\145\070\013\071\020\072\045\073\047\074\131\075\006" +
    "\076\035\101\064\105\024\106\056\107\027\110\067\111" +
    "\051\112\123\113\105\120\063\136\010\156\104\157\066" +
    "\163\141\164\015\166\052\167\146\170\026\171\132\172" +
    "\040\173\125\174\072\175\133\176\071\177\036\202\075" +
    "\206\042\207\062\210\017\214\144\217\100\220\112\221" +
    "\060\001\002\000\004\136\u023a\001\002\000\002\001\uffa9" +
    "\000\014\010\u011e\012\061\106\u011d\143\u0232\217\100\001" +
    "\002\000\004\066\u022f\001\uffb0\000\004\215\u023e\001\002" +
    "\000\210\003\115\004\140\005\151\006\106\007\011\010" +
    "\034\011\053\012\061\014\074\020\126\021\121\022\117" +
    "\023\044\025\033\027\101\031\152\034\103\036\127\042" +
    "\055\043\120\046\134\047\041\051\147\052\025\053\012" +
    "\055\076\056\143\057\030\067\145\070\013\071\020\072" +
    "\045\073\047\074\131\075\006\076\035\101\064\105\024" +
    "\106\056\107\027\110\067\111\051\112\123\113\105\120" +
    "\063\136\010\156\104\157\066\163\141\164\015\166\052" +
    "\167\146\170\026\171\132\172\040\173\125\174\072\175" +
    "\133\176\071\177\036\202\075\206\042\214\144\216\u0235" +
    "\217\100\220\112\221\060\001\002\000\002\001\uffdd\000" +
    "\002\001\uff40\000\002\001\uff3e\000\012\010\u011e\012\061" +
    "\106\u011d\217\100\001\002\000\006\114\u0247\215\u0246\001" +
    "\002\000\002\001\uffcc\000\002\001\uffce\000\004\136\u0249" +
    "\001\002\000\012\010\u011e\012\061\106\u011d\217\100\001" +
    "\002\000\002\001\uffcd\000\002\001\uffde\000\004\214\u0145" +
    "\001\ufef7\000\002\001\uff4d\000\002\001\uff18\000\002\001" +
    "\uff16\000\010\101\310\200\311\214\ufecb\001\ufec6\000\066" +
    "\033\260\115\247\116\267\117\240\135\244\137\241\140" +
    "\261\141\242\142\251\143\262\144\266\145\252\146\236" +
    "\147\250\150\265\151\264\152\245\153\263\154\257\155" +
    "\253\156\270\157\246\160\256\161\254\162\237\165\243" +
    "\001\ufe96\000\012\033\260\160\256\161\254\162\237\001" +
    "\uff2b\000\224\003\115\004\140\005\151\006\106\007\011" +
    "\010\034\011\053\012\061\014\074\020\126\021\121\022" +
    "\117\023\044\025\033\027\101\031\152\034\103\036\127" +
    "\042\055\043\120\044\107\046\134\047\041\051\147\052" +
    "\025\053\012\055\076\056\143\057\030\060\223\061\032" +
    "\062\137\067\145\070\013\071\020\072\045\073\047\074" +
    "\131\075\006\076\035\101\064\103\u0252\105\024\106\056" +
    "\107\027\110\067\111\051\112\123\113\105\120\063\136" +
    "\010\156\104\157\066\163\141\164\015\166\052\167\146" +
    "\170\026\171\132\172\040\173\125\174\072\175\133\176" +
    "\071\177\036\202\075\206\042\207\062\210\017\214\144" +
    "\217\100\220\112\221\060\001\002\000\002\001\ufff2\000" +
    "\060\033\260\135\244\137\241\140\261\141\242\142\251" +
    "\143\262\144\266\145\252\146\236\147\250\150\265\151" +
    "\264\152\245\153\263\154\257\155\253\156\270\157\246" +
    "\160\256\161\254\162\237\165\243\001\uff10\000\002\001" +
    "\uffbb\000\014\012\061\017\u020a\100\u0209\102\u0207\221\u0256" +
    "\001\002\000\002\001\uff11\000\004\215\u0258\001\002\000" +
    "\004\136\u0259\001\002\000\002\001\ufffa\000\002\001\uffeb" +
    "\000\070\033\260\115\247\116\267\117\240\135\244\136" +
    "\u025c\137\241\140\261\141\242\142\251\143\262\144\266" +
    "\145\252\146\236\147\250\150\265\151\264\152\245\153" +
    "\263\154\257\155\253\156\270\157\246\160\256\161\254" +
    "\162\237\165\243\001\002\000\002\001\uffea\000\002\001" +
    "\uff3f\000\132\004\140\006\106\007\011\010\034\011\053" +
    "\012\061\020\126\034\103\056\143\057\030\067\145\070" +
    "\013\071\020\072\045\073\047\074\131\075\006\076\035" +
    "\106\056\107\027\110\067\111\051\112\123\113\105\120" +
    "\063\156\104\157\066\163\141\164\015\166\052\167\146" +
    "\170\026\171\132\172\040\173\125\174\072\175\133\176" +
    "\071\177\036\202\075\214\144\217\100\220\112\221\060" +
    "\001\002\000\070\033\260\115\247\116\267\117\240\135" +
    "\244\137\241\140\261\141\242\142\251\143\262\144\266" +
    "\145\252\146\236\147\250\150\265\151\264\152\245\153" +
    "\263\154\257\155\253\156\270\157\246\160\256\161\254" +
    "\162\237\165\243\215\u0260\001\002\000\002\001\ufe95\000" +
    "\014\010\157\012\061\101\337\106\155\217\100\001\002" +
    "\000\004\214\u0264\001\ufecd\000\002\001\ufed0\000\134\004" +
    "\140\006\106\007\011\010\034\011\053\012\061\020\126" +
    "\034\103\056\143\057\030\067\145\070\013\071\020\072" +
    "\045\073\047\074\131\075\006\076\035\106\056\107\027" +
    "\110\067\111\051\112\123\113\105\120\063\143\u0123\156" +
    "\104\157\066\163\141\164\015\166\052\167\146\170\026" +
    "\171\132\172\040\173\125\174\072\175\133\176\071\177" +
    "\036\202\075\214\144\217\100\220\112\221\060\001\uff83" +
    "\000\004\215\u0266\001\002\000\002\001\ufece\000\004\065" +
    "\u0269\001\ufed3\000\002\001\ufed1\000\014\010\157\012\061" +
    "\101\337\106\155\217\100\001\002\000\004\214\u0264\001" +
    "\ufecd\000\002\001\ufecf\000\002\001\uffc2\000\004\063\u026e" +
    "\001\uffb9\000\004\010\u01be\001\002\000\004\064\u0271\001" +
    "\uffb4\000\002\001\uffc1\000\004\010\u01be\001\002\000\004" +
    "\114\u01bf\001\uffb3\000\004\101\u0274\001\002\000\002\001" +
    "\uff72\000\026\045\u01cf\054\u01c6\103\u0276\105\u01d3\206\u01c9" +
    "\207\u01cb\210\u01ce\211\u01d1\212\u01c7\213\u01c8\001\uff67\000" +
    "\002\001\uffc0\000\002\001\uffb8\000\132\004\140\006\106" +
    "\007\011\010\034\011\053\012\061\020\126\034\103\056" +
    "\143\057\030\067\145\070\013\071\020\072\045\073\047" +
    "\074\131\075\006\076\035\106\056\107\027\110\067\111" +
    "\051\112\123\113\105\120\063\156\104\157\066\163\141" +
    "\164\015\166\052\167\146\170\026\171\132\172\040\173" +
    "\125\174\072\175\133\176\071\177\036\202\075\214\144" +
    "\217\100\220\112\221\060\001\002\000\070\033\260\115" +
    "\247\116\267\117\240\135\244\137\241\140\261\141\242" +
    "\142\251\143\262\144\266\145\252\146\236\147\250\150" +
    "\265\151\264\152\245\153\263\154\257\155\253\156\270" +
    "\157\246\160\256\161\254\162\237\165\243\215\u027a\001" +
    "\002\000\210\003\115\004\140\005\151\006\106\007\011" +
    "\010\034\011\053\012\061\014\074\020\126\021\121\022" +
    "\117\023\044\025\033\027\101\031\152\034\103\036\127" +
    "\042\055\043\120\046\134\047\041\051\147\052\025\053" +
    "\012\055\076\056\143\057\030\067\145\070\013\071\020" +
    "\072\045\073\047\074\131\075\006\076\035\101\064\105" +
    "\024\106\056\107\027\110\067\111\051\112\123\113\105" +
    "\120\063\136\010\156\104\157\066\163\141\164\015\166" +
    "\052\167\146\170\026\171\132\172\040\173\125\174\072" +
    "\175\133\176\071\177\036\202\075\206\042\214\144\216" +
    "\u027b\217\100\220\112\221\060\001\002\000\002\001\ufff8" +
    "\000\002\001\uffef\000\002\001\uff9b\000\224\003\115\004" +
    "\140\005\151\006\106\007\011\010\034\011\053\012\061" +
    "\014\074\020\126\021\121\022\117\023\044\024\u027f\025" +
    "\033\027\101\031\152\034\103\036\127\042\055\043\120" +
    "\044\107\046\134\047\041\051\147\052\025\053\012\055" +
    "\076\056\143\057\030\060\223\061\032\062\137\067\145" +
    "\070\013\071\020\072\045\073\047\074\131\075\006\076" +
    "\035\101\064\105\024\106\056\107\027\110\067\111\051" +
    "\112\123\113\105\120\063\136\010\156\104\157\066\163" +
    "\141\164\015\166\052\167\146\170\026\171\132\172\040" +
    "\173\125\174\072\175\133\176\071\177\036\202\075\206" +
    "\042\207\062\210\017\214\144\217\100\220\112\221\060" +
    "\001\002\000\004\136\u0280\001\002\000\002\001\uff9a\000" +
    "\004\121\u0288\001\uff75\000\006\114\u0283\136\u0284\001\002" +
    "\000\004\012\u0285\001\002\000\002\001\uffe3\000\004\121" +
    "\u0286\001\uff77\000\034\006\106\007\011\010\167\020\126" +
    "\070\163\071\020\072\045\073\047\074\131\075\006\106" +
    "\155\156\162\157\170\001\002\000\002\001\uff76\000\034" +
    "\006\106\007\011\010\167\020\126\070\163\071\020\072" +
    "\045\073\047\074\131\075\006\106\155\156\162\157\170" +
    "\001\002\000\002\001\uff74\000\002\001\ufff8\000\224\003" +
    "\115\004\140\005\151\006\106\007\011\010\034\011\053" +
    "\012\061\014\074\020\126\021\121\022\117\023\044\025" +
    "\033\027\101\031\152\034\103\036\127\042\055\043\120" +
    "\044\107\046\134\047\041\051\147\052\025\053\012\055" +
    "\076\056\143\057\030\060\223\061\032\062\137\067\145" +
    "\070\013\071\020\072\045\073\047\074\131\075\006\076" +
    "\035\101\064\103\u028c\105\024\106\056\107\027\110\067" +
    "\111\051\112\123\113\105\120\063\136\010\156\104\157" +
    "\066\163\141\164\015\166\052\167\146\170\026\171\132" +
    "\172\040\173\125\174\072\175\133\176\071\177\036\202" +
    "\075\206\042\207\062\210\017\214\144\217\100\220\112" +
    "\221\060\001\002\000\004\050\u028d\001\002\000\004\214" +
    "\u028e\001\002\000\004\010\u01be\001\002\000\004\012\061" +
    "\001\002\000\004\215\u0291\001\002\000\002\001\uffd9\000" +
    "\004\101\u0293\001\002\000\002\001\ufff8\000\224\003\115" +
    "\004\140\005\151\006\106\007\011\010\034\011\053\012" +
    "\061\014\074\020\126\021\121\022\117\023\044\025\033" +
    "\027\101\031\152\034\103\036\127\042\055\043\120\044" +
    "\107\046\134\047\041\051\147\052\025\053\012\055\076" +
    "\056\143\057\030\060\223\061\032\062\137\067\145\070" +
    "\013\071\020\072\045\073\047\074\131\075\006\076\035" +
    "\101\064\103\u0295\105\024\106\056\107\027\110\067\111" +
    "\051\112\123\113\105\120\063\136\010\156\104\157\066" +
    "\163\141\164\015\166\052\167\146\170\026\171\132\172" +
    "\040\173\125\174\072\175\133\176\071\177\036\202\075" +
    "\206\042\207\062\210\017\214\144\217\100\220\112\221" +
    "\060\001\002\000\004\050\u0296\001\uffd3\000\004\214\u029b" +
    "\001\002\000\002\001\uffd8\000\002\001\uffd2\000\004\050" +
    "\u0296\001\uffd4\000\002\001\uffd1\000\004\010\u01be\001\002" +
    "\000\004\012\u029d\001\002\000\004\215\u029e\001\002\000" +
    "\002\001\uffd0\000\004\101\u02a0\001\002\000\002\001\ufff8" +
    "\000\224\003\115\004\140\005\151\006\106\007\011\010" +
    "\034\011\053\012\061\014\074\020\126\021\121\022\117" +
    "\023\044\025\033\027\101\031\152\034\103\036\127\042" +
    "\055\043\120\044\107\046\134\047\041\051\147\052\025" +
    "\053\012\055\076\056\143\057\030\060\223\061\032\062" +
    "\137\067\145\070\013\071\020\072\045\073\047\074\131" +
    "\075\006\076\035\101\064\103\u02a2\105\024\106\056\107" +
    "\027\110\067\111\051\112\123\113\105\120\063\136\010" +
    "\156\104\157\066\163\141\164\015\166\052\167\146\170" +
    "\026\171\132\172\040\173\125\174\072\175\133\176\071" +
    "\177\036\202\075\206\042\207\062\210\017\214\144\217" +
    "\100\220\112\221\060\001\002\000\002\001\uffcf\000\002" +
    "\001\uff1a\000\002\001\uff14\000\014\012\061\017\u020a\077" +
    "\u02a6\100\u0209\102\u0207\001\002\000\002\001\ufee1\000\132" +
    "\004\140\006\106\007\011\010\034\011\053\012\061\020" +
    "\126\034\103\056\143\057\030\067\145\070\013\071\020" +
    "\072\045\073\047\074\131\075\006\076\035\106\056\107" +
    "\027\110\067\111\051\112\123\113\105\120\063\156\104" +
    "\157\066\163\141\164\015\166\052\167\146\170\026\171" +
    "\132\172\040\173\125\174\072\175\133\176\071\177\036" +
    "\202\075\214\144\217\100\220\112\221\060\001\uff55\000" +
    "\004\114\u02b6\001\uff54\000\066\033\260\115\247\116\267" +
    "\117\240\135\244\137\241\140\261\141\242\142\251\143" +
    "\262\144\266\145\252\146\236\147\250\150\265\151\264" +
    "\152\245\153\263\154\257\155\253\156\270\157\246\160" +
    "\256\161\254\162\237\165\243\001\uff52\000\004\136\u02ab" +
    "\001\002\000\132\004\140\006\106\007\011\010\034\011" +
    "\053\012\061\020\126\034\103\056\143\057\030\067\145" +
    "\070\013\071\020\072\045\073\047\074\131\075\006\076" +
    "\035\106\056\107\027\110\067\111\051\112\123\113\105" +
    "\120\063\156\104\157\066\163\141\164\015\166\052\167" +
    "\146\170\026\171\132\172\040\173\125\174\072\175\133" +
    "\176\071\177\036\202\075\214\144\217\100\220\112\221" +
    "\060\001\uff55\000\004\136\u02ad\001\002\000\132\004\140" +
    "\006\106\007\011\010\034\011\053\012\061\020\126\034" +
    "\103\056\143\057\030\067\145\070\013\071\020\072\045" +
    "\073\047\074\131\075\006\076\035\106\056\107\027\110" +
    "\067\111\051\112\123\113\105\120\063\156\104\157\066" +
    "\163\141\164\015\166\052\167\146\170\026\171\132\172" +
    "\040\173\125\174\072\175\133\176\071\177\036\202\075" +
    "\214\144\217\100\220\112\221\060\001\uff55\000\004\215" +
    "\u02af\001\002\000\210\003\115\004\140\005\151\006\106" +
    "\007\011\010\034\011\053\012\061\014\074\020\126\021" +
    "\121\022\117\023\044\025\033\027\101\031\152\034\103" +
    "\036\127\042\055\043\120\046\134\047\041\051\147\052" +
    "\025\053\012\055\076\056\143\057\030\067\145\070\013" +
    "\071\020\072\045\073\047\074\131\075\006\076\035\101" +
    "\064\105\024\106\056\107\027\110\067\111\051\112\123" +
    "\113\105\120\063\136\010\156\104\157\066\163\141\164" +
    "\015\166\052\167\146\170\026\171\132\172\040\173\125" +
    "\174\072\175\133\176\071\177\036\202\075\206\042\214" +
    "\144\216\u02b1\217\100\220\112\221\060\001\002\000\002" +
    "\001\uffed\000\002\001\ufff8\000\002\001\uffac\000\224\003" +
    "\115\004\140\005\151\006\106\007\011\010\034\011\053" +
    "\012\061\014\074\020\126\021\121\022\117\023\044\025" +
    "\033\026\u02b4\027\101\031\152\034\103\036\127\042\055" +
    "\043\120\044\107\046\134\047\041\051\147\052\025\053" +
    "\012\055\076\056\143\057\030\060\223\061\032\062\137" +
    "\067\145\070\013\071\020\072\045\073\047\074\131\075" +
    "\006\076\035\101\064\105\024\106\056\107\027\110\067" +
    "\111\051\112\123\113\105\120\063\136\010\156\104\157" +
    "\066\163\141\164\015\166\052\167\146\170\026\171\132" +
    "\172\040\173\125\174\072\175\133\176\071\177\036\202" +
    "\075\206\042\207\062\210\017\214\144\217\100\220\112" +
    "\221\060\001\002\000\004\136\u02b5\001\002\000\002\001" +
    "\uffab\000\132\004\140\006\106\007\011\010\034\011\053" +
    "\012\061\020\126\034\103\056\143\057\030\067\145\070" +
    "\013\071\020\072\045\073\047\074\131\075\006\076\035" +
    "\106\056\107\027\110\067\111\051\112\123\113\105\120" +
    "\063\156\104\157\066\163\141\164\015\166\052\167\146" +
    "\170\026\171\132\172\040\173\125\174\072\175\133\176" +
    "\071\177\036\202\075\214\144\217\100\220\112\221\060" +
    "\001\002\000\066\033\260\115\247\116\267\117\240\135" +
    "\244\137\241\140\261\141\242\142\251\143\262\144\266" +
    "\145\252\146\236\147\250\150\265\151\264\152\245\153" +
    "\263\154\257\155\253\156\270\157\246\160\256\161\254" +
    "\162\237\165\243\001\uff53\000\010\010\u02b9\012\061\217" +
    "\100\001\002\000\004\214\u0165\001\ufe90\000\012\010\u011e" +
    "\012\061\106\u011d\217\100\001\002\000\004\215\u02bc\001" +
    "\002\000\002\001\ufe98\000\066\033\260\115\247\116\267" +
    "\117\240\135\244\137\241\140\261\141\242\142\251\143" +
    "\262\144\266\145\252\146\236\147\250\150\265\151\264" +
    "\152\245\153\263\154\257\155\253\156\270\157\246\160" +
    "\256\161\254\162\237\165\243\001\ufe97\000\002\001\uff1c" +
    "\000\004\020\u02c3\001\002\000\004\136\u02c2\001\002\000" +
    "\002\001\uffcb\000\002\001\uffdf\000\004\215\u02c4\001\002" +
    "\000\002\001\uffca\000\002\001\uffba\000\002\001\uffe0\000" +
    "\002\001\uff29\000\134\004\140\006\106\007\011\010\034" +
    "\011\053\012\061\020\126\034\103\056\143\057\030\067" +
    "\145\070\013\071\020\072\045\073\047\074\131\075\006" +
    "\076\035\106\056\107\027\110\067\111\051\112\123\113" +
    "\105\120\063\143\u02cb\156\104\157\066\163\141\164\015" +
    "\166\052\167\146\170\026\171\132\172\040\173\125\174" +
    "\072\175\133\176\071\177\036\202\075\214\144\217\100" +
    "\220\112\221\060\001\ufeaf\000\004\215\u02db\001\002\000" +
    "\004\114\u02d2\001\ufede\000\012\010\u011e\012\061\106\u011d" +
    "\217\100\001\002\000\070\033\260\066\u02cd\115\247\116" +
    "\267\117\240\135\244\137\241\140\261\141\242\142\251" +
    "\143\262\144\266\145\252\146\236\147\250\150\265\151" +
    "\264\152\245\153\263\154\257\155\253\156\270\157\246" +
    "\160\256\161\254\162\237\165\243\001\ufeaa\000\134\004" +
    "\140\006\106\007\011\010\034\011\053\012\061\020\126" +
    "\034\103\056\143\057\030\067\145\070\013\071\020\072" +
    "\045\073\047\074\131\075\006\076\035\106\056\107\027" +
    "\110\067\111\051\112\123\113\105\120\063\143\u02ce\156" +
    "\104\157\066\163\141\164\015\166\052\167\146\170\026" +
    "\171\132\172\040\173\125\174\072\175\133\176\071\177" +
    "\036\202\075\214\144\217\100\220\112\221\060\001\002" +
    "\000\012\010\u011e\012\061\106\u011d\217\100\001\002\000" +
    "\066\033\260\115\247\116\267\117\240\135\244\137\241" +
    "\140\261\141\242\142\251\143\262\144\266\145\252\146" +
    "\236\147\250\150\265\151\264\152\245\153\263\154\257" +
    "\155\253\156\270\157\246\160\256\161\254\162\237\165" +
    "\243\001\ufeab\000\002\001\ufea7\000\002\001\ufea6\000\134" +
    "\004\140\006\106\007\011\010\034\011\053\012\061\020" +
    "\126\034\103\056\143\057\030\067\145\070\013\071\020" +
    "\072\045\073\047\074\131\075\006\076\035\106\056\107" +
    "\027\110\067\111\051\112\123\113\105\120\063\143\u02d4" +
    "\156\104\157\066\163\141\164\015\166\052\167\146\170" +
    "\026\171\132\172\040\173\125\174\072\175\133\176\071" +
    "\177\036\202\075\214\144\217\100\220\112\221\060\001" +
    "\ufedd\000\002\001\ufeae\000\012\010\u011e\012\061\106\u011d" +
    "\217\100\001\002\000\070\033\260\066\u02d6\115\247\116" +
    "\267\117\240\135\244\137\241\140\261\141\242\142\251" +
    "\143\262\144\266\145\252\146\236\147\250\150\265\151" +
    "\264\152\245\153\263\154\257\155\253\156\270\157\246" +
    "\160\256\161\254\162\237\165\243\001\ufeac\000\134\004" +
    "\140\006\106\007\011\010\034\011\053\012\061\020\126" +
    "\034\103\056\143\057\030\067\145\070\013\071\020\072" +
    "\045\073\047\074\131\075\006\076\035\106\056\107\027" +
    "\110\067\111\051\112\123\113\105\120\063\143\u02d7\156" +
    "\104\157\066\163\141\164\015\166\052\167\146\170\026" +
    "\171\132\172\040\173\125\174\072\175\133\176\071\177" +
    "\036\202\075\214\144\217\100\220\112\221\060\001\002" +
    "\000\012\010\u011e\012\061\106\u011d\217\100\001\002\000" +
    "\066\033\260\115\247\116\267\117\240\135\244\137\241" +
    "\140\261\141\242\142\251\143\262\144\266\145\252\146" +
    "\236\147\250\150\265\151\264\152\245\153\263\154\257" +
    "\155\253\156\270\157\246\160\256\161\254\162\237\165" +
    "\243\001\ufead\000\002\001\ufea9\000\002\001\ufea8\000\002" +
    "\001\uff12\000\006\114\u02e5\136\u02e6\001\002\000\002\001" +
    "\uff7a\000\014\010\u011e\012\061\101\u02e2\106\u011d\217\100" +
    "\001\002\000\002\001\uff7b\000\002\001\ufed6\000\002\001" +
    "\uff79\000\132\004\140\006\106\007\011\010\034\011\053" +
    "\012\061\020\126\034\103\056\143\057\030\067\145\070" +
    "\013\071\020\072\045\073\047\074\131\075\006\076\035" +
    "\106\056\107\027\110\067\111\051\112\123\113\105\120" +
    "\063\156\104\157\066\163\141\164\015\166\052\167\146" +
    "\170\026\171\132\172\040\173\125\174\072\175\133\176" +
    "\071\177\036\202\075\214\144\217\100\220\112\221\060" +
    "\001\002\000\070\033\260\103\u02e4\115\247\116\267\117" +
    "\240\135\244\137\241\140\261\141\242\142\251\143\262" +
    "\144\266\145\252\146\236\147\250\150\265\151\264\152" +
    "\245\153\263\154\257\155\253\156\270\157\246\160\256" +
    "\161\254\162\237\165\243\001\002\000\002\001\uff78\000" +
    "\006\012\u02dd\217\u02de\001\002\000\002\001\uffe4\000\002" +
    "\001\uff7c\000\134\004\140\006\106\007\011\010\034\011" +
    "\053\012\061\020\126\034\103\056\143\057\030\067\145" +
    "\070\013\071\020\072\045\073\047\074\131\075\006\076" +
    "\035\106\056\107\027\110\067\111\051\112\123\113\105" +
    "\120\063\143\u0123\156\104\157\066\163\141\164\015\166" +
    "\052\167\146\170\026\171\132\172\040\173\125\174\072" +
    "\175\133\176\071\177\036\202\075\214\144\217\100\220" +
    "\112\221\060\001\uff83\000\004\215\u02ea\001\002\000\002" +
    "\001\uff03\000\002\001\000" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u02e9\000\006\002\003\003\004\001\001\000\002\001" +
    "\001\000\074\004\147\005\141\010\110\051\134\052\042" +
    "\055\107\057\013\063\015\064\053\065\115\072\067\102" +
    "\064\103\123\104\113\107\030\120\101\121\121\122\022" +
    "\126\127\127\021\130\045\135\135\137\076\140\006\142" +
    "\020\144\112\146\072\150\036\154\047\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\040\u02db\041\u02de\001\001\000\002\001\001" +
    "\000\002\001\001\000\052\051\134\052\042\055\107\057" +
    "\013\063\u02c6\064\053\065\115\072\067\102\064\103\123" +
    "\107\030\122\022\135\135\137\076\140\006\142\020\144" +
    "\112\146\072\150\036\154\047\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\013\u02bf\001\001\000\052\051\134\052\042\055\107\057" +
    "\013\063\u02bd\064\053\065\115\072\067\102\064\103\123" +
    "\107\030\122\022\135\135\137\076\140\006\142\020\144" +
    "\112\146\072\150\036\154\047\001\001\000\052\051\134" +
    "\052\042\055\107\057\013\063\u02bc\064\053\065\115\072" +
    "\067\102\064\103\123\107\030\122\022\135\135\137\076" +
    "\140\006\142\020\144\112\146\072\150\036\154\047\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\077\u02a4\001" +
    "\001\000\052\051\134\052\042\055\107\057\013\063\u02a3" +
    "\064\053\065\115\072\067\102\064\103\123\107\030\122" +
    "\022\135\135\137\076\140\006\142\020\144\112\146\072" +
    "\150\036\154\047\001\001\000\002\001\001\000\052\051" +
    "\134\052\042\055\107\057\013\063\u02a2\064\053\065\115" +
    "\072\067\102\064\103\123\107\030\122\022\135\135\137" +
    "\076\140\006\142\020\144\112\146\072\150\036\154\047" +
    "\001\001\000\002\001\001\000\004\042\u0281\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\032\052\042\064\053\065\115\072\067\107\u011b" +
    "\122\u0119\137\u025c\140\006\142\020\144\112\150\036\154" +
    "\047\001\001\000\002\001\001\000\002\001\001\000\052" +
    "\051\134\052\042\055\107\057\013\063\u025a\064\053\065" +
    "\115\072\067\102\064\103\123\107\030\122\022\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\036\154" +
    "\047\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\077\u0254\001\001\000\002\001\001\000\002\001\001\000" +
    "\052\051\134\052\042\055\107\057\013\063\u0252\064\053" +
    "\065\115\072\067\102\064\103\123\107\030\122\022\135" +
    "\135\137\076\140\006\142\020\144\112\146\072\150\036" +
    "\154\047\001\001\000\004\006\u0250\001\001\000\002\001" +
    "\001\000\052\051\134\052\042\055\107\057\013\063\u024f" +
    "\064\053\065\115\072\067\102\064\103\123\107\030\122" +
    "\022\135\135\137\076\140\006\142\020\144\112\146\072" +
    "\150\036\154\047\001\001\000\052\051\134\052\042\055" +
    "\107\057\013\063\u024e\064\053\065\115\072\067\102\064" +
    "\103\123\107\030\122\022\135\135\137\076\140\006\142" +
    "\020\144\112\146\072\150\036\154\047\001\001\000\010" +
    "\064\u024d\065\115\144\112\001\001\000\052\051\134\052" +
    "\042\055\107\057\013\063\u024c\064\053\065\115\072\067" +
    "\102\064\103\123\107\030\122\022\135\135\137\076\140" +
    "\006\142\020\144\112\146\072\150\036\154\047\001\001" +
    "\000\052\051\134\052\042\055\107\057\013\063\u024b\064" +
    "\053\065\115\072\067\102\064\103\123\107\030\122\022" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\036\154\047\001\001\000\002\001\001\000\002\001\001" +
    "\000\024\064\306\065\115\072\303\107\304\142\020\144" +
    "\112\145\u0249\147\302\150\301\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\052\051\134\052\042\055\107\057\013" +
    "\063\u0227\064\053\065\115\072\067\102\064\103\123\107" +
    "\030\122\022\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\036\154\047\001\001\000\052\051\134\052" +
    "\042\055\107\057\013\063\u0226\064\053\065\115\072\067" +
    "\102\064\103\123\107\030\122\022\135\135\137\076\140" +
    "\006\142\020\144\112\146\072\150\036\154\047\001\001" +
    "\000\052\051\134\052\042\055\107\057\013\063\u0225\064" +
    "\053\065\115\072\067\102\064\103\123\107\030\122\022" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\036\154\047\001\001\000\002\001\001\000\004\045\u021b" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\077" +
    "\u0203\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\056\005\u01b1\010\110\051" +
    "\134\052\042\055\107\057\013\063\015\064\053\065\115" +
    "\072\067\102\064\103\123\107\030\122\022\135\135\137" +
    "\076\140\006\142\020\144\112\146\072\150\036\154\047" +
    "\001\001\000\052\051\134\052\042\055\107\057\013\063" +
    "\u01af\064\053\065\115\072\067\102\064\103\123\107\030" +
    "\122\022\135\135\137\076\140\006\142\020\144\112\146" +
    "\072\150\036\154\047\001\001\000\054\046\u01a9\051\134" +
    "\052\042\055\107\057\013\063\u01aa\064\053\065\115\072" +
    "\067\102\064\103\123\107\030\122\022\135\135\137\076" +
    "\140\006\142\020\144\112\146\072\150\036\154\047\001" +
    "\001\000\002\001\001\000\052\051\134\052\042\055\107" +
    "\057\013\063\u01a8\064\053\065\115\072\067\102\064\103" +
    "\123\107\030\122\022\135\135\137\076\140\006\142\020" +
    "\144\112\146\072\150\036\154\047\001\001\000\002\001" +
    "\001\000\052\051\134\052\042\055\107\057\013\063\u01a7" +
    "\064\053\065\115\072\067\102\064\103\123\107\030\122" +
    "\022\135\135\137\076\140\006\142\020\144\112\146\072" +
    "\150\036\154\047\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\052\051\134" +
    "\052\042\055\107\057\013\063\u018b\064\053\065\115\072" +
    "\067\102\064\103\123\107\030\122\022\135\135\137\076" +
    "\140\006\142\020\144\112\146\072\150\036\154\047\001" +
    "\001\000\052\051\134\052\042\055\107\057\013\063\u018a" +
    "\064\053\065\115\072\067\102\064\103\123\107\030\122" +
    "\022\135\135\137\076\140\006\142\020\144\112\146\072" +
    "\150\036\154\047\001\001\000\052\051\u0187\052\042\055" +
    "\107\057\013\063\u0123\064\053\065\115\072\067\102\064" +
    "\103\123\107\030\122\u0186\135\135\137\076\140\006\142" +
    "\020\144\112\146\072\150\036\154\047\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\053" +
    "\u0181\001\001\000\052\051\134\052\042\055\107\057\013" +
    "\063\u017f\064\053\065\115\072\067\102\064\103\123\107" +
    "\030\122\022\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\036\154\047\001\001\000\002\001\001\000" +
    "\002\001\001\000\052\051\134\052\042\055\107\057\013" +
    "\063\u0177\064\053\065\115\072\067\102\064\103\123\107" +
    "\030\122\022\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\036\154\047\001\001\000\002\001\001\000" +
    "\032\052\042\064\053\065\115\072\067\107\u011b\122\u0119" +
    "\137\u011a\140\006\142\020\144\112\150\036\154\047\001" +
    "\001\000\052\051\134\052\042\055\107\057\013\063\u0117" +
    "\064\053\065\115\072\067\102\064\103\123\107\030\122" +
    "\022\135\135\137\076\140\006\142\020\144\112\146\072" +
    "\150\036\154\047\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\021\153\103\155\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\055\164\056\163\103\160\153\165" +
    "\001\001\000\002\001\001\000\012\055\164\056\207\103" +
    "\160\153\165\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\055\164\056\170\103\160\153\165\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\016\055" +
    "\164\056\176\060\174\062\175\103\160\153\165\001\001" +
    "\000\002\001\001\000\004\061\202\001\001\000\002\001" +
    "\001\000\012\055\164\056\200\103\160\153\165\001\001" +
    "\000\002\001\001\000\012\055\164\056\203\103\160\153" +
    "\165\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\055\164\056\205\103\160\153\165\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\060\005\217" +
    "\010\110\020\215\051\134\052\042\055\107\057\013\063" +
    "\015\064\053\065\115\072\067\102\064\103\123\107\030" +
    "\122\022\135\135\137\076\140\006\142\020\144\112\146" +
    "\072\150\036\154\047\001\001\000\004\103\212\001\001" +
    "\000\002\001\001\000\012\055\164\056\214\103\160\153" +
    "\165\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\006\220\001\001\000\002\001\001\000\074\005\226\007" +
    "\221\010\110\051\134\052\042\055\107\057\013\063\015" +
    "\064\053\065\115\072\067\102\064\103\123\104\113\107" +
    "\030\120\223\121\225\122\022\126\127\127\021\130\045" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\036\154\047\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\052\051\134\052\042\055" +
    "\107\057\013\063\234\064\053\065\115\072\067\102\064" +
    "\103\123\107\030\122\022\135\135\137\076\140\006\142" +
    "\020\144\112\146\072\150\036\154\047\001\001\000\002" +
    "\001\001\000\052\051\134\052\042\055\107\057\013\063" +
    "\u0116\064\053\065\115\072\067\102\064\103\123\107\030" +
    "\122\022\135\135\137\076\140\006\142\020\144\112\146" +
    "\072\150\036\154\047\001\001\000\052\051\134\052\042" +
    "\055\107\057\013\063\u0115\064\053\065\115\072\067\102" +
    "\064\103\123\107\030\122\022\135\135\137\076\140\006" +
    "\142\020\144\112\146\072\150\036\154\047\001\001\000" +
    "\052\051\134\052\042\055\107\057\013\063\u0114\064\053" +
    "\065\115\072\067\102\064\103\123\107\030\122\022\135" +
    "\135\137\076\140\006\142\020\144\112\146\072\150\036" +
    "\154\047\001\001\000\052\051\134\052\042\055\107\057" +
    "\013\063\u0113\064\053\065\115\072\067\102\064\103\123" +
    "\107\030\122\022\135\135\137\076\140\006\142\020\144" +
    "\112\146\072\150\036\154\047\001\001\000\052\051\134" +
    "\052\042\055\107\057\013\063\u0112\064\053\065\115\072" +
    "\067\102\064\103\123\107\030\122\022\135\135\137\076" +
    "\140\006\142\020\144\112\146\072\150\036\154\047\001" +
    "\001\000\052\051\134\052\042\055\107\057\013\063\u0111" +
    "\064\053\065\115\072\067\102\064\103\123\107\030\122" +
    "\022\135\135\137\076\140\006\142\020\144\112\146\072" +
    "\150\036\154\047\001\001\000\052\051\134\052\042\055" +
    "\107\057\013\063\u010e\064\053\065\115\072\067\102\064" +
    "\103\123\107\030\122\022\135\135\137\076\140\006\142" +
    "\020\144\112\146\072\150\036\154\047\001\001\000\052" +
    "\051\134\052\042\055\107\057\013\063\u010d\064\053\065" +
    "\115\072\067\102\064\103\123\107\030\122\022\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\036\154" +
    "\047\001\001\000\052\051\134\052\042\055\107\057\013" +
    "\063\u010c\064\053\065\115\072\067\102\064\103\123\107" +
    "\030\122\022\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\036\154\047\001\001\000\052\051\134\052" +
    "\042\055\107\057\013\063\u010b\064\053\065\115\072\067" +
    "\102\064\103\123\107\030\122\022\135\135\137\076\140" +
    "\006\142\020\144\112\146\072\150\036\154\047\001\001" +
    "\000\052\051\134\052\042\055\107\057\013\063\u010a\064" +
    "\053\065\115\072\067\102\064\103\123\107\030\122\022" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\036\154\047\001\001\000\052\051\134\052\042\055\107" +
    "\057\013\063\u0109\064\053\065\115\072\067\102\064\103" +
    "\123\107\030\122\022\135\135\137\076\140\006\142\020" +
    "\144\112\146\072\150\036\154\047\001\001\000\052\051" +
    "\134\052\042\055\107\057\013\063\u0108\064\053\065\115" +
    "\072\067\102\064\103\123\107\030\122\022\135\135\137" +
    "\076\140\006\142\020\144\112\146\072\150\036\154\047" +
    "\001\001\000\052\051\134\052\042\055\107\057\013\063" +
    "\u0107\064\053\065\115\072\067\102\064\103\123\107\030" +
    "\122\022\135\135\137\076\140\006\142\020\144\112\146" +
    "\072\150\036\154\047\001\001\000\052\051\134\052\042" +
    "\055\107\057\013\063\u0106\064\053\065\115\072\067\102" +
    "\064\103\123\107\030\122\022\135\135\137\076\140\006" +
    "\142\020\144\112\146\072\150\036\154\047\001\001\000" +
    "\056\005\356\010\110\051\134\052\042\055\107\057\013" +
    "\063\015\064\053\065\115\072\067\102\064\103\123\107" +
    "\030\122\022\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\036\154\047\001\001\000\052\051\134\052" +
    "\042\055\107\057\013\063\354\064\053\065\115\072\067" +
    "\102\064\103\123\107\030\122\022\135\135\137\076\140" +
    "\006\142\020\144\112\146\072\150\036\154\047\001\001" +
    "\000\052\051\134\052\042\055\107\057\013\063\353\064" +
    "\053\065\115\072\067\102\064\103\123\107\030\122\022" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\036\154\047\001\001\000\024\064\306\065\115\072\303" +
    "\107\304\142\020\144\112\145\300\147\302\150\301\001" +
    "\001\000\052\051\134\052\042\055\107\057\013\063\277" +
    "\064\053\065\115\072\067\102\064\103\123\107\030\122" +
    "\022\135\135\137\076\140\006\142\020\144\112\146\072" +
    "\150\036\154\047\001\001\000\052\051\134\052\042\055" +
    "\107\057\013\063\276\064\053\065\115\072\067\102\064" +
    "\103\123\107\030\122\022\135\135\137\076\140\006\142" +
    "\020\144\112\146\072\150\036\154\047\001\001\000\052" +
    "\051\134\052\042\055\107\057\013\063\275\064\053\065" +
    "\115\072\067\102\064\103\123\107\030\122\022\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\036\154" +
    "\047\001\001\000\052\051\134\052\042\055\107\057\013" +
    "\063\274\064\053\065\115\072\067\102\064\103\123\107" +
    "\030\122\022\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\036\154\047\001\001\000\052\051\134\052" +
    "\042\055\107\057\013\063\273\064\053\065\115\072\067" +
    "\102\064\103\123\107\030\122\022\135\135\137\076\140" +
    "\006\142\020\144\112\146\072\150\036\154\047\001\001" +
    "\000\052\051\134\052\042\055\107\057\013\063\272\064" +
    "\053\065\115\072\067\102\064\103\123\107\030\122\022" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\036\154\047\001\001\000\052\051\134\052\042\055\107" +
    "\057\013\063\271\064\053\065\115\072\067\102\064\103" +
    "\123\107\030\122\022\135\135\137\076\140\006\142\020" +
    "\144\112\146\072\150\036\154\047\001\001\000\052\051" +
    "\134\052\042\055\107\057\013\063\270\064\053\065\115" +
    "\072\067\102\064\103\123\107\030\122\022\135\135\137" +
    "\076\140\006\142\020\144\112\146\072\150\036\154\047" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\064\327\065\115" +
    "\144\112\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\052\051\134\052\042\055\107\057\013" +
    "\063\314\064\053\065\115\072\067\102\064\103\123\107" +
    "\030\122\022\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\036\154\047\001\001\000\054\051\134\052" +
    "\042\055\107\057\013\063\312\064\053\065\115\066\311" +
    "\072\067\102\064\103\123\107\030\122\022\135\135\137" +
    "\076\140\006\142\020\144\112\146\072\150\036\154\047" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\064\321" +
    "\065\115\072\320\140\317\144\112\001\001\000\002\001" +
    "\001\000\010\064\322\065\115\144\112\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\052\051" +
    "\134\052\042\055\107\057\013\063\325\064\053\065\115" +
    "\072\067\102\064\103\123\107\030\122\022\135\135\137" +
    "\076\140\006\142\020\144\112\146\072\150\036\154\047" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\024\064\321\065\115\067\334\070\335\071\332" +
    "\072\320\103\331\140\333\144\112\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\151\347" +
    "\001\001\000\002\001\001\000\052\051\134\052\042\055" +
    "\107\057\013\063\337\064\053\065\115\072\067\102\064" +
    "\103\123\107\030\122\022\135\135\137\076\140\006\142" +
    "\020\144\112\146\072\150\036\154\047\001\001\000\002" +
    "\001\001\000\002\001\001\000\052\051\134\052\042\055" +
    "\107\057\013\063\345\064\053\065\115\072\067\102\064" +
    "\103\123\107\030\122\022\135\135\137\076\140\006\142" +
    "\020\144\112\146\072\150\036\154\047\001\001\000\054" +
    "\051\134\052\042\055\107\057\013\063\312\064\053\065" +
    "\115\066\343\072\067\102\064\103\123\107\030\122\022" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\036\154\047\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\152\350\001" +
    "\001\000\002\001\001\000\024\064\321\065\115\067\352" +
    "\070\335\071\332\072\320\103\331\140\333\144\112\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\006\370\001\001\000\004\026\357\001\001\000" +
    "\004\030\360\001\001\000\002\001\001\000\056\005\367" +
    "\010\110\051\134\052\042\055\107\057\013\063\015\064" +
    "\053\065\115\072\067\102\064\103\123\107\030\122\022" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\036\154\047\001\001\000\002\001\001\000\052\051\134" +
    "\052\042\055\107\057\013\063\364\064\053\065\115\072" +
    "\067\102\064\103\123\107\030\122\022\135\135\137\076" +
    "\140\006\142\020\144\112\146\072\150\036\154\047\001" +
    "\001\000\002\001\001\000\056\005\366\010\110\051\134" +
    "\052\042\055\107\057\013\063\015\064\053\065\115\072" +
    "\067\102\064\103\123\107\030\122\022\135\135\137\076" +
    "\140\006\142\020\144\112\146\072\150\036\154\047\001" +
    "\001\000\002\001\001\000\002\001\001\000\076\005\226" +
    "\007\221\010\110\027\371\051\134\052\042\055\107\057" +
    "\013\063\015\064\053\065\115\072\067\102\064\103\123" +
    "\104\113\107\030\120\223\121\225\122\022\126\127\127" +
    "\021\130\045\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\036\154\047\001\001\000\004\031\372\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\052\051\134\052\042\055\107\057\013\063\376\064" +
    "\053\065\115\072\067\102\064\103\123\107\030\122\022" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\036\154\047\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\006\u0101\001\001\000\074\005\226\007\221\010" +
    "\110\051\134\052\042\055\107\057\013\063\015\064\053" +
    "\065\115\072\067\102\064\103\123\104\113\107\030\120" +
    "\223\121\225\122\022\126\127\127\021\130\045\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\036\154" +
    "\047\001\001\000\004\006\u0103\001\001\000\074\005\226" +
    "\007\221\010\110\051\134\052\042\055\107\057\013\063" +
    "\015\064\053\065\115\072\067\102\064\103\123\104\113" +
    "\107\030\120\223\121\225\122\022\126\127\127\021\130" +
    "\045\135\135\137\076\140\006\142\020\144\112\146\072" +
    "\150\036\154\047\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\052" +
    "\051\134\052\042\055\107\057\013\063\u0110\064\053\065" +
    "\115\072\067\102\064\103\123\107\030\122\022\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\036\154" +
    "\047\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\056\035\u0121\036\u011f" +
    "\051\u0124\052\042\055\107\057\013\063\u0123\064\053\065" +
    "\115\072\067\102\064\103\123\107\030\122\u0120\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\036\154" +
    "\047\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\032\052\042\064\053\065\115\072\067\106" +
    "\u0125\107\u011b\122\u0126\140\006\142\020\144\112\150\036" +
    "\154\047\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\052" +
    "\051\134\052\042\055\107\057\013\063\u0147\064\053\065" +
    "\115\072\067\102\064\103\123\107\030\122\022\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\036\154" +
    "\047\001\001\000\052\051\134\052\042\055\107\057\013" +
    "\063\u013f\064\053\065\115\072\067\102\064\103\123\107" +
    "\030\122\022\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\036\154\047\001\001\000\052\051\134\052" +
    "\042\055\107\057\013\063\u013d\064\053\065\115\072\067" +
    "\102\064\103\123\107\030\122\022\135\135\137\076\140" +
    "\006\142\020\144\112\146\072\150\036\154\047\001\001" +
    "\000\052\051\134\052\042\055\107\057\013\063\u013c\064" +
    "\053\065\115\072\067\102\064\103\123\107\030\122\022" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\036\154\047\001\001\000\052\051\134\052\042\055\107" +
    "\057\013\063\u013b\064\053\065\115\072\067\102\064\103" +
    "\123\107\030\122\022\135\135\137\076\140\006\142\020" +
    "\144\112\146\072\150\036\154\047\001\001\000\052\051" +
    "\134\052\042\055\107\057\013\063\u013a\064\053\065\115" +
    "\072\067\102\064\103\123\107\030\122\022\135\135\137" +
    "\076\140\006\142\020\144\112\146\072\150\036\154\047" +
    "\001\001\000\052\051\134\052\042\055\107\057\013\063" +
    "\u0139\064\053\065\115\072\067\102\064\103\123\107\030" +
    "\122\022\135\135\137\076\140\006\142\020\144\112\146" +
    "\072\150\036\154\047\001\001\000\052\051\134\052\042" +
    "\055\107\057\013\063\u0138\064\053\065\115\072\067\102" +
    "\064\103\123\107\030\122\022\135\135\137\076\140\006" +
    "\142\020\144\112\146\072\150\036\154\047\001\001\000" +
    "\052\051\134\052\042\055\107\057\013\063\u0137\064\053" +
    "\065\115\072\067\102\064\103\123\107\030\122\022\135" +
    "\135\137\076\140\006\142\020\144\112\146\072\150\036" +
    "\154\047\001\001\000\052\051\134\052\042\055\107\057" +
    "\013\063\u0136\064\053\065\115\072\067\102\064\103\123" +
    "\107\030\122\022\135\135\137\076\140\006\142\020\144" +
    "\112\146\072\150\036\154\047\001\001\000\052\051\134" +
    "\052\042\055\107\057\013\063\u0135\064\053\065\115\072" +
    "\067\102\064\103\123\107\030\122\022\135\135\137\076" +
    "\140\006\142\020\144\112\146\072\150\036\154\047\001" +
    "\001\000\052\051\134\052\042\055\107\057\013\063\u0134" +
    "\064\053\065\115\072\067\102\064\103\123\107\030\122" +
    "\022\135\135\137\076\140\006\142\020\144\112\146\072" +
    "\150\036\154\047\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\030\052\042\064\053" +
    "\065\115\072\067\107\u011b\122\u0141\140\006\142\020\144" +
    "\112\150\036\154\047\001\001\000\002\001\001\000\024" +
    "\064\306\065\115\072\303\107\304\142\020\144\112\145" +
    "\u0142\147\302\150\301\001\001\000\002\001\001\000\004" +
    "\054\u0143\001\001\000\002\001\001\000\056\035\u0145\036" +
    "\u011f\051\u0124\052\042\055\107\057\013\063\u0123\064\053" +
    "\065\115\072\067\102\064\103\123\107\030\122\u0120\135" +
    "\135\137\076\140\006\142\020\144\112\146\072\150\036" +
    "\154\047\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\052\051\u014b\052\042\055\107\057\013" +
    "\063\u0123\064\053\065\115\072\067\102\064\103\123\107" +
    "\030\122\u0149\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\036\154\047\001\001\000\002\001\001\000" +
    "\032\052\042\064\053\065\115\072\067\106\u014c\107\u011b" +
    "\122\u0126\140\006\142\020\144\112\150\036\154\047\001" +
    "\001\000\002\001\001\000\002\001\001\000\056\035\u0150" +
    "\036\u011f\051\u0124\052\042\055\107\057\013\063\u0123\064" +
    "\053\065\115\072\067\102\064\103\123\107\030\122\u0120" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\036\154\047\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\054\037\u0153\051" +
    "\u0156\052\042\055\107\057\013\063\u0123\064\053\065\115" +
    "\072\067\102\064\103\123\107\030\122\u0154\135\135\137" +
    "\076\140\006\142\020\144\112\146\072\150\036\154\047" +
    "\001\001\000\002\001\001\000\002\001\001\000\032\052" +
    "\042\064\053\065\115\072\067\106\u0157\107\u011b\122\u0126" +
    "\140\006\142\020\144\112\150\036\154\047\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\052" +
    "\051\u015c\052\042\055\107\057\013\063\u0123\064\053\065" +
    "\115\072\067\102\064\103\123\107\030\122\u015a\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\036\154" +
    "\047\001\001\000\002\001\001\000\032\052\042\064\053" +
    "\065\115\072\067\106\u015d\107\u011b\122\u0126\140\006\142" +
    "\020\144\112\150\036\154\047\001\001\000\002\001\001" +
    "\000\002\001\001\000\054\037\u015f\051\u0156\052\042\055" +
    "\107\057\013\063\u0123\064\053\065\115\072\067\102\064" +
    "\103\123\107\030\122\u0154\135\135\137\076\140\006\142" +
    "\020\144\112\146\072\150\036\154\047\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\064\321\065\115\072" +
    "\320\140\u0162\144\112\001\001\000\002\001\001\000\002" +
    "\001\001\000\056\035\u0165\036\u011f\051\u0124\052\042\055" +
    "\107\057\013\063\u0123\064\053\065\115\072\067\102\064" +
    "\103\123\107\030\122\u0120\135\135\137\076\140\006\142" +
    "\020\144\112\146\072\150\036\154\047\001\001\000\002" +
    "\001\001\000\002\001\001\000\056\035\u0168\036\u011f\051" +
    "\u0124\052\042\055\107\057\013\063\u0123\064\053\065\115" +
    "\072\067\102\064\103\123\107\030\122\u0120\135\135\137" +
    "\076\140\006\142\020\144\112\146\072\150\036\154\047" +
    "\001\001\000\002\001\001\000\002\001\001\000\034\052" +
    "\042\064\053\065\115\072\067\073\u016b\074\u016c\107\u011b" +
    "\122\u016d\140\006\142\020\144\112\150\036\154\047\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\034\052\042\064\053\065\115\072" +
    "\067\073\u0170\074\u016c\107\u011b\122\u016d\140\006\142\020" +
    "\144\112\150\036\154\047\001\001\000\002\001\001\000" +
    "\002\001\001\000\032\052\042\064\053\065\115\072\067" +
    "\074\u0173\107\u011b\122\u016d\140\006\142\020\144\112\150" +
    "\036\154\047\001\001\000\002\001\001\000\002\001\001" +
    "\000\052\051\134\052\042\055\107\057\013\063\u0176\064" +
    "\053\065\115\072\067\102\064\103\123\107\030\122\022" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\036\154\047\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\032\052\042\064\053\065\115\072" +
    "\067\107\u011b\122\u017a\140\006\142\020\143\u017b\144\112" +
    "\150\036\154\047\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\030\052\042\064\053\065\115" +
    "\072\067\107\u011b\122\u017e\140\006\142\020\144\112\150" +
    "\036\154\047\001\001\000\002\001\001\000\002\001\001" +
    "\000\052\051\134\052\042\055\107\057\013\063\u0182\064" +
    "\053\065\115\072\067\102\064\103\123\107\030\122\022" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\036\154\047\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\052\051" +
    "\134\052\042\055\107\057\013\063\u018d\064\053\065\115" +
    "\072\067\102\064\103\123\107\030\122\022\135\135\137" +
    "\076\140\006\142\020\144\112\146\072\150\036\154\047" +
    "\001\001\000\002\001\001\000\004\022\u018f\001\001\000" +
    "\002\001\001\000\004\023\u01a2\001\001\000\004\023\u0192" +
    "\001\001\000\002\001\001\000\004\023\u0194\001\001\000" +
    "\002\001\001\000\002\001\001\000\052\051\134\052\042" +
    "\055\107\057\013\063\u019c\064\053\065\115\072\067\102" +
    "\064\103\123\107\030\122\022\135\135\137\076\140\006" +
    "\142\020\144\112\146\072\150\036\154\047\001\001\000" +
    "\004\024\u0198\001\001\000\004\006\u019b\001\001\000\002" +
    "\001\001\000\002\001\001\000\074\005\226\007\221\010" +
    "\110\051\134\052\042\055\107\057\013\063\015\064\053" +
    "\065\115\072\067\102\064\103\123\104\113\107\030\120" +
    "\223\121\225\122\022\126\127\127\021\130\045\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\036\154" +
    "\047\001\001\000\004\024\u019d\001\001\000\004\006\u019e" +
    "\001\001\000\074\005\226\007\221\010\110\051\134\052" +
    "\042\055\107\057\013\063\015\064\053\065\115\072\067" +
    "\102\064\103\123\104\113\107\030\120\223\121\225\122" +
    "\022\126\127\127\021\130\045\135\135\137\076\140\006" +
    "\142\020\144\112\146\072\150\036\154\047\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\023\u01a4\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\052\051" +
    "\134\052\042\055\107\057\013\063\u01ad\064\053\065\115" +
    "\072\067\102\064\103\123\107\030\122\022\135\135\137" +
    "\076\140\006\142\020\144\112\146\072\150\036\154\047" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\052\051\134\052\042\055\107\057" +
    "\013\063\u01b4\064\053\065\115\072\067\102\064\103\123" +
    "\107\030\122\022\135\135\137\076\140\006\142\020\144" +
    "\112\146\072\150\036\154\047\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\163\u01b8\001" +
    "\001\000\004\105\u01b9\001\001\000\004\164\u01c0\001\001" +
    "\000\006\107\u01bc\133\u01bb\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\107\u01bf\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\043\u01c2\001" +
    "\001\000\016\044\u01c4\111\u01c3\112\u01d1\114\u01cf\115\u01c9" +
    "\136\u01cc\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\110\u01f6\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\115\u01f1\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\045\u01d4\001\001" +
    "\000\004\103\u01d6\001\001\000\002\001\001\000\004\165" +
    "\u01d7\001\001\000\002\001\001\000\012\032\u01dc\033\u01de" +
    "\034\u01df\134\u01da\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\033\u01e9\034\u01df\134\u01da\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\033\u01e1\034\u01df\134\u01da\001\001\000\002" +
    "\001\001\000\004\166\u01e3\001\001\000\004\113\u01e4\001" +
    "\001\000\002\001\001\000\004\006\u01e7\001\001\000\002" +
    "\001\001\000\074\005\226\007\221\010\110\051\134\052" +
    "\042\055\107\057\013\063\015\064\053\065\115\072\067" +
    "\102\064\103\123\104\113\107\030\120\223\121\225\122" +
    "\022\126\127\127\021\130\045\135\135\137\076\140\006" +
    "\142\020\144\112\146\072\150\036\154\047\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\055\164\056\u01ed\103\160\153\165\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\055\164" +
    "\056\u01f0\103\160\153\165\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\055\164\056\u01f4" +
    "\103\160\153\165\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\055\164\056\u01fb\103\160\153" +
    "\165\001\001\000\002\001\001\000\012\055\164\056\u01fd" +
    "\103\160\153\165\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\055\164" +
    "\056\u0202\103\160\153\165\001\001\000\002\001\001\000" +
    "\006\100\u0205\144\u0204\001\001\000\002\001\001\000\002" +
    "\001\001\000\030\052\042\064\053\065\115\072\067\107" +
    "\u011b\122\u0211\140\006\142\020\144\112\150\036\154\047" +
    "\001\001\000\002\001\001\000\052\051\134\052\042\055" +
    "\107\057\013\063\u020b\064\053\065\115\072\067\102\064" +
    "\103\123\107\030\122\022\135\135\137\076\140\006\142" +
    "\020\144\112\146\072\150\036\154\047\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\052\051\134\052\042\055\107\057\013\063\u020e" +
    "\064\053\065\115\072\067\102\064\103\123\107\030\122" +
    "\022\135\135\137\076\140\006\142\020\144\112\146\072" +
    "\150\036\154\047\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\101\u0217\103\u0218\144\u0216\001\001\000\004\103" +
    "\u0215\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\103\u021c\001\001\000\004\157\u021d\001\001" +
    "\000\002\001\001\000\012\032\u021f\033\u01de\034\u01df\134" +
    "\u01da\001\001\000\002\001\001\000\004\160\u0221\001\001" +
    "\000\002\001\001\000\004\006\u0223\001\001\000\074\005" +
    "\226\007\221\010\110\051\134\052\042\055\107\057\013" +
    "\063\015\064\053\065\115\072\067\102\064\103\123\104" +
    "\113\107\030\120\223\121\225\122\022\126\127\127\021" +
    "\130\045\135\135\137\076\140\006\142\020\144\112\146" +
    "\072\150\036\154\047\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\052\051" +
    "\u022a\052\042\055\107\057\013\063\u0123\064\053\065\115" +
    "\072\067\102\064\103\123\107\030\122\u0229\135\135\137" +
    "\076\140\006\142\020\144\112\146\072\150\036\154\047" +
    "\001\001\000\002\001\001\000\002\001\001\000\030\052" +
    "\042\064\053\065\115\072\067\107\u011b\122\u022c\140\006" +
    "\142\020\144\112\150\036\154\047\001\001\000\004\014" +
    "\u022d\001\001\000\002\001\001\000\032\015\u0230\052\042" +
    "\064\053\065\115\072\067\107\u011b\122\u022f\140\006\142" +
    "\020\144\112\150\036\154\047\001\001\000\002\001\001" +
    "\000\002\001\001\000\030\052\042\064\053\065\115\072" +
    "\067\107\u011b\122\u0232\140\006\142\020\144\112\150\036" +
    "\154\047\001\001\000\002\001\001\000\060\005\u0235\010" +
    "\110\017\u0236\051\134\052\042\055\107\057\013\063\015" +
    "\064\053\065\115\072\067\102\064\103\123\107\030\122" +
    "\022\135\135\137\076\140\006\142\020\144\112\146\072" +
    "\150\036\154\047\001\001\000\004\006\u0237\001\001\000" +
    "\002\001\001\000\002\001\001\000\074\005\226\007\221" +
    "\010\110\051\134\052\042\055\107\057\013\063\015\064" +
    "\053\065\115\072\067\102\064\103\123\104\113\107\030" +
    "\120\223\121\225\122\022\126\127\127\021\130\045\135" +
    "\135\137\076\140\006\142\020\144\112\146\072\150\036" +
    "\154\047\001\001\000\002\001\001\000\002\001\001\000" +
    "\032\015\u023b\052\042\064\053\065\115\072\067\107\u011b" +
    "\122\u022f\140\006\142\020\144\112\150\036\154\047\001" +
    "\001\000\004\014\u023c\001\001\000\002\001\001\000\060" +
    "\005\u0235\010\110\017\u023e\051\134\052\042\055\107\057" +
    "\013\063\015\064\053\065\115\072\067\102\064\103\123" +
    "\107\030\122\022\135\135\137\076\140\006\142\020\144" +
    "\112\146\072\150\036\154\047\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\034\011\u0242\012" +
    "\u0244\052\042\064\053\065\115\072\067\107\u011b\122\u0243" +
    "\140\006\142\020\144\112\150\036\154\047\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\032\012\u0247\052\042\064\053\065\115\072" +
    "\067\107\u011b\122\u0243\140\006\142\020\144\112\150\036" +
    "\154\047\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\054\u024a\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\074\005\226\007\221\010\110\051\134" +
    "\052\042\055\107\057\013\063\015\064\053\065\115\072" +
    "\067\102\064\103\123\104\113\107\030\120\223\121\225" +
    "\122\022\126\127\127\021\130\045\135\135\137\076\140" +
    "\006\142\020\144\112\146\072\150\036\154\047\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\100\u0205\144\u0204\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\052\051\134\052\042\055\107\057\013\063\u025e\064" +
    "\053\065\115\072\067\102\064\103\123\107\030\122\022" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\036\154\047\001\001\000\002\001\001\000\002\001\001" +
    "\000\024\064\321\065\115\067\u0261\070\335\071\332\072" +
    "\320\103\331\140\333\144\112\001\001\000\004\116\u0262" +
    "\001\001\000\004\117\u0266\001\001\000\056\035\u0264\036" +
    "\u011f\051\u0124\052\042\055\107\057\013\063\u0123\064\053" +
    "\065\115\072\067\102\064\103\123\107\030\122\u0120\135" +
    "\135\137\076\140\006\142\020\144\112\146\072\150\036" +
    "\154\047\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\141\u0267\001\001\000\002\001\001\000\024\064\321" +
    "\065\115\067\u0269\070\335\071\332\072\320\103\331\140" +
    "\333\144\112\001\001\000\004\116\u026a\001\001\000\002" +
    "\001\001\000\004\161\u026c\001\001\000\004\131\u026e\001" +
    "\001\000\004\107\u0276\001\001\000\004\132\u026f\001\001" +
    "\000\004\162\u0272\001\001\000\006\107\u01bc\133\u0271\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\043\u0274" +
    "\001\001\000\016\044\u01c4\111\u01c3\112\u01d1\114\u01cf\115" +
    "\u01c9\136\u01cc\001\001\000\002\001\001\000\002\001\001" +
    "\000\052\051\134\052\042\055\107\057\013\063\u0278\064" +
    "\053\065\115\072\067\102\064\103\123\107\030\122\022" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\036\154\047\001\001\000\002\001\001\000\060\005\u027c" +
    "\010\110\025\u027b\051\134\052\042\055\107\057\013\063" +
    "\015\064\053\065\115\072\067\102\064\103\123\107\030" +
    "\122\022\135\135\137\076\140\006\142\020\144\112\146" +
    "\072\150\036\154\047\001\001\000\004\006\u027d\001\001" +
    "\000\002\001\001\000\002\001\001\000\074\005\226\007" +
    "\221\010\110\051\134\052\042\055\107\057\013\063\015" +
    "\064\053\065\115\072\067\102\064\103\123\104\113\107" +
    "\030\120\223\121\225\122\022\126\127\127\021\130\045" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\036\154\047\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\055\164\056\u0286" +
    "\103\160\153\165\001\001\000\002\001\001\000\012\055" +
    "\164\056\u0288\103\160\153\165\001\001\000\002\001\001" +
    "\000\004\006\u028a\001\001\000\074\005\226\007\221\010" +
    "\110\051\134\052\042\055\107\057\013\063\015\064\053" +
    "\065\115\072\067\102\064\103\123\104\113\107\030\120" +
    "\223\121\225\122\022\126\127\127\021\130\045\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\036\154" +
    "\047\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\107\u028e\001\001\000\004\144\u028f\001\001\000\002\001" +
    "\001\000\004\155\u0291\001\001\000\002\001\001\000\004" +
    "\006\u0293\001\001\000\074\005\226\007\221\010\110\051" +
    "\134\052\042\055\107\057\013\063\015\064\053\065\115" +
    "\072\067\102\064\103\123\104\113\107\030\120\223\121" +
    "\225\122\022\126\127\127\021\130\045\135\135\137\076" +
    "\140\006\142\020\144\112\146\072\150\036\154\047\001" +
    "\001\000\010\123\u0296\124\u0298\125\u0297\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\125" +
    "\u0299\001\001\000\002\001\001\000\004\107\u029b\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\156\u029e\001" +
    "\001\000\002\001\001\000\004\006\u02a0\001\001\000\074" +
    "\005\226\007\221\010\110\051\134\052\042\055\107\057" +
    "\013\063\015\064\053\065\115\072\067\102\064\103\123" +
    "\104\113\107\030\120\223\121\225\122\022\126\127\127" +
    "\021\130\045\135\135\137\076\140\006\142\020\144\112" +
    "\146\072\150\036\154\047\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\100\u0205\144\u0204" +
    "\001\001\000\002\001\001\000\056\047\u02a9\050\u02a7\051" +
    "\134\052\042\055\107\057\013\063\u02a8\064\053\065\115" +
    "\072\067\102\064\103\123\107\030\122\022\135\135\137" +
    "\076\140\006\142\020\144\112\146\072\150\036\154\047" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\056\047\u02ab\050\u02a7\051\134\052\042\055\107" +
    "\057\013\063\u02a8\064\053\065\115\072\067\102\064\103" +
    "\123\107\030\122\022\135\135\137\076\140\006\142\020" +
    "\144\112\146\072\150\036\154\047\001\001\000\002\001" +
    "\001\000\056\047\u02ad\050\u02a7\051\134\052\042\055\107" +
    "\057\013\063\u02a8\064\053\065\115\072\067\102\064\103" +
    "\123\107\030\122\022\135\135\137\076\140\006\142\020" +
    "\144\112\146\072\150\036\154\047\001\001\000\002\001" +
    "\001\000\060\005\u02b1\010\110\016\u02af\051\134\052\042" +
    "\055\107\057\013\063\015\064\053\065\115\072\067\102" +
    "\064\103\123\107\030\122\022\135\135\137\076\140\006" +
    "\142\020\144\112\146\072\150\036\154\047\001\001\000" +
    "\002\001\001\000\004\006\u02b2\001\001\000\002\001\001" +
    "\000\074\005\226\007\221\010\110\051\134\052\042\055" +
    "\107\057\013\063\015\064\053\065\115\072\067\102\064" +
    "\103\123\104\113\107\030\120\223\121\225\122\022\126" +
    "\127\127\021\130\045\135\135\137\076\140\006\142\020" +
    "\144\112\146\072\150\036\154\047\001\001\000\002\001" +
    "\001\000\002\001\001\000\052\051\134\052\042\055\107" +
    "\057\013\063\u02b6\064\053\065\115\072\067\102\064\103" +
    "\123\107\030\122\022\135\135\137\076\140\006\142\020" +
    "\144\112\146\072\150\036\154\047\001\001\000\002\001" +
    "\001\000\014\064\321\065\115\072\320\140\u0162\144\112" +
    "\001\001\000\002\001\001\000\030\052\042\064\053\065" +
    "\115\072\067\107\u011b\122\u02ba\140\006\142\020\144\112" +
    "\150\036\154\047\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\056\051\134\052\042\055" +
    "\107\057\013\063\u02cb\064\053\065\115\072\067\075\u02c8" +
    "\076\u02c9\102\064\103\123\107\030\122\022\135\135\137" +
    "\076\140\006\142\020\144\112\146\072\150\036\154\047" +
    "\001\001\000\002\001\001\000\004\061\u02d2\001\001\000" +
    "\032\052\042\064\053\065\115\072\067\106\u02d0\107\u011b" +
    "\122\u0126\140\006\142\020\144\112\150\036\154\047\001" +
    "\001\000\002\001\001\000\052\051\134\052\042\055\107" +
    "\057\013\063\u02ce\064\053\065\115\072\067\102\064\103" +
    "\123\107\030\122\022\135\135\137\076\140\006\142\020" +
    "\144\112\146\072\150\036\154\047\001\001\000\032\052" +
    "\042\064\053\065\115\072\067\106\u02cf\107\u011b\122\u0126" +
    "\140\006\142\020\144\112\150\036\154\047\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\052" +
    "\051\134\052\042\055\107\057\013\063\u02d4\064\053\065" +
    "\115\072\067\102\064\103\123\107\030\122\022\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\036\154" +
    "\047\001\001\000\002\001\001\000\032\052\042\064\053" +
    "\065\115\072\067\106\u02d9\107\u011b\122\u0126\140\006\142" +
    "\020\144\112\150\036\154\047\001\001\000\002\001\001" +
    "\000\052\051\134\052\042\055\107\057\013\063\u02d7\064" +
    "\053\065\115\072\067\102\064\103\123\107\030\122\022" +
    "\135\135\137\076\140\006\142\020\144\112\146\072\150" +
    "\036\154\047\001\001\000\032\052\042\064\053\065\115" +
    "\072\067\106\u02d8\107\u011b\122\u0126\140\006\142\020\144" +
    "\112\150\036\154\047\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\032\052\042\064\053\065\115" +
    "\072\067\107\u011b\122\u02df\135\u02e0\140\006\142\020\144" +
    "\112\150\036\154\047\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\052\051\134\052\042\055" +
    "\107\057\013\063\u02e2\064\053\065\115\072\067\102\064" +
    "\103\123\107\030\122\022\135\135\137\076\140\006\142" +
    "\020\144\112\146\072\150\036\154\047\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\041\u02e6\001\001\000" +
    "\002\001\001\000\002\001\001\000\056\035\u02e8\036\u011f" +
    "\051\u0124\052\042\055\107\057\013\063\u0123\064\053\065" +
    "\115\072\067\102\064\103\123\107\030\122\u0120\135\135" +
    "\137\076\140\006\142\020\144\112\146\072\150\036\154" +
    "\047\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$PhpParser5$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$PhpParser5$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$PhpParser5$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    public static final Integer ZERO_INTEGER = new Integer(0);
    public static final Integer PUBLIC_INTEGER = new Integer(PHPModifier.PUBLIC);
    public static final Integer PRIVATE_INTEGER = new Integer(PHPModifier.PRIVATE);
    public static final Integer PROTECTED_INTEGER = new Integer(PHPModifier.PROTECTED);
    public static final Integer STATIC_INTEGER = new Integer(PHPModifier.STATIC);
    public static final Integer FINAL_INTEGER = new Integer(PHPModifier.FINAL);
    public static final Integer INTERFACE_INTEGER = new Integer(PHPModifier.INTERFACE);
    public static final Integer ABSTRACT_INTEGER = new Integer(PHPModifier.ABSTRACT);

    public static final int DEFAULT_ERROR_STRATEGY = 0;
    public static final int STACK_ERROR_STRATEGY = 1;

    private ErrorStrategy defaultStrategy = new DefaultErrorStrategy();;
    private ErrorStrategy stackStrategy = new StackErrorStrategy();
    private ErrorStrategy errorStrategy = defaultStrategy;
    private ParserClient parserClient;

    public void setErrorStrategy(int strategy) {
        errorStrategy = (strategy == STACK_ERROR_STRATEGY) ? stackStrategy : defaultStrategy;
    }

    public ErrorStrategy getErrorStrategy() {
        return errorStrategy;
    }

    public void setParserClient(ParserClient client) {
        parserClient = client;
    }

    public ParserClient getParserClient() {
        return parserClient;
    }

    /**
     * This method is called when a syntax error has been detected and recovery is about to be invoked.
     * The super class just emit a "Syntax error" error message.
     * @param cur_token the current lookahead Symbol.
     */
    public void syntax_error(Symbol cur_token) {
        //System.out.println("syntax_error:"+cur_token);
        //super.syntax_error(cur_token,info);
        int state = ((Symbol) stack.peek()).parse_state;
        short[] rowOfProbe = action_tab[state];
        getParserClient().handleSyntaxError(cur_token.sym, (String)cur_token.value, rowOfProbe, cur_token.left, cur_token.right, getCurrentLine());    }

    /**
     * Report a non fatal error (or warning).  This method takes a message
     * string and an additional object (to be used by specializations implemented in subclasses).
     * The super class prints the message to System.err.
     * @param message an error message.
     * @param info    an extra object reserved for use by specialized subclasses.
     */
    public void report_error(String message, Object info) {
        //System.out.println("report_error:"+message);
        //System.out.println("report_error:"+info);
        //super.report_error(message,info);
        getParserClient().handleError("report_error", cur_token.left, cur_token.right, getCurrentLine());
    }

    /**
     * This method is called if it is determined that syntax error recovery has been unsuccessful.
     * The super class report a fatal error.
     * @param cur_token the current lookahead Symbol.
     */
    public void unrecovered_syntax_error(Symbol cur_token) throws Exception {
        //System.out.println("unrecovered_syntax_error:"+cur_token);
        //super.unrecovered_syntax_error(cur_token);
        getParserClient().handleError("unrecovered_syntax_error", cur_token.left, cur_token.right, getCurrentLine());
    }

    /**
     * Report a fatal error.  This method takes a message string and an additional object
     * (to be used by specializations implemented in subclasses).
     * The super class reports the error then throws an exception.
     * @param message an error message.
     * @param info    an extra object reserved for use by specialized subclasses.
     */

    public void report_fatal_error(String message, Object info) throws Exception {
        //System.out.println("report_fatal_error:"+cur_token);
        //super.report_fatal_error(message,info);
        getParserClient().handleError("report_fatal_error", cur_token.left, cur_token.right, getCurrentLine());
    }

    /**
     * Attempt to recover from a syntax error.  This returns false if recovery fails,
     * true if it succeeds.
     * @param debug should we produce debugging messages as we parse.
     */
    protected boolean error_recovery(boolean debug) throws java.lang.Exception {
        return errorStrategy.errorRecovery(debug);
    }


    interface ErrorStrategy {
        public boolean errorRecovery(boolean debug) throws Exception;
    }

    class DefaultErrorStrategy implements ErrorStrategy {

        public boolean errorRecovery(boolean debug) throws Exception {
            return PhpParser5.super.error_recovery(debug);
        }
    }

    class StackErrorStrategy implements ErrorStrategy {

        private Symbol errorLoopSymbol = null;

        public boolean errorRecovery(boolean debug) throws Exception {
            //first we empty the stack leaving only the first start_state symbol.
            while (stack.size() > 1) {
                stack.pop();
                tos--;
            }
            //if we recognize a loop (the parser can't advance) we scan to the next token.
            if (errorLoopSymbol != null && errorLoopSymbol.equals(cur_token))
                cur_token = scan();
            else {
                errorLoopSymbol = cur_token;
            }
            return true;
        }
    }

    public int getCurrentLine(){
        CompletionLexer lexer = (CompletionLexer)getScanner();
        return lexer.getCurrentLine();
    }

    public int getLength() {
        CompletionLexer lexer = (CompletionLexer)getScanner();
        return lexer.getLength();
    }

    PHPDocBlock getPHPDoc(int location) {
        CompletionLexer lexer = (CompletionLexer)getScanner();
        Object[] phpDocValue = lexer.getPHPDoc(location);

        if (phpDocValue[0] == null) {
            return null;
        }

        return parseDocBlock((String)phpDocValue[0], ((Integer) phpDocValue[1]).intValue());
    }

    public String createString(int StartOffset, int endOffset) {
        CompletionLexer lexer = (CompletionLexer)getScanner();
        return lexer.createString(StartOffset, endOffset);
    }

    public Symbol parse() throws java.lang.Exception{
        Symbol s = super.parse();
        CompletionLexer lexer = (CompletionLexer)getScanner();
        Object[] phpDocValue = lexer.getFirstPHPDoc();

        if (phpDocValue[0] == null) {
            getParserClient().setFirstDocBlock(null);
            return s;
        }

        PHPDocBlock docBlock = parseDocBlock((String)phpDocValue[0], ((Integer) phpDocValue[1]).intValue());

        getParserClient().setFirstDocBlock(docBlock);
        return s;
    }

    private PHPDocBlock parseDocBlock(String comment, int startPosition){
        DocumentorLexer docLexer = new DocumentorLexer(new StringReader(comment));
        PHPDocBlock rv = docLexer.parse();
        rv.setStartPosition(startPosition);
        rv.setEndPosition(startPosition + comment.length() - 1);
        return rv;
    }

    protected int error_sync_size() {
        return 1;
    }


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$PhpParser5$actions {
  private final PhpParser5 parser;

  /** Constructor */
  CUP$PhpParser5$actions(PhpParser5 parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$PhpParser5$do_action(
    int                        CUP$PhpParser5$act_num,
    java_cup.runtime.lr_parser CUP$PhpParser5$parser,
    java.util.Stack            CUP$PhpParser5$stack,
    int                        CUP$PhpParser5$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$PhpParser5$result;

      /* select the action based on the action number */
      switch (CUP$PhpParser5$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // string_st ::= T_DEFINE 
            {
              String RESULT =null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = value; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("string_st",65, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // string_st ::= T_STRING 
            {
              String RESULT =null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = value; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("string_st",65, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // tracked_variable ::= T_VARIABLE 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    RESULT = var;
    parser.getParserClient().handleVariableName(var, parser.getCurrentLine());

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("tracked_variable",98, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // class_constant ::= fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("class_constant",100, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // isset_variables ::= isset_variables T_COMMA variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("isset_variables",97, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // isset_variables ::= variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("isset_variables",97, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // internal_functions_in_yacc ::= T_REQUIRE_ONCE expr 
            {
              Object RESULT =null;
		int includeleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int includeright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		Object include = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    RESULT = e;
    parser.getParserClient().handleIncludedFile(IncludingType.REQUIRE_ONCE, e, parser.getPHPDoc(includeleft), includeleft, eright, eleft, parser.getCurrentLine());

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("internal_functions_in_yacc",64, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // internal_functions_in_yacc ::= T_REQUIRE expr 
            {
              Object RESULT =null;
		int includeleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int includeright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		Object include = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    RESULT = e;
    parser.getParserClient().handleIncludedFile(IncludingType.REQUIRE, e, parser.getPHPDoc(includeleft), includeleft, eright, eleft, parser.getCurrentLine());

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("internal_functions_in_yacc",64, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // internal_functions_in_yacc ::= T_EVAL T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("internal_functions_in_yacc",64, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // internal_functions_in_yacc ::= T_INCLUDE_ONCE expr 
            {
              Object RESULT =null;
		int includeleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int includeright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		Object include = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    RESULT = e;
    parser.getParserClient().handleIncludedFile(IncludingType.INCLUDE_ONCE, e, parser.getPHPDoc(includeleft), includeleft, eright, eleft, parser.getCurrentLine());

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("internal_functions_in_yacc",64, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // internal_functions_in_yacc ::= T_INCLUDE expr 
            {
              Object RESULT =null;
		int includeleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int includeright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		Object include = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    RESULT = e;
        parser.getParserClient().handleIncludedFile(IncludingType.INCLUDE, e, parser.getPHPDoc(includeleft), includeleft, eright, eleft, parser.getCurrentLine());

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("internal_functions_in_yacc",64, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // internal_functions_in_yacc ::= T_EMPTY T_OPEN_PARENTHESE variable T_CLOSE_PARENTHESE 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("internal_functions_in_yacc",64, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // internal_functions_in_yacc ::= T_ISSET T_OPEN_PARENTHESE isset_variables T_CLOSE_PARENTHESE 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("internal_functions_in_yacc",64, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // encaps_var_offset ::= tracked_variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("encaps_var_offset",63, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // encaps_var_offset ::= T_NUM_STRING 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("encaps_var_offset",63, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // encaps_var_offset ::= string_st 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("encaps_var_offset",63, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // encaps_var ::= T_CURLY_OPEN_WITH_DOLAR variable T_CURLY_CLOSE 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("encaps_var",62, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // encaps_var ::= T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME T_OPEN_RECT expr T_CLOSE_RECT T_CURLY_CLOSE 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("encaps_var",62, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // encaps_var ::= T_DOLLAR_OPEN_CURLY_BRACES expr T_CURLY_CLOSE 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("encaps_var",62, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // encaps_var ::= tracked_variable T_OBJECT_OPERATOR string_st 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("encaps_var",62, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // encaps_var ::= tracked_variable T_OPEN_RECT encaps_var_offset T_CLOSE_RECT 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("encaps_var",62, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // encaps_var ::= tracked_variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("encaps_var",62, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // encaps_list ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("encaps_list",61, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // encaps_list ::= encaps_list T_ENCAPSED_AND_WHITESPACE 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("encaps_list",61, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // encaps_list ::= encaps_list encaps_var 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("encaps_list",61, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // non_empty_array_pair_list ::= T_REFERENCE w_variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_array_pair_list",60, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // non_empty_array_pair_list ::= expr T_DOUBLE_ARROW T_REFERENCE w_variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_array_pair_list",60, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // non_empty_array_pair_list ::= non_empty_array_pair_list T_COMMA T_REFERENCE w_variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_array_pair_list",60, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // non_empty_array_pair_list ::= non_empty_array_pair_list T_COMMA expr T_DOUBLE_ARROW T_REFERENCE w_variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_array_pair_list",60, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // non_empty_array_pair_list ::= expr 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_array_pair_list",60, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // non_empty_array_pair_list ::= expr T_DOUBLE_ARROW expr 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_array_pair_list",60, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // non_empty_array_pair_list ::= non_empty_array_pair_list T_COMMA expr 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_array_pair_list",60, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // non_empty_array_pair_list ::= non_empty_array_pair_list T_COMMA expr T_DOUBLE_ARROW expr 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_array_pair_list",60, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // array_pair_list ::= non_empty_array_pair_list possible_comma 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("array_pair_list",59, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // array_pair_list ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("array_pair_list",59, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // assignment_list_element ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("assignment_list_element",58, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // assignment_list_element ::= T_LIST T_OPEN_PARENTHESE assignment_list T_CLOSE_PARENTHESE 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("assignment_list_element",58, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // assignment_list_element ::= variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("assignment_list_element",58, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // assignment_list ::= assignment_list_element 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("assignment_list",57, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // assignment_list ::= assignment_list T_COMMA assignment_list_element 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("assignment_list",57, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // simple_indirect_reference ::= simple_indirect_reference T_DOLLAR 
            {
              Object RESULT =null;
		int refleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int refright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		Object ref = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		 RESULT = ref + "$"; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("simple_indirect_reference",56, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // simple_indirect_reference ::= T_DOLLAR 
            {
              Object RESULT =null;
		 RESULT = "$"; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("simple_indirect_reference",56, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // variable_name ::= T_CURLY_OPEN expr T_CURLY_CLOSE 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("variable_name",55, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // variable_name ::= string_st 
            {
              String RESULT =null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = value; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("variable_name",55, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // object_dim_list ::= variable_name 
            {
              String RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = name; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("object_dim_list",54, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // object_dim_list ::= object_dim_list T_CURLY_OPEN expr T_CURLY_CLOSE 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("object_dim_list",54, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // object_dim_list ::= object_dim_list T_OPEN_RECT dim_offset T_CLOSE_RECT 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("object_dim_list",54, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // object_property ::= variable_without_objects 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("object_property",53, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // object_property ::= object_dim_list 
            {
              String RESULT =null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = value; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("object_property",53, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // dim_offset ::= expr 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("dim_offset",52, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // dim_offset ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("dim_offset",52, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // compound_variable ::= T_DOLLAR T_CURLY_OPEN expr T_CURLY_CLOSE 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("compound_variable",51, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // compound_variable ::= tracked_variable 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = var; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("compound_variable",51, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // reference_variable ::= compound_variable 
            {
              String RESULT =null;
		int comp_varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int comp_varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String comp_var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = comp_var; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("reference_variable",50, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // reference_variable ::= reference_variable T_CURLY_OPEN expr T_CURLY_CLOSE 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("reference_variable",50, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // reference_variable ::= reference_variable T_OPEN_RECT dim_offset T_CLOSE_RECT 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("reference_variable",50, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // base_variable ::= static_member 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("base_variable",102, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // base_variable ::= simple_indirect_reference reference_variable 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("base_variable",102, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // base_variable ::= reference_variable 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = var; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("base_variable",102, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // base_variable_with_function_calls ::= function_call 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = var; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("base_variable_with_function_calls",106, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // base_variable_with_function_calls ::= base_variable 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = var; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("base_variable_with_function_calls",106, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // static_member ::= fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("static_member",96, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // variable_without_objects ::= simple_indirect_reference reference_variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("variable_without_objects",94, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // variable_without_objects ::= reference_variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("variable_without_objects",94, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // method_or_not ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("method_or_not",76, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // method_or_not ::= T_OPEN_PARENTHESE function_call_parameter_list T_CLOSE_PARENTHESE 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("method_or_not",76, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // variable_property ::= T_OBJECT_OPERATOR object_property method_or_not 
            {
              String RESULT =null;
		int propertyNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int propertyNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		String propertyName = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		int isFunctionleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int isFunctionright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		Object isFunction = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    RESULT = propertyName;
    if(isFunctionleft >= isFunctionright){
        RESULT = "*" + propertyName;
    }

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("variable_property",95, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // variable_properties ::= 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("variable_properties",77, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // variable_properties ::= variable_properties variable_property 
            {
              String RESULT =null;
		int propertiesNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int propertiesNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		String propertiesName = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		int propertyNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int propertyNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String propertyName = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    if(propertiesNameleft < propertiesNameright){
        RESULT = propertiesName + ";" + propertyName;
    } else {
        RESULT = propertyName;
    }

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("variable_properties",77, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // variable ::= base_variable_with_function_calls 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = var; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("variable",80, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // variable ::= base_variable_with_function_calls T_OBJECT_OPERATOR object_property method_or_not variable_properties 
            {
              String RESULT =null;
		int varNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).left;
		int varNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).right;
		String varName = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).value;
		int propertyNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int propertyNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		String propertyName = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		int isFunctionleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int isFunctionright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		Object isFunction = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		int variablePropertyleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int variablePropertyright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String variableProperty = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 	String property = propertyName;
    if(isFunctionleft >= isFunctionright){
        property = "*" + propertyName;
    }
    RESULT = varName + ";" + property + ";" + variableProperty;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("variable",80, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // rw_variable ::= variable 
            {
              Object RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = var; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("rw_variable",93, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // w_variable ::= variable 
            {
              Object RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = var; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("w_variable",68, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // r_variable ::= variable 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = "r_variable;" + var; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("r_variable",91, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // expr ::= expr_without_variable 
            {
              String RESULT =null;
		int ewvleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int ewvright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String ewv = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = ewv; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr",49, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // expr ::= r_variable 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = var; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr",49, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // non_empty_static_array_pair_list ::= static_scalar 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_static_array_pair_list",48, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // non_empty_static_array_pair_list ::= static_scalar T_DOUBLE_ARROW static_scalar 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_static_array_pair_list",48, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // non_empty_static_array_pair_list ::= non_empty_static_array_pair_list T_COMMA static_scalar 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_static_array_pair_list",48, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // non_empty_static_array_pair_list ::= non_empty_static_array_pair_list T_COMMA static_scalar T_DOUBLE_ARROW static_scalar 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_static_array_pair_list",48, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // possible_comma ::= T_COMMA 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("possible_comma",47, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // possible_comma ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("possible_comma",47, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // static_array_pair_list ::= non_empty_static_array_pair_list possible_comma 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("static_array_pair_list",46, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // static_array_pair_list ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("static_array_pair_list",46, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // scalar ::= T_START_HEREDOC encaps_list T_END_HEREDOC 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("scalar",45, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // scalar ::= T_QUATE encaps_list T_QUATE 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("scalar",45, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // scalar ::= common_scalar 
            {
              String RESULT =null;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String scalar = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = scalar; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("scalar",45, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // scalar ::= class_constant 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("scalar",45, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // scalar ::= T_STRING_VARNAME 
            {
              String RESULT =null;
		int strleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int strright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String str = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = str; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("scalar",45, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // scalar ::= string_st 
            {
              String RESULT =null;
		int strleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int strright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String str = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = str; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("scalar",45, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // static_class_constant ::= T_STRING T_PAAMAYIM_NEKUDOTAYIM T_STRING 
            {
              String RESULT =null;
		int strleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int strright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		String str = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		int str2left = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int str2right = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String str2 = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = str+"::"+str2; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("static_class_constant",105, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // static_scalar ::= static_class_constant 
            {
              String RESULT =null;
		int clsConstleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int clsConstright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String clsConst = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = clsConst; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("static_scalar",44, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // static_scalar ::= T_ARRAY T_OPEN_PARENTHESE static_array_pair_list T_CLOSE_PARENTHESE 
            {
              String RESULT =null;
		 RESULT = "array()"; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("static_scalar",44, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // static_scalar ::= T_MINUS static_scalar 
            {
              String RESULT =null;
		int strleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int strright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String str = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = "-" + str; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("static_scalar",44, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // static_scalar ::= T_PLUS static_scalar 
            {
              String RESULT =null;
		int strleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int strright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String str = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = "+" + str; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("static_scalar",44, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // static_scalar ::= string_st 
            {
              String RESULT =null;
		int strleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int strright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String str = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = str; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("static_scalar",44, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // static_scalar ::= common_scalar 
            {
              String RESULT =null;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String scalar = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = scalar; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("static_scalar",44, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // common_scalar ::= T_FUNC_C 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("common_scalar",43, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // common_scalar ::= T_METHOD_C 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("common_scalar",43, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // common_scalar ::= T_CLASS_C 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("common_scalar",43, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // common_scalar ::= T_FILE 
            {
              String RESULT =null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = value; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("common_scalar",43, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // common_scalar ::= T_LINE 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("common_scalar",43, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // common_scalar ::= T_CONSTANT_ENCAPSED_STRING 
            {
              String RESULT =null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = value; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("common_scalar",43, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // common_scalar ::= T_DNUMBER 
            {
              String RESULT =null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = value; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("common_scalar",43, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // common_scalar ::= T_LNUMBER 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("common_scalar",43, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // ctor_arguments ::= T_OPEN_PARENTHESE function_call_parameter_list T_CLOSE_PARENTHESE 
            {
              String RESULT =null;
		int parametersleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int parametersright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		Object parameters = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		 RESULT = ((CompletionLexer)parser.getScanner()).createString(parametersleft,parametersright); 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("ctor_arguments",42, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // ctor_arguments ::= 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("ctor_arguments",42, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // exit_expr ::= T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("exit_expr",41, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // exit_expr ::= T_OPEN_PARENTHESE T_CLOSE_PARENTHESE 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("exit_expr",41, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // exit_expr ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("exit_expr",41, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // dynamic_class_name_variable_property ::= T_OBJECT_OPERATOR object_property 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("dynamic_class_name_variable_property",104, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // dynamic_class_name_variable_properties ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("dynamic_class_name_variable_properties",103, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // dynamic_class_name_variable_properties ::= dynamic_class_name_variable_properties dynamic_class_name_variable_property 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("dynamic_class_name_variable_properties",103, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // dynamic_class_name_reference ::= base_variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("dynamic_class_name_reference",101, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // dynamic_class_name_reference ::= base_variable T_OBJECT_OPERATOR object_property dynamic_class_name_variable_properties 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("dynamic_class_name_reference",101, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // class_name_reference ::= dynamic_class_name_reference 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("class_name_reference",99, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // class_name_reference ::= T_STRING 
            {
              String RESULT =null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = className; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("class_name_reference",99, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // fully_qualified_class_name ::= T_STRING 
            {
              String RESULT =null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = className; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("fully_qualified_class_name",69, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // function_call ::= variable_without_objects T_OPEN_PARENTHESE function_call_parameter_list T_CLOSE_PARENTHESE 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("function_call",40, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // function_call ::= fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM variable_without_objects T_OPEN_PARENTHESE function_call_parameter_list T_CLOSE_PARENTHESE 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("function_call",40, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // function_call ::= fully_qualified_class_name T_PAAMAYIM_NEKUDOTAYIM T_STRING T_OPEN_PARENTHESE function_call_parameter_list T_CLOSE_PARENTHESE 
            {
              String RESULT =null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)).value;
		int nameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).value;
		 RESULT = className + ";" + name;
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("function_call",40, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // function_call ::= T_STRING T_OPEN_PARENTHESE function_call_parameter_list T_CLOSE_PARENTHESE 
            {
              String RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).value;
		 RESULT = "function_call;" + name;
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("function_call",40, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // function_call ::= T_DEFINE T_OPEN_PARENTHESE function_call_parameter_list T_CLOSE_PARENTHESE 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("function_call",40, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // function_call ::= T_DEFINE T_OPEN_PARENTHESE T_STRING T_COMMA define_function_call_parameter_list T_CLOSE_PARENTHESE 
            {
              String RESULT =null;
		int defineleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)).left;
		int defineright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)).right;
		String define = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)).value;
		int valueleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		
    parser.getParserClient().handleDefine(value, val, parser.getPHPDoc(defineleft), defineleft, valueright, valueleft);

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("function_call",40, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // function_call ::= T_DEFINE T_OPEN_PARENTHESE T_CONSTANT_ENCAPSED_STRING T_COMMA define_function_call_parameter_list T_CLOSE_PARENTHESE 
            {
              String RESULT =null;
		int defineleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)).left;
		int defineright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)).right;
		String define = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)).value;
		int valueleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		
    parser.getParserClient().handleDefine(value, val, parser.getPHPDoc(defineleft), defineleft, valueright, valueleft);

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("function_call",40, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // define_function_call_parameter_list ::= define_function_call_parameter_list T_COMMA T_REFERENCE w_variable 
            {
              String RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).value;
		 RESULT = val;
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("define_function_call_parameter_list",29, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // define_function_call_parameter_list ::= define_function_call_parameter_list T_COMMA variable 
            {
              String RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		 RESULT = val;
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("define_function_call_parameter_list",29, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // define_function_call_parameter_list ::= define_function_call_parameter_list T_COMMA expr_without_variable 
            {
              String RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		 RESULT = val;
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("define_function_call_parameter_list",29, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // define_function_call_parameter_list ::= T_REFERENCE w_variable 
            {
              String RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = parser.createString(valleft - 1, valright);
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("define_function_call_parameter_list",29, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // define_function_call_parameter_list ::= variable 
            {
              String RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = parser.createString(valleft, valright);
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("define_function_call_parameter_list",29, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // define_function_call_parameter_list ::= expr_without_variable 
            {
              String RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String val = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = parser.createString(valleft, valright);
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("define_function_call_parameter_list",29, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // expr_without_variable ::= T_PRINT expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // expr_without_variable ::= T_BACKQUATE encaps_list T_BACKQUATE 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // expr_without_variable ::= T_ARRAY T_OPEN_PARENTHESE array_pair_list T_CLOSE_PARENTHESE 
            {
              String RESULT =null;
		 RESULT = "array"; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // expr_without_variable ::= scalar 
            {
              String RESULT =null;
		int scalar_resultleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int scalar_resultright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String scalar_result = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = scalar_result; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // expr_without_variable ::= T_AT expr 
            {
              String RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = e; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // expr_without_variable ::= T_EXIT exit_expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // expr_without_variable ::= T_UNSET_CAST expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // expr_without_variable ::= T_BOOL_CAST expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // expr_without_variable ::= T_OBJECT_CAST expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // expr_without_variable ::= T_ARRAY_CAST expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // expr_without_variable ::= T_STRING_CAST expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // expr_without_variable ::= T_DOUBLE_CAST expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // expr_without_variable ::= T_INT_CAST expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // expr_without_variable ::= internal_functions_in_yacc 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // expr_without_variable ::= expr T_QUESTION_MARK expr T_NEKUDOTAIM expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // expr_without_variable ::= T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE 
            {
              String RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		 RESULT = e; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // expr_without_variable ::= expr T_INSTANCEOF class_name_reference 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // expr_without_variable ::= expr T_IS_GREATER_OR_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // expr_without_variable ::= expr T_LGREATER expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // expr_without_variable ::= expr T_IS_SMALLER_OR_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // expr_without_variable ::= expr T_RGREATER expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // expr_without_variable ::= expr T_IS_NOT_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // expr_without_variable ::= expr T_IS_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // expr_without_variable ::= expr T_IS_NOT_IDENTICAL expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // expr_without_variable ::= expr T_IS_IDENTICAL expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // expr_without_variable ::= T_TILDA expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // expr_without_variable ::= T_NOT expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // expr_without_variable ::= T_MINUS expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // expr_without_variable ::= T_PLUS expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // expr_without_variable ::= expr T_SR expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // expr_without_variable ::= expr T_SL expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // expr_without_variable ::= expr T_PRECENT expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // expr_without_variable ::= expr T_DIV expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // expr_without_variable ::= expr T_TIMES expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // expr_without_variable ::= expr T_MINUS expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // expr_without_variable ::= expr T_PLUS expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // expr_without_variable ::= expr T_NEKUDA expr 
            {
              String RESULT =null;
		int e1left = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int e1right = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		String e1 = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		int e2left = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int e2right = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String e2 = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = e1 + e2; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // expr_without_variable ::= expr T_KOVA expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // expr_without_variable ::= expr T_REFERENCE expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // expr_without_variable ::= expr T_OR expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // expr_without_variable ::= expr T_LOGICAL_XOR expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // expr_without_variable ::= expr T_LOGICAL_AND expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // expr_without_variable ::= expr T_LOGICAL_OR expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // expr_without_variable ::= expr T_BOOLEAN_AND expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // expr_without_variable ::= expr T_BOOLEAN_OR expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // expr_without_variable ::= T_DEC rw_variable 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // expr_without_variable ::= rw_variable T_DEC 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // expr_without_variable ::= T_INC rw_variable 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // expr_without_variable ::= rw_variable T_INC 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // expr_without_variable ::= variable T_SR_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // expr_without_variable ::= variable T_SL_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // expr_without_variable ::= variable T_XOR_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // expr_without_variable ::= variable T_OR_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // expr_without_variable ::= variable T_AND_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // expr_without_variable ::= variable T_MOD_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // expr_without_variable ::= variable T_CONCAT_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // expr_without_variable ::= variable T_DIV_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // expr_without_variable ::= variable T_MUL_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // expr_without_variable ::= variable T_MINUS_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // expr_without_variable ::= variable T_PLUS_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // expr_without_variable ::= T_CLONE expr 
            {
              String RESULT =null;
		int eleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int eright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String e = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = e; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // expr_without_variable ::= T_NEW class_name_reference ctor_arguments 
            {
              String RESULT =null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		int ctorleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int ctorright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String ctor = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = "object_instansiation;" + className + ";" + ctor; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // expr_without_variable ::= variable T_EQUAL T_REFERENCE T_NEW class_name_reference ctor_arguments 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		int ctorleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int ctorright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String ctor = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
   parser.getParserClient().handleObjectInstansiation(var, className, ctor, parser.getCurrentLine(), classNameleft, false);

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // expr_without_variable ::= variable T_EQUAL T_REFERENCE variable 
            {
              String RESULT =null;
		int var1left = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).left;
		int var1right = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).right;
		String var1 = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).value;
		int var2left = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int var2right = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String var2 = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    if (var1 != null) {
        if (var2 != null) {
            String objectType = null;
            String args = null;
            if (var2.startsWith("$") || var2.startsWith("function_call")){
                objectType = "r_variable;" + var2;
            } else {
                String[] strings = var2.split(";");
                objectType = strings[0];
                if(strings.length == 2){
                    args = strings[1];
                }
            }
            parser.getParserClient().handleObjectInstansiation(var1, objectType, args, parser.getCurrentLine(), var2left, false);
        } else {
            parser.getParserClient().handleVariableName(var1, parser.getCurrentLine());
        }
    }

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // expr_without_variable ::= variable T_EQUAL expr 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		int expleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int expright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String exp = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    if (var != null) {
        if (exp != null) {
            String objectType = null;
            String args = null;
            if (exp.startsWith("object_instansiation")) {
                String[] strings = exp.split(";");
                objectType = strings[1];
                if(strings.length == 3){
                    args = strings[2];
                }
            } else if (exp.equals("array")) {
                objectType = "array";
            } else if (exp.startsWith("r_variable")){
                objectType = exp;
            }
            parser.getParserClient().handleObjectInstansiation(var, objectType, args, parser.getCurrentLine(), expleft, false);
        } else {
            parser.getParserClient().handleVariableName(var, parser.getCurrentLine());
        }
    }

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // expr_without_variable ::= T_LIST T_OPEN_PARENTHESE assignment_list T_CLOSE_PARENTHESE T_EQUAL expr 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("expr_without_variable",39, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // non_empty_for_expr ::= expr 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_for_expr",38, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // non_empty_for_expr ::= non_empty_for_expr T_COMMA expr 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_for_expr",38, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // for_expr ::= non_empty_for_expr 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("for_expr",37, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // for_expr ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("for_expr",37, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // echo_expr_list ::= expr 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("echo_expr_list",36, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // echo_expr_list ::= echo_expr_list T_COMMA expr 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("echo_expr_list",36, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // class_constant_declaration ::= T_CONST T_STRING T_EQUAL static_scalar 
            {
              Object RESULT =null;
		int tconstleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).left;
		int tconstright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).right;
		Object tconst = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).value;
		int constNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int constNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		String constName = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		int valueleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    parser.getParserClient().handleClassConstDeclaration(constName, value, parser.getPHPDoc(tconstleft), tconstleft, valueright, constNameleft);

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("class_constant_declaration",71, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // class_constant_declaration ::= class_constant_declaration T_COMMA T_STRING T_EQUAL static_scalar 
            {
              Object RESULT =null;
		int commaleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).left;
		int commaright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).right;
		Object comma = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).value;
		int constNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int constNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		String constName = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		int valueleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    parser.getParserClient().handleClassConstDeclaration(constName, value, parser.getPHPDoc(commaleft), commaleft, valueright, constNameleft);

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("class_constant_declaration",71, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // class_variable_declaration ::= T_VARIABLE T_EQUAL static_scalar 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		 RESULT = var; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("class_variable_declaration",70, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // class_variable_declaration ::= T_VARIABLE 
            {
              String RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = var;  
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("class_variable_declaration",70, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // class_variable_declaration ::= class_variable_declaration T_COMMA T_VARIABLE T_EQUAL static_scalar 
            {
              String RESULT =null;
		int declleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).left;
		int declright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).right;
		String decl = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		 RESULT = decl+","+var; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("class_variable_declaration",70, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // class_variable_declaration ::= class_variable_declaration T_COMMA T_VARIABLE 
            {
              String RESULT =null;
		int declleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int declright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		String decl = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = decl + "," + var; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("class_variable_declaration",70, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // member_modifier ::= T_FINAL 
            {
              Integer RESULT =null;
		 RESULT = PhpParser5.FINAL_INTEGER; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("member_modifier",75, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // member_modifier ::= T_ABSTRACT 
            {
              Integer RESULT =null;
		 RESULT = PhpParser5.ABSTRACT_INTEGER; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("member_modifier",75, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // member_modifier ::= T_STATIC 
            {
              Integer RESULT =null;
		 RESULT = PhpParser5.STATIC_INTEGER; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("member_modifier",75, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // member_modifier ::= T_PRIVATE 
            {
              Integer RESULT =null;
		 RESULT = PhpParser5.PRIVATE_INTEGER; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("member_modifier",75, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // member_modifier ::= T_PROTECTED 
            {
              Integer RESULT =null;
		 RESULT = PhpParser5.PROTECTED_INTEGER; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("member_modifier",75, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // member_modifier ::= T_PUBLIC 
            {
              Integer RESULT =null;
		 RESULT = PhpParser5.PUBLIC_INTEGER; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("member_modifier",75, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // non_empty_member_modifiers ::= non_empty_member_modifiers member_modifier 
            {
              Integer RESULT =null;
		int modifiers1left = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int modifiers1right = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		Integer modifiers1 = (Integer)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		int modofier2left = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int modofier2right = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		Integer modofier2 = (Integer)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = new Integer(modifiers1.intValue() | modofier2.intValue()); 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_member_modifiers",74, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // non_empty_member_modifiers ::= member_modifier 
            {
              Integer RESULT =null;
		int modofierleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int modofierright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		Integer modofier = (Integer)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = modofier; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_member_modifiers",74, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // method_modifiers ::= non_empty_member_modifiers 
            {
              Integer RESULT =null;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		Integer modifier = (Integer)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = modifier; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("method_modifiers",72, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // method_modifiers ::= 
            {
              Integer RESULT =null;
		 RESULT = PhpParser5.ZERO_INTEGER; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("method_modifiers",72, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // variable_modifiers ::= T_VAR 
            {
              Integer RESULT =null;
		 RESULT = PhpParser5.ZERO_INTEGER; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("variable_modifiers",92, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // variable_modifiers ::= non_empty_member_modifiers 
            {
              Integer RESULT =null;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		Integer modifier = (Integer)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = modifier; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("variable_modifiers",92, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // method_body ::= T_CURLY_OPEN inner_statement_list T_CURLY_CLOSE 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("method_body",73, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // method_body ::= T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("method_body",73, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // class_statement ::= T_VAR_COMMENT 
            {
              Object RESULT =null;
		int varCommentleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int varCommentright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String varComment = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    varComment = varComment.substring(2, varComment.length() - 2).trim();   // remove '/*' and '*/'

    StringTokenizer tokenizer = new StringTokenizer(varComment, " \n\t\r");
    if (tokenizer.countTokens() >= 3) {
        tokenizer.nextToken();  // ignore the @var
        String objectName = tokenizer.nextToken();
        String objectType = tokenizer.nextToken();
        if (objectName.charAt(0) != '$') {
            objectName = "$" + objectName;
        }
        parser.getParserClient().handleObjectInstansiation(objectName, objectType, null, parser.getCurrentLine(), varCommentleft, true);
    }

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("class_statement",34, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // class_statement ::= method_modifiers T_FUNCTION is_reference string_st NT$8 T_OPEN_PARENTHESE parameter_list T_CLOSE_PARENTHESE NT$9 method_body 
            {
              Object RESULT =null;
              // propagate RESULT from NT$9
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-9)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-9)).right;
		Integer modifier = (Integer)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-9)).value;
		int tfuncleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-8)).left;
		int tfuncright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-8)).right;
		Object tfunc = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-8)).value;
		int functionNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-6)).left;
		int functionNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-6)).right;
		String functionName = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-6)).value;
		int bodyleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int bodyright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		Object body = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    parser.getParserClient().handleFunctionDeclarationEnds(functionName, true, bodyright);

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("class_statement",34, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-9)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // NT$9 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).value;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-7)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-7)).right;
		Integer modifier = (Integer)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-7)).value;
		int tfuncleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-6)).left;
		int tfuncright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-6)).right;
		Object tfunc = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-6)).value;
		int functionNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).left;
		int functionNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).right;
		String functionName = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).value;

    int leftPosition = modifierleft;
    if (modifierleft == modifierright) {
        leftPosition = tfuncleft;
    }
    parser.getParserClient().handleFunctionDeclaration(functionName, true, modifier.intValue(), parser.getPHPDoc(leftPosition), leftPosition, functionNameleft, parser.getCurrentLine());

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("NT$9",116, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // NT$8 ::= 
            {
              Object RESULT =null;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).right;
		Integer modifier = (Integer)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).value;
		int tfuncleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int tfuncright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		Object tfunc = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		int functionNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int functionNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String functionName = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
parser.getParserClient().handleFunctionDeclarationStarts(functionName);
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("NT$8",115, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // class_statement ::= class_constant_declaration T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("class_statement",34, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // class_statement ::= variable_modifiers class_variable_declaration T_SEMICOLON 
            {
              Object RESULT =null;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		Integer modifier = (Integer)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		int declleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int declright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		String decl = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		
    parser.getParserClient().handleClassVariablesDeclaration(decl, modifier.intValue(), parser.getPHPDoc(modifierleft), modifierleft, declright, declleft);

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("class_statement",34, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // class_statement_list ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("class_statement_list",33, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // class_statement_list ::= class_statement_list class_statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("class_statement_list",33, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // static_var_list ::= T_VARIABLE T_EQUAL static_scalar 
            {
              Object RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		
    parser.getParserClient().handleGlobalVar(var);

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("static_var_list",32, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // static_var_list ::= T_VARIABLE 
            {
              Object RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    parser.getParserClient().handleGlobalVar(var);

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("static_var_list",32, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // static_var_list ::= static_var_list T_COMMA T_VARIABLE T_EQUAL static_scalar 
            {
              Object RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		
    parser.getParserClient().handleGlobalVar(var);

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("static_var_list",32, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // static_var_list ::= static_var_list T_COMMA T_VARIABLE 
            {
              Object RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    parser.getParserClient().handleGlobalVar(var);

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("static_var_list",32, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // global_var ::= T_DOLLAR T_CURLY_OPEN expr T_CURLY_CLOSE 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("global_var",31, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // global_var ::= T_DOLLAR r_variable 
            {
              Object RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    parser.getParserClient().handleGlobalVar("$" + var);

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("global_var",31, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // global_var ::= T_VARIABLE 
            {
              Object RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    parser.getParserClient().handleGlobalVar(var);

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("global_var",31, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // global_var_list ::= global_var 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("global_var_list",30, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // global_var_list ::= global_var_list T_COMMA global_var 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("global_var_list",30, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // non_empty_function_call_parameter_list ::= non_empty_function_call_parameter_list T_COMMA T_REFERENCE w_variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_function_call_parameter_list",28, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // non_empty_function_call_parameter_list ::= non_empty_function_call_parameter_list T_COMMA variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_function_call_parameter_list",28, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // non_empty_function_call_parameter_list ::= non_empty_function_call_parameter_list T_COMMA expr_without_variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_function_call_parameter_list",28, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // non_empty_function_call_parameter_list ::= T_REFERENCE w_variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_function_call_parameter_list",28, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // non_empty_function_call_parameter_list ::= variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_function_call_parameter_list",28, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // non_empty_function_call_parameter_list ::= expr_without_variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_function_call_parameter_list",28, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // function_call_parameter_list ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("function_call_parameter_list",27, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // function_call_parameter_list ::= non_empty_function_call_parameter_list 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("function_call_parameter_list",27, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // optional_class_type ::= T_ARRAY 
            {
              String RESULT =null;
		 RESULT = "array";
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("optional_class_type",90, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // optional_class_type ::= T_STRING 
            {
              String RESULT =null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = className;
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("optional_class_type",90, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // optional_class_type ::= 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("optional_class_type",90, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // parameter ::= error 
            {
              Object RESULT =null;
		int theErrorleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int theErrorright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		Object theError = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    parser.getParserClient().handleError("parameter::=error", theErrorleft, theErrorright, parser.getCurrentLine());

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("parameter",26, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // parameter ::= optional_class_type T_REFERENCE T_VARIABLE T_EQUAL static_scalar 
            {
              Object RESULT =null;
		int classTypeleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).left;
		int classTyperight = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).right;
		String classType = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).value;
		int refleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).left;
		int refright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).right;
		Object ref = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String scalar = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    parser.getParserClient().handleFunctionParameter(classType, var, true, false, scalar, classTypeleft, scalarright, varleft, parser.getCurrentLine());

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("parameter",26, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // parameter ::= optional_class_type T_VARIABLE T_EQUAL static_scalar 
            {
              Object RESULT =null;
		int classTypeleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).left;
		int classTyperight = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).right;
		String classType = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		int scalarleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int scalarright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String scalar = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    parser.getParserClient().handleFunctionParameter(classType, var, false, false, scalar, classTypeleft, scalarright, varleft, parser.getCurrentLine());

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("parameter",26, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // parameter ::= optional_class_type T_REFERENCE T_VARIABLE 
            {
              Object RESULT =null;
		int classTypeleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int classTyperight = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		String classType = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		int refleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int refright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		Object ref = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    parser.getParserClient().handleFunctionParameter(classType, var, true, false, "", classTypeleft, varright, varleft, parser.getCurrentLine());

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("parameter",26, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // parameter ::= optional_class_type T_VARIABLE 
            {
              Object RESULT =null;
		int classTypeleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int classTyperight = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		String classType = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    parser.getParserClient().handleFunctionParameter(classType, var, false, false, "", classTypeleft, varright, varleft, parser.getCurrentLine());

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("parameter",26, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // non_empty_parameter_list ::= error non_empty_parameter_list 
            {
              Object RESULT =null;
		int theErrorleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int theErrorright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		Object theError = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		
    parser.getParserClient().handleError("non_empty_parameter_list::=error1", theErrorleft, theErrorright, parser.getCurrentLine());

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_parameter_list",25, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // non_empty_parameter_list ::= non_empty_parameter_list T_COMMA non_empty_parameter_list 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_parameter_list",25, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // non_empty_parameter_list ::= parameter 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_parameter_list",25, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // parameter_list ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("parameter_list",24, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // parameter_list ::= non_empty_parameter_list 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("parameter_list",24, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // new_else_single ::= T_ELSE T_NEKUDOTAIM inner_statement_list 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("new_else_single",23, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // new_else_single ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("new_else_single",23, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // else_single ::= T_ELSE statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("else_single",22, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // else_single ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("else_single",22, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // new_elseif_list ::= new_elseif_list T_ELSEIF T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE T_NEKUDOTAIM inner_statement_list 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("new_elseif_list",21, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-6)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // new_elseif_list ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("new_elseif_list",21, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // elseif_list ::= elseif_list T_ELSEIF T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("elseif_list",20, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // elseif_list ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("elseif_list",20, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // while_statement ::= T_NEKUDOTAIM inner_statement_list T_ENDWHILE T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("while_statement",19, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // while_statement ::= statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("while_statement",19, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // case_separator ::= T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("case_separator",18, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // case_separator ::= T_NEKUDOTAIM 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("case_separator",18, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // case_list ::= case_list T_DEFAULT case_separator inner_statement_list 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("case_list",17, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // case_list ::= case_list T_CASE expr case_separator inner_statement_list 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("case_list",17, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // case_list ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("case_list",17, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // switch_case_list ::= T_NEKUDOTAIM T_SEMICOLON case_list T_ENDSWITCH T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("switch_case_list",16, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // switch_case_list ::= T_NEKUDOTAIM case_list T_ENDSWITCH T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("switch_case_list",16, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // switch_case_list ::= T_CURLY_OPEN T_SEMICOLON case_list T_CURLY_CLOSE 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("switch_case_list",16, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // switch_case_list ::= T_CURLY_OPEN case_list T_CURLY_CLOSE 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("switch_case_list",16, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // declare_list ::= declare_list T_COMMA string_st T_EQUAL static_scalar 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("declare_list",15, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // declare_list ::= string_st T_EQUAL static_scalar 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("declare_list",15, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // declare_statement ::= T_NEKUDOTAIM inner_statement_list T_ENDDECLARE T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("declare_statement",14, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // declare_statement ::= statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("declare_statement",14, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // foreach_statement ::= T_NEKUDOTAIM inner_statement_list T_ENDFOREACH T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("foreach_statement",13, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // foreach_statement ::= statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("foreach_statement",13, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // for_statement ::= T_NEKUDOTAIM inner_statement_list T_ENDFOR T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("for_statement",12, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // for_statement ::= statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("for_statement",12, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // foreach_variable ::= T_REFERENCE variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("foreach_variable",11, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // foreach_variable ::= variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("foreach_variable",11, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // foreach_optional_arg ::= T_DOUBLE_ARROW foreach_variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("foreach_optional_arg",10, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // foreach_optional_arg ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("foreach_optional_arg",10, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // interface_list ::= interface_list T_COMMA fully_qualified_class_name 
            {
              String RESULT =null;
		int listleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int listright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		String list = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = list + "," + "[" + classNameleft + "." + classNameright + "]" + className; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("interface_list",89, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // interface_list ::= fully_qualified_class_name 
            {
              String RESULT =null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = "[" + classNameleft + "." + classNameright + "]" + className; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("interface_list",89, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // implements_list ::= T_IMPLEMENTS interface_list 
            {
              String RESULT =null;
		int classesNamesleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int classesNamesright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String classesNames = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = classesNames; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("implements_list",88, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // implements_list ::= 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("implements_list",88, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // interface_extends_list ::= T_EXTENDS interface_list 
            {
              String RESULT =null;
		int interfaceListleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int interfaceListright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String interfaceList = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = interfaceList; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("interface_extends_list",67, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // interface_extends_list ::= 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("interface_extends_list",67, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // interface_entry ::= T_INTERFACE 
            {
              Integer RESULT =null;
		 RESULT = PhpParser5.INTERFACE_INTEGER; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("interface_entry",66, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // extends_from ::= T_EXTENDS fully_qualified_class_name 
            {
              String RESULT =null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 RESULT = "[" + classNameleft + "." + classNameright + "]" + className; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("extends_from",87, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // extends_from ::= 
            {
              String RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("extends_from",87, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // class_entry_type ::= T_FINAL T_CLASS 
            {
              Integer RESULT =null;
		 RESULT = PhpParser5.FINAL_INTEGER; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("class_entry_type",86, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // class_entry_type ::= T_ABSTRACT T_CLASS 
            {
              Integer RESULT =null;
		 RESULT = PhpParser5.ABSTRACT_INTEGER; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("class_entry_type",86, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // class_entry_type ::= T_CLASS 
            {
              Integer RESULT =null;
		 RESULT = PhpParser5.ZERO_INTEGER; 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("class_entry_type",86, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // unticked_class_declaration_statement ::= interface_entry T_STRING NT$6 interface_extends_list NT$7 T_CURLY_OPEN class_statement_list T_CURLY_CLOSE 
            {
              Object RESULT =null;
              // propagate RESULT from NT$7
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).value;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-7)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-7)).right;
		Integer modifier = (Integer)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-7)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-6)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-6)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-6)).value;
		int interfacesListleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).left;
		int interfacesListright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).right;
		String interfacesList = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).value;
		int end_curlyleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int end_curlyright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		Object end_curly = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 parser.getParserClient().handleClassDeclarationEnds(className, end_curlyright); 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_class_declaration_statement",85, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-7)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // NT$7 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).right;
		Integer modifier = (Integer)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		int interfacesListleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int interfacesListright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String interfacesList = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;

        parser.getParserClient().handleClassDeclaration(className, modifier.intValue(), null, interfacesList, parser.getPHPDoc(modifierleft), modifierleft, classNameleft, parser.getCurrentLine());
    
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("NT$7",114, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // NT$6 ::= 
            {
              Object RESULT =null;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		Integer modifier = (Integer)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
 parser.getParserClient().hadleClassDeclarationStarts(className, modifierleft); 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("NT$6",113, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // unticked_class_declaration_statement ::= class_entry_type T_STRING NT$4 extends_from implements_list NT$5 T_CURLY_OPEN class_statement_list T_CURLY_CLOSE 
            {
              Object RESULT =null;
              // propagate RESULT from NT$5
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).value;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-8)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-8)).right;
		Integer modifier = (Integer)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-8)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-7)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-7)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-7)).value;
		int superClassNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)).left;
		int superClassNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)).right;
		String superClassName = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)).value;
		int interfacesNamesleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).left;
		int interfacesNamesright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).right;
		String interfacesNames = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).value;
		int end_curlyleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int end_curlyright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		Object end_curly = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		 parser.getParserClient().handleClassDeclarationEnds(className, end_curlyright); 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_class_declaration_statement",85, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-8)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // NT$5 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).right;
		Integer modifier = (Integer)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).value;
		int superClassNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int superClassNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		String superClassName = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		int interfacesNamesleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int interfacesNamesright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String interfacesNames = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;

        parser.getParserClient().handleClassDeclaration(className, modifier.intValue(), superClassName, interfacesNames, parser.getPHPDoc(modifierleft), modifierleft, classNameleft, parser.getCurrentLine());
    
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("NT$5",112, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // NT$4 ::= 
            {
              Object RESULT =null;
		int modifierleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int modifierright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		Integer modifier = (Integer)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
 parser.getParserClient().hadleClassDeclarationStarts(className, modifierleft); 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("NT$4",111, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // unticked_function_declaration_statement ::= T_FUNCTION is_reference string_st NT$2 T_OPEN_PARENTHESE parameter_list T_CLOSE_PARENTHESE NT$3 T_CURLY_OPEN inner_statement_list T_CURLY_CLOSE 
            {
              Object RESULT =null;
              // propagate RESULT from NT$3
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).value;
		int tFuncleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-10)).left;
		int tFuncright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-10)).right;
		Object tFunc = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-10)).value;
		int functionNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-8)).left;
		int functionNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-8)).right;
		String functionName = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-8)).value;
		int curlyCloseleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int curlyCloseright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		Object curlyClose = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		parser.getParserClient().handleFunctionDeclarationEnds(functionName, false, curlyCloseright);
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_function_declaration_statement",84, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-10)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // NT$3 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).value;
		int tFuncleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-6)).left;
		int tFuncright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-6)).right;
		Object tFunc = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-6)).value;
		int functionNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).left;
		int functionNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).right;
		String functionName = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).value;

        parser.getParserClient().handleFunctionDeclaration(functionName, false, 0, parser.getPHPDoc(tFuncleft), tFuncleft, functionNameleft, parser.getCurrentLine());
     
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("NT$3",110, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // NT$2 ::= 
            {
              Object RESULT =null;
		int tFuncleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int tFuncright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		Object tFunc = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		int functionNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int functionNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String functionName = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
parser.getParserClient().handleFunctionDeclarationStarts(functionName);
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("NT$2",109, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // is_reference ::= T_REFERENCE 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("is_reference",35, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // is_reference ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("is_reference",35, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // class_declaration_statement ::= unticked_class_declaration_statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("class_declaration_statement",79, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // function_declaration_statement ::= unticked_function_declaration_statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("function_declaration_statement",78, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // use_filename ::= T_OPEN_PARENTHESE T_CONSTANT_ENCAPSED_STRING T_CLOSE_PARENTHESE 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("use_filename",9, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // use_filename ::= T_CONSTANT_ENCAPSED_STRING 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("use_filename",9, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // unset_variable ::= variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unset_variable",8, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // unset_variables ::= unset_variables T_COMMA unset_variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unset_variables",7, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // unset_variables ::= unset_variable 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unset_variables",7, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // additional_catch ::= T_CATCH T_OPEN_PARENTHESE fully_qualified_class_name T_VARIABLE T_CLOSE_PARENTHESE NT$1 T_CURLY_OPEN inner_statement_list T_CURLY_CLOSE 
            {
              Object RESULT =null;
              // propagate RESULT from NT$1
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-6)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-6)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-6)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-5)).value;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("additional_catch",83, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-8)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // NT$1 ::= 
            {
              Object RESULT =null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
 parser.getParserClient().handleObjectInstansiation(var, className, null, parser.getCurrentLine(), classNameleft, false); 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("NT$1",108, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // non_empty_additional_catches ::= non_empty_additional_catches additional_catch 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_additional_catches",82, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // non_empty_additional_catches ::= additional_catch 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("non_empty_additional_catches",82, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // additional_catches ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("additional_catches",81, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // additional_catches ::= non_empty_additional_catches 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("additional_catches",81, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // unticked_statement ::= T_VAR_COMMENT 
            {
              Object RESULT =null;
		int varCommentleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int varCommentright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		String varComment = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    varComment = varComment.substring(2, varComment.length() - 2).trim();   // remove '/*' and '*/'

    StringTokenizer tokenizer = new StringTokenizer(varComment, " \n\t\r");
    if (tokenizer.countTokens() >= 3) {
        tokenizer.nextToken();  // ignore the @var
        String objectName = tokenizer.nextToken();
        String objectType = tokenizer.nextToken();
        if (objectName.charAt(0) != '$') {
            objectName = "$" + objectName;
        }
        parser.getParserClient().handleObjectInstansiation(objectName, objectType, null, parser.getCurrentLine(), varCommentleft, true);
    }

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // unticked_statement ::= error 
            {
              Object RESULT =null;
		int theErrorleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).left;
		int theErrorright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()).right;
		Object theError = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.peek()).value;
		
    parser.getParserClient().handleError("unticked_statement::=error ", theErrorleft, theErrorright, parser.getCurrentLine());

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // unticked_statement ::= T_THROW expr T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // unticked_statement ::= T_TRY T_CURLY_OPEN inner_statement_list T_CURLY_CLOSE T_CATCH T_OPEN_PARENTHESE fully_qualified_class_name tracked_variable T_CLOSE_PARENTHESE NT$0 T_CURLY_OPEN inner_statement_list T_CURLY_CLOSE additional_catches 
            {
              Object RESULT =null;
              // propagate RESULT from NT$0
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)).value;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-7)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-7)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-7)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-6)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-6)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-6)).value;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-13)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // NT$0 ::= 
            {
              Object RESULT =null;
		int classNameleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).left;
		int classNameright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).right;
		String className = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		String var = (String)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
 parser.getParserClient().handleObjectInstansiation(var, className, null, parser.getCurrentLine(), classNameleft, false); 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("NT$0",107, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // unticked_statement ::= T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // unticked_statement ::= T_DECLARE T_OPEN_PARENTHESE declare_list T_CLOSE_PARENTHESE declare_statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // unticked_statement ::= T_FOREACH T_OPEN_PARENTHESE expr_without_variable T_AS variable foreach_optional_arg T_CLOSE_PARENTHESE foreach_statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-7)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // unticked_statement ::= T_FOREACH T_OPEN_PARENTHESE variable T_AS foreach_variable foreach_optional_arg T_CLOSE_PARENTHESE foreach_statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-7)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // unticked_statement ::= T_UNSET T_OPEN_PARENTHESE unset_variables T_CLOSE_PARENTHESE T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // unticked_statement ::= T_USE use_filename T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // unticked_statement ::= expr T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // unticked_statement ::= T_INLINE_HTML 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // unticked_statement ::= T_ECHO echo_expr_list T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // unticked_statement ::= T_STATIC static_var_list T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // unticked_statement ::= T_GLOBAL global_var_list T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // unticked_statement ::= T_RETURN variable T_SEMICOLON 
            {
              Object RESULT =null;
		 parser.getParserClient().haveReturnValue(); 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // unticked_statement ::= T_RETURN expr_without_variable T_SEMICOLON 
            {
              Object RESULT =null;
		 parser.getParserClient().haveReturnValue(); 
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // unticked_statement ::= T_RETURN T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // unticked_statement ::= T_CONTINUE expr T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // unticked_statement ::= T_CONTINUE T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // unticked_statement ::= T_BREAK expr T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // unticked_statement ::= T_BREAK T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // unticked_statement ::= T_SWITCH T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE switch_case_list 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // unticked_statement ::= T_FOR T_OPEN_PARENTHESE for_expr T_SEMICOLON for_expr T_SEMICOLON for_expr T_CLOSE_PARENTHESE for_statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-8)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // unticked_statement ::= T_DO statement T_WHILE T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-6)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // unticked_statement ::= T_WHILE T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE while_statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-4)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // unticked_statement ::= T_IF T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE T_NEKUDOTAIM inner_statement_list new_elseif_list new_else_single T_ENDIF T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-9)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // unticked_statement ::= T_IF T_OPEN_PARENTHESE expr T_CLOSE_PARENTHESE statement elseif_list else_single 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-6)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // unticked_statement ::= T_CURLY_OPEN inner_statement_list T_CURLY_CLOSE 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("unticked_statement",6, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-2)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // statement ::= unticked_statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("statement",3, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // inner_statement ::= T_HALT_COMPILER T_OPEN_PARENTHESE T_CLOSE_PARENTHESE T_SEMICOLON 
            {
              Object RESULT =null;
		int haltleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).left;
		int haltright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).right;
		Object halt = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)).value;
		int closeleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int closeright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		Object close = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		
parser.syntax_error(new Symbol(3/*top_statement*/, haltleft, closeright, "__halt_compiler()"));

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("inner_statement",5, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // inner_statement ::= class_declaration_statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("inner_statement",5, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // inner_statement ::= function_declaration_statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("inner_statement",5, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // inner_statement ::= statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("inner_statement",5, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // inner_statement_list ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("inner_statement_list",4, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // inner_statement_list ::= inner_statement_list inner_statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("inner_statement_list",4, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // top_statement ::= T_HALT_COMPILER T_OPEN_PARENTHESE T_CLOSE_PARENTHESE T_SEMICOLON 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("top_statement",2, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-3)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // top_statement ::= class_declaration_statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("top_statement",2, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // top_statement ::= function_declaration_statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("top_statement",2, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // top_statement ::= statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("top_statement",2, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // top_statement_list ::= 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("top_statement_list",1, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // top_statement_list ::= top_statement_list top_statement 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("top_statement_list",1, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= thestart EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)).value;
		RESULT = start_val;
              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.elementAt(CUP$PhpParser5$top-1)), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$PhpParser5$parser.done_parsing();
          return CUP$PhpParser5$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // thestart ::= top_statement_list 
            {
              Object RESULT =null;

              CUP$PhpParser5$result = parser.getSymbolFactory().newSymbol("thestart",0, ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), ((java_cup.runtime.Symbol)CUP$PhpParser5$stack.peek()), RESULT);
            }
          return CUP$PhpParser5$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

